// ==================================================================================================== // 
// =============================  Using LPDDR54 PHY Configuration: CFG_3  ============================= // 
// ==================================================================================================== // 
Loading input file... ../inputs/csrInitStruct_cfg5_lp4_2133_x16.txt
CSRInit INFO: received a key MajorMode x16
CSRInit INFO: received a key MajorSystemMode LP4
CSRInit INFO: received a key MinorMode_iPLLCalMode 0
CSRInit INFO: received a key MinorMode_iDLLCalibrationMode 0
CSRInit INFO: received a key MinorMode_iClkEnMode 0
CSRInit INFO: received a key MinorMode_iRxTCTrain 0
CSRInit INFO: received a key MinorMode_iDFTProgram 0
CSRInit INFO: received a key SimMode_iDisableDebugPrint 0
CSRInit INFO: received a key dfiperiod 1876
CSRInit INFO: received a key dfi2ckratio 0
CSRInit INFO: received a key EffectiveRL 40
CSRInit INFO: received a key EffectiveWL 18
CSRInit INFO: received a key csr_WL 7
CSRInit INFO: received a key csr_nWR 7
CSRInit INFO: received a key csr_RL 7
CSRInit INFO: received a key csr_WLS 0
CSRInit INFO: received a key csr_DbiWr 0
CSRInit INFO: received a key csr_DbiRd 0
CSRInit INFO: received a key csr_DMD 0
CSRInit INFO: received a key tWDQS_on 8
CSRInit INFO: received a key tWDQS_off 36
CSRInit INFO: received a key latencyMode 1
CSRInit INFO: received a key PLL_DisableHwCal 0
CSRInit INFO: received a key PLL_NumCalClkCycles 16
CSRInit INFO: received a key DLL_EnablePeriodicCal 350
CSRInit INFO: received a key DLL_OverSampleRate 15
CSRInit INFO: received a key DLL_CodeChangeDelay 15
CSRInit INFO: received a key DLL_CommandWait 3
CSRInit INFO: received a key DLL_DcdlStart 0
CSRInit INFO: received a key DLL_DcdlStep 8
CSRInit INFO: received a key DLL_EnableUpdateLimit 1
CSRInit INFO: received a key DLL_UpdateLimit 4
Info @ FSP ch0_FSP0 : DFI period = 1876.000000 [ps], CK period = 469.000000 [ps]
location A 
Info @ FSP ch0_FSP1 : DFI period = 1250.000000 [ps], CK period = 312.500000 [ps]
location A 
// ==================================================================================================== // 
// =======================================  LP4 Configuration   ======================================= // 
// ==================================================================================================== // 
PHY Configuration: Bytes=2, LVLSSE=10, HVLSSE=4, LVHSSE=9, FSPs=2, Ranks=4 
Supported Rates: lp5_1to1=1, lp5_1to2=0, lp4_1to2=1, lp4_1to4=1 
// ==================================================================================================== // 
// ============================================  PHY CSRs  ============================================ // 
// ==================================================================================================== // 
hwWrite(CH, DATA, ADDR) = (0, 0x00070002, 0x0000A130) 
hwWrite(CH, DATA, ADDR) = (0, 0x00FF0000, 0x00008010) 
hwWrite(CH, DATA, ADDR) = (0, 0x00FF0000, 0x00008014) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00004000) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00008000) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000202, 0x00008020) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000202, 0x000080A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000400, 0x000080B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x000212E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x000212F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00021300) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x000292E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x000292F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00029300) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000101, 0x00008030) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00008080) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00008090) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000202, 0x00008024) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000202, 0x000080A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000400, 0x000080B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x000212E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x000212F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00021304) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x000292E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x000292F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00029304) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000101, 0x00008034) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00008084) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00008094) 
hwWrite(CH, DATA, ADDR) = (0, 0x04020400, 0x00021280) 
hwWrite(CH, DATA, ADDR) = (0, 0x04020400, 0x00029280) 
hwWrite(CH, DATA, ADDR) = (0, 0x04020400, 0x00021284) 
hwWrite(CH, DATA, ADDR) = (0, 0x04020400, 0x00029284) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00021230) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00029230) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00021234) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00029234) 
hwWrite(CH, DATA, ADDR) = (0, 0x01000101, 0x0000A000) 
hwWrite(CH, DATA, ADDR) = (0, 0x01000101, 0x0000A004) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000007, 0x0000A0A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000007, 0x0000A0A4) 
// ------------------------------  Setting Clock enable features to OFF  ------------------------------ // 
hwWrite(CH, DATA, ADDR) = (0, 0x00F00000, 0x00008010) 
hwWrite(CH, DATA, ADDR) = (0, 0x00F00000, 0x00008014) 
hwWrite(CH, DATA, ADDR) = (0, 0x8B020400, 0x00008038) 
// ---------------------------------  Setting WPTR reset values ...   --------------------------------- // 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00009190) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00009194) 
// ==================================================================================================== // 
// ========================================  DataBank Timings  ======================================== // 
// ==================================================================================================== // 
hwWrite(CH, DATA, ADDR) = (0, 0x00280000, 0x00010000) 
hwWrite(CH, DATA, ADDR) = (0, 0x00160000, 0x00010004) 
hwWrite(CH, DATA, ADDR) = (0, 0x00080012, 0x00010008) 
hwWrite(CH, DATA, ADDR) = (0, 0x0008000A, 0x0001000C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00010010) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00010014) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040000, 0x00010018) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040000, 0x0001001C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00010020) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010004, 0x00010024) 
hwWrite(CH, DATA, ADDR) = (0, 0x00140004, 0x00010028) 
hwWrite(CH, DATA, ADDR) = (0, 0x00140004, 0x0001002C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0014, 0x00010030) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0014, 0x00010034) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010004, 0x00010038) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010004, 0x0001003C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000501AB, 0x00010040) 
hwWrite(CH, DATA, ADDR) = (0, 0x00050280, 0x00010044) 
hwWrite(CH, DATA, ADDR) = (0, 0x0040001C, 0x00010048) 
hwWrite(CH, DATA, ADDR) = (0, 0x00600028, 0x0001004C) 
hwWrite(CH, DATA, ADDR) = (0, 0x001801AB, 0x00010050) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200280, 0x00010054) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010058) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001005C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010060) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010064) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040855, 0x00010068) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040C80, 0x0001006C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010070) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010074) 
hwWrite(CH, DATA, ADDR) = (0, 0x04040002, 0x00010078) 
hwWrite(CH, DATA, ADDR) = (0, 0x04040002, 0x0001007C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0016000B, 0x00010080) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200010, 0x00010084) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040016, 0x00010088) 
hwWrite(CH, DATA, ADDR) = (0, 0x00060020, 0x0001008C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120216, 0x00010090) 
hwWrite(CH, DATA, ADDR) = (0, 0x001A0320, 0x00010094) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000010, 0x00010098) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000018, 0x0001009C) 
hwWrite(CH, DATA, ADDR) = (0, 0x002B4E20, 0x000100A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00404E20, 0x000100A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000100A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000100AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00220004, 0x000100B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00320005, 0x000100B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00050000, 0x000100B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070000, 0x000100BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x02150005, 0x000100C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x03200007, 0x000100C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000AA, 0x000100C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x000100CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00020000, 0x000100D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00020000, 0x000100D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0003, 0x000100D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00160003, 0x000100DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00170001, 0x000100E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x001D0001, 0x000100E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00080018, 0x000100E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x000C001E, 0x000100EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000018, 0x000100F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000001E, 0x000100F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000100F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000100FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00280000, 0x00010100) 
hwWrite(CH, DATA, ADDR) = (0, 0x00280000, 0x00010104) 
hwWrite(CH, DATA, ADDR) = (0, 0x002A0001, 0x00010108) 
hwWrite(CH, DATA, ADDR) = (0, 0x00400001, 0x0001010C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010110) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010114) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010118) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001011C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030002, 0x00010120) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030002, 0x00010124) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010010, 0x00010128) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010017, 0x0001012C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00160015, 0x00010130) 
hwWrite(CH, DATA, ADDR) = (0, 0x001C001B, 0x00010134) 
hwWrite(CH, DATA, ADDR) = (0, 0x0016000A, 0x00010138) 
hwWrite(CH, DATA, ADDR) = (0, 0x001C000C, 0x0001013C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00100010, 0x00010140) 
hwWrite(CH, DATA, ADDR) = (0, 0x00180018, 0x00010144) 
hwWrite(CH, DATA, ADDR) = (0, 0x01AB01AB, 0x00010148) 
hwWrite(CH, DATA, ADDR) = (0, 0x02800280, 0x0001014C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000216, 0x00010150) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000320, 0x00010154) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000856, 0x00010158) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000880, 0x0001015C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010160) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010164) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010168) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001016C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010170) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010174) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010178) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001017C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070004, 0x00010180) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070004, 0x00010184) 
hwWrite(CH, DATA, ADDR) = (0, 0x0009000A, 0x00010188) 
hwWrite(CH, DATA, ADDR) = (0, 0x0001000A, 0x0001018C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070002, 0x00010190) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070002, 0x00010194) 
hwWrite(CH, DATA, ADDR) = (0, 0x00020002, 0x00010198) 
hwWrite(CH, DATA, ADDR) = (0, 0x00020002, 0x0001019C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010000, 0x000101A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010000, 0x000101A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120028, 0x000101A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0016, 0x000101AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00240008, 0x000101B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00240008, 0x000101B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0004, 0x000101B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120004, 0x000101BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x001E0008, 0x000101C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x002D0008, 0x000101C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0014001E, 0x000101C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0014002D, 0x000101CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00140014, 0x000101D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00140014, 0x000101D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000101D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000101DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00160000, 0x000101E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200000, 0x000101E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000016, 0x000101E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000020, 0x000101EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000101F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000101F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000101F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000101FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000002B, 0x00010200) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000040, 0x00010204) 
hwWrite(CH, DATA, ADDR) = (0, 0x02800000, 0x00010208) 
hwWrite(CH, DATA, ADDR) = (0, 0x03C00000, 0x0001020C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010210) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010214) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010218) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001021C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010220) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010224) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010228) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001022C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010230) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010234) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010238) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001023C) 
hwWrite(CH, DATA, ADDR) = (0, 0x2083032B, 0x00010240) 
hwWrite(CH, DATA, ADDR) = (0, 0x30CB04C0, 0x00010244) 
hwWrite(CH, DATA, ADDR) = (0, 0x0027002D, 0x00010248) 
hwWrite(CH, DATA, ADDR) = (0, 0x003A0044, 0x0001024C) 
hwWrite(CH, DATA, ADDR) = (0, 0xFFFF0000, 0x00010250) 
hwWrite(CH, DATA, ADDR) = (0, 0xFFFF0000, 0x00010254) 
hwWrite(CH, DATA, ADDR) = (0, 0xFFFFFFFF, 0x00010258) 
hwWrite(CH, DATA, ADDR) = (0, 0xFFFFFFFF, 0x0001025C) 
hwWrite(CH, DATA, ADDR) = (0, 0xFFFFFFFF, 0x00010260) 
hwWrite(CH, DATA, ADDR) = (0, 0xFFFFFFFF, 0x00010264) 
hwWrite(CH, DATA, ADDR) = (0, 0xFFFFFFFF, 0x00010268) 
hwWrite(CH, DATA, ADDR) = (0, 0xFFFFFFFF, 0x0001026C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FFFF, 0x00010270) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FFFF, 0x00010274) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010278) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001027C) 
hwWrite(CH, DATA, ADDR) = (0, 0x033B0020, 0x00010280) 
hwWrite(CH, DATA, ADDR) = (0, 0x04D80030, 0x00010284) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010288) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001028C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010290) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010294) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00010298) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0001029C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000010, 0x000102A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000018, 0x000102A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000102A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000102AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000102B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000102B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000102B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000102BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000102C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000102C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030003, 0x000102C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030003, 0x000102CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00130001, 0x000102D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00130001, 0x000102D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00210006, 0x000102D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00210006, 0x000102DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00310030, 0x000102E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00310030, 0x000102E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x000102E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x000102EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00320001, 0x000102F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00320001, 0x000102F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200020, 0x000102F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200020, 0x000102FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030002, 0x00010300) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030002, 0x00010304) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x00010308) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x0001030C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B0001, 0x00010310) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070001, 0x00010314) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010021, 0x00010318) 
hwWrite(CH, DATA, ADDR) = (0, 0x0001001D, 0x0001031C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00010320) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00010324) 
hwWrite(CH, DATA, ADDR) = (0, 0x00220001, 0x00010328) 
hwWrite(CH, DATA, ADDR) = (0, 0x001E0001, 0x0001032C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200020, 0x00010330) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200020, 0x00010334) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030003, 0x00010338) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030003, 0x0001033C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00280001, 0x00010340) 
hwWrite(CH, DATA, ADDR) = (0, 0x00240001, 0x00010344) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B0001, 0x00010348) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070001, 0x0001034C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B001B, 0x00010350) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070017, 0x00010354) 
hwWrite(CH, DATA, ADDR) = (0, 0x0001001A, 0x00010358) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010016, 0x0001035C) 
hwWrite(CH, DATA, ADDR) = (0, 0x001C0001, 0x00010360) 
hwWrite(CH, DATA, ADDR) = (0, 0x00180001, 0x00010364) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200020, 0x00010368) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200020, 0x0001036C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040002, 0x00010370) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040002, 0x00010374) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x00010378) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x0001037C) 
hwWrite(CH, DATA, ADDR) = (0, 0x005A0001, 0x00010380) 
hwWrite(CH, DATA, ADDR) = (0, 0x00560001, 0x00010384) 
hwWrite(CH, DATA, ADDR) = (0, 0x00500006, 0x00010388) 
hwWrite(CH, DATA, ADDR) = (0, 0x00500004, 0x0001038C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00010390) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00010394) 
hwWrite(CH, DATA, ADDR) = (0, 0x006B0001, 0x00010398) 
hwWrite(CH, DATA, ADDR) = (0, 0x00680001, 0x0001039C) 
hwWrite(CH, DATA, ADDR) = (0, 0x02200220, 0x000103A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x02200220, 0x000103A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040003, 0x000103A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040003, 0x000103AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x003C0003, 0x000103B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x003C0003, 0x000103B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00320001, 0x000103B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x002E0001, 0x000103BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00280006, 0x000103C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00280004, 0x000103C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00290002, 0x000103C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00290002, 0x000103CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00410001, 0x000103D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x003D0001, 0x000103D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x02200220, 0x000103D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x02200220, 0x000103DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000103E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000103E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000103E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000103EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000103F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000103F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000103F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000103FC) 
// ==================================================================================================== // 
// ============================================  DRAM MRs  ============================================ // 
// ==================================================================================================== // 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC00) 
hwWrite(CH, DATA, ADDR) = (0, 0x000001FC, 0x0000AC10) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000013F, 0x0000AC20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000131, 0x0000AC30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000203, 0x0000AC40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000ACA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000ACB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000024D, 0x0000ACC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000140, 0x0000ACD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000024D, 0x0000ACE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000155, 0x0000ACF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AD00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AD10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AD20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AD30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000155, 0x0000AD40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AD50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AD60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AD70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000002, 0x0000AD80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AD90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000ADA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000ADB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000ADC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000ADD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000ADE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000ADF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000015A, 0x0000AE00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AE40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AE70) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000013C, 0x0000AE80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC04) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000018C, 0x0000AC14) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000011B, 0x0000AC24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000131, 0x0000AC34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000203, 0x0000AC44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AC94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000ACA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000ACB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000024D, 0x0000ACC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000140, 0x0000ACD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000024D, 0x0000ACE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000155, 0x0000ACF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AD04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AD14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AD24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AD34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000155, 0x0000AD44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AD54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AD64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AD74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000002, 0x0000AD84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AD94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000ADA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000ADB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000ADC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000ADD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000ADE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000ADF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000015A, 0x0000AE04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000AE44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000300, 0x0000AE64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x0000AE74) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000013C, 0x0000AE84) 
// ==================================================================================================== // 
// ============================================  MDLL CSRs ============================================ // 
// ==================================================================================================== // 
// ++++++++++++++++++++++++++++++++++ DLL Calibration mode default   ++++++++++++++++++++++++++++++++++ // 
hwWrite(CH, DATA, ADDR) = (0, 0x003C3C3C, 0x000088F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00080003, 0x00008900) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000008, 0x00008920) 
hwWrite(CH, DATA, ADDR) = (0, 0x00002710, 0x00008910) 
hwWrite(CH, DATA, ADDR) = (0, 0x00002710, 0x00008914) 
// ==================================================================================================== // 
// ===================================  Impedance Calibration CSRs  =================================== // 
// ==================================================================================================== // 
// ==================================================================================================== // 
// ================================== Impedance Calibration Settings ================================== // 
// ==================================================================================================== // 
// +++ Impedance Calibration Mode 2: on during PHYPREP, periodic calibration on with low bandwidth  +++ // 
// +++++++++++++++++++++++++++++++++++++ Use simulation numbers   +++++++++++++++++++++++++++++++++++++ // 
hwWrite(CH, DATA, ADDR) = (0, 0x06A20904, 0x00008800) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000001A, 0x00008810) 
hwWrite(CH, DATA, ADDR) = (0, 0x00440002, 0x00008880) 
// ==================================================================================================== // 
// ==========================================  Training CSRs ========================================== // 
// ==================================================================================================== // 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018030) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018100) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018170) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018240) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x000182B0) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018380) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x000183F0) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x000184C0) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018530) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018600) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018670) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018740) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x000187B0) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018880) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x000188F0) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x000189C0) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018A30) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018B00) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018B70) 
hwWrite(CH, DATA, ADDR) = (0, 0xD2B42C4A, 0x00018C40) 
// ==================================================================================================== // 
// ============================================  PLL CSRs  ============================================ // 
// ==================================================================================================== // 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000088B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00055165, 0x000090D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x002088E4, 0x00009860) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000215, 0x00009870) 
hwWrite(CH, DATA, ADDR) = (0, 0x4B440055, 0x000090E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00055165, 0x000090D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0030D400, 0x00009864) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000320, 0x00009874) 
hwWrite(CH, DATA, ADDR) = (0, 0x4B440055, 0x000090E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000104, 0x000088C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000104, 0x000088C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00100100, 0x000088D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00100100, 0x000088D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00008980) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000002, 0x00008990) 
// ==================================================================================================== // 
// ==========================================  Bump Mapping  ========================================== // 
// ==================================================================================================== // 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00008064) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00008064) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0015, 0x00020EE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00130002, 0x00020EF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000018, 0x00020F00) 
hwWrite(CH, DATA, ADDR) = (0, 0x0002000D, 0x00020F10) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0015, 0x00028EE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00130002, 0x00028EF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000018, 0x00028F00) 
hwWrite(CH, DATA, ADDR) = (0, 0x0002000D, 0x00028F10) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0015, 0x00020EE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B0002, 0x00020EF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000018, 0x00020F04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00020005, 0x00020F14) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0015, 0x00028EE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B0002, 0x00028EF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000018, 0x00028F04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00020005, 0x00028F14) 
// ==================================================================================================== // 
// ==========================================  PSM Firmware  ========================================== // 
// ==================================================================================================== // 
PSM DBG: Program PMEM has Number of SubRoutines = 33
    PSM DBG SUB: Current SubRoutine PMEM_LP4_INTR_REF number of Instr in crt SUB = 10
        CRT INSTR         LP4_INTR_REF <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR         LP4_INTR_REF <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
        CRT INSTR         LP4_INTR_REF <>               CAUSER @                     (CMD, OP) = (29, 00000010000092) 
        CRT INSTR         LP4_INTR_REF <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
        CRT INSTR         LP4_INTR_REF <>               CAUSER @                     (CMD, OP) = (29, 00000028000090) 
        CRT INSTR         LP4_INTR_REF <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
        CRT INSTR         LP4_INTR_REF <>               CAUSER @                     (CMD, OP) = (29, 00000001000000) 
        CRT INSTR         LP4_INTR_REF <>               CAUSER @                     (CMD, OP) = (29, 00000003000093) 
        CRT INSTR         LP4_INTR_REF <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR         LP4_INTR_REF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_MAIN number of Instr in crt SUB = 55
        CRT INSTR             LP4_MAIN <>                MOVMR @                     (CMD, OP) = (1B, 0000000000030A) 
        CRT INSTR             LP4_MAIN <>                MOVMR @                     (CMD, OP) = (1B, 00000000000D0B) 
        CRT INSTR             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 0000000000FF00) 
        CRT INSTR             LP4_MAIN <>                ANDRR @                     (CMD, OP) = (11, 000000000A000C) 
        CRT INSTR             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000003F00) 
        CRT INSTR             LP4_MAIN <>                ANDRR @                     (CMD, OP) = (11, 000000000B000D) 
        CRT INSTR             LP4_MAIN <>                MOVRR @                     (CMD, OP) = (0D, 00000000000D0B) 
        CRT INSTR             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 00000000000D0D) 
        CRT INSTR             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 0000000000C000) 
        CRT INSTR             LP4_MAIN <>                 ORRR @                     (CMD, OP) = (12, 000000000A0000) 
        CRT INSTR             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 00000000000003) 
        CRT INSTR             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 0000000000DF00) 
        CRT INSTR             LP4_MAIN <>                ANDRR @                     (CMD, OP) = (11, 000000000B0000) 
        CRT INSTR             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 0000000000000D) 
        CRT INSTR             LP4_MAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                MOVRD @                     (CMD, OP) = (18, 0000000000001C) 
        CRT INSTR             LP4_MAIN <>               DRVWCK @                     (CMD, OP) = (2F, 00000000000000) 
        CRT INSTR             LP4_MAIN <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000002FFFF) 
        CRT INSTR             LP4_MAIN <>              CFGDATR @                     (CMD, OP) = (8D, 0000001F0007FF) 
        CRT INSTR             LP4_MAIN <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
        CRT INSTR             LP4_MAIN <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000000000000) 
        CRT INSTR             LP4_MAIN <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
        CRT INSTR             LP4_MAIN <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
        CRT INSTR             LP4_MAIN <>                 CALL @   LP4_PROC_CBT_VREF (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000004) 
        CRT INSTR             LP4_MAIN <>              RNKEVAL @                     (CMD, OP) = (A2, 00000000000004) 
        CRT INSTR             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283003) 
        CRT INSTR             LP4_MAIN <>                MOVDR @                     (CMD, OP) = (10, 00000000000900) 
        CRT INSTR             LP4_MAIN <>                ADDRR @                     (CMD, OP) = (0E, 00000000030003) 
        CRT INSTR             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
        CRT INSTR             LP4_MAIN <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110003) 
        CRT INSTR             LP4_MAIN <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
        CRT INSTR             LP4_MAIN <>                 CALL @       LP4_PROC_DQST (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000010) 
        CRT INSTR             LP4_MAIN <>              RNKEVAL @                     (CMD, OP) = (A2, 00000000000004) 
        CRT INSTR             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR             LP4_MAIN <>               DRVWCK @                     (CMD, OP) = (2F, 0000000007000A) 
        CRT INSTR             LP4_MAIN <>                 CALL @   LP4_PROC_READGATE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @      LP4_PROC_WRITF (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR             LP4_MAIN <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
        CRT INSTR             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 00000000000C03) 
        CRT INSTR             LP4_MAIN <>                CAMRS @                     (CMD, OP) = (21, 00000000030071) 
        CRT INSTR             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 0000000000C000) 
        CRT INSTR             LP4_MAIN <>                 ORRR @                     (CMD, OP) = (12, 000000000D000D) 
        CRT INSTR             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 00000000000D0D) 
        CRT INSTR             LP4_MAIN <>                CAMRS @                     (CMD, OP) = (21, 000000000D0054) 
        CRT INSTR             LP4_MAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR             LP4_MAIN <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_INCR number of Instr in crt SUB = 38
        CRT INSTR             LP4_INCR <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                SETRR @                     (CMD, OP) = (0C, 00000000261000) 
        CRT INSTR             LP4_INCR <>              APBREAD @                     (CMD, OP) = (FB, 00000000000000) 
        CRT INSTR             LP4_INCR <>                SETRR @                     (CMD, OP) = (0C, 00000000038001) 
        CRT INSTR             LP4_INCR <>                ANDRR @                     (CMD, OP) = (11, 000000000D0101) 
        CRT INSTR             LP4_INCR <>                LSHFT @                     (CMD, OP) = (15, 00000000070100) 
        CRT INSTR             LP4_INCR <>               JUMPIF @      IF_DRAM_ACTIVE (CMD, OP) = (06, 00000000000007) 
        CRT INSTR             LP4_INCR <>               JUMPIF @        IF_DRAM_IDLE (CMD, OP) = (06, 00000000000000) 
        CRT INSTR             LP4_INCR <>               CAUSER @      IF_DRAM_ACTIVE (CMD, OP) = (29, 00000010000092) 
        CRT INSTR             LP4_INCR <>               JUMPIF @ IF_DRAM_ACTIVE_DONE (CMD, OP) = (06, 00000000000007) 
        CRT INSTR             LP4_INCR <>                CADES @        IF_DRAM_IDLE (CMD, OP) = (23, 00000000000092) 
        CRT INSTR             LP4_INCR <>                  NOP @ IF_DRAM_ACTIVE_DONE (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                MOVDR @                     (CMD, OP) = (10, 00000000001C00) 
        CRT INSTR             LP4_INCR <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
        CRT INSTR             LP4_INCR <>               JUMPIF @           IF_READ_0 (CMD, OP) = (06, 00000000000001) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_WRITE_0 (CMD, OP) = (06, 00000000000002) 
        CRT INSTR             LP4_INCR <>                 CALL @   LP4_PROC_READGATE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @            IF_RGT_1 (CMD, OP) = (06, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @           IF_READ_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @           IF_READ_1 (CMD, OP) = (06, 00000000000001) 
        CRT INSTR             LP4_INCR <>                  NOP @          IF_WRITE_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_WRITE_1 (CMD, OP) = (06, 00000000000002) 
        CRT INSTR             LP4_INCR <>                  NOP @           IF_READ_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @          IF_WRITE_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @            IF_RGT_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR             LP4_INCR <>               DRVWCK @                     (CMD, OP) = (2F, 0000000007000A) 
        CRT INSTR             LP4_INCR <>                 CALL @        LP4_DRAMSRFX (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_RESET_0 (CMD, OP) = (06, 00000000000002) 
        CRT INSTR             LP4_INCR <>                INCRR @                     (CMD, OP) = (0A, 00000000000100) 
        CRT INSTR             LP4_INCR <>              JUMPNIF @       IF_NO_RESET_0 (CMD, OP) = (07, 00000000000003) 
        CRT INSTR             LP4_INCR <>                SETRR @          IF_RESET_0 (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @       IF_NO_RESET_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                MOVRD @                     (CMD, OP) = (18, 0000000000001C) 
        CRT INSTR             LP4_INCR <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_MAIN_EMPTY number of Instr in crt SUB = 3
        CRT INSTR       LP4_MAIN_EMPTY <>                  NOP @                     (CMD, OP) = (00, 00000000000014) 
        CRT INSTR       LP4_MAIN_EMPTY <>                 HALT @                     (CMD, OP) = (03, 00000000000000) 
        CRT INSTR       LP4_MAIN_EMPTY <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_MAIN_DRAMINIT number of Instr in crt SUB = 19
        CRT INSTR    LP4_MAIN_DRAMINIT <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                SELRK @                     (CMD, OP) = (2A, 00000000000F0F) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_DRAMINIT (CMD, OP) = (05, 00000000000032) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>               CAUSER @                     (CMD, OP) = (29, 000000200F0000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                  NOP @                     (CMD, OP) = (00, 0000000000000A) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @            LP4_MAIN (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000050F0004) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000002FFFF) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @    LP4_RETRAIN_INIT (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_MAIN_DRAMSRF number of Instr in crt SUB = 11
        CRT INSTR     LP4_MAIN_DRAMSRF <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                SELRK @                     (CMD, OP) = (2A, 0000004000000F) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                MOVMR @                     (CMD, OP) = (1B, 00000000000D0B) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                SETRR @                     (CMD, OP) = (0C, 00000000003F00) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                ANDRR @                     (CMD, OP) = (11, 000000000B000B) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                MOVRM @                     (CMD, OP) = (1A, 00000000000B0D) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 00000000000028) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 00000000000000) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @            LP4_MAIN (CMD, OP) = (05, 00000000000172) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_MAIN_DRAMSRFPD number of Instr in crt SUB = 9
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                  NOP @                     (CMD, OP) = (00, 00000000000023) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                SELRK @                     (CMD, OP) = (2A, 0000000000000F) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                SETRR @                     (CMD, OP) = (0C, 00000000000F00) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                SELRK @                     (CMD, OP) = (2A, 0000000000000F) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                  NOP @                     (CMD, OP) = (00, 000000000000A8) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                 CALL @    LP4_MAIN_DRAMSRF (CMD, OP) = (05, 00000000000000) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_DRAMINIT number of Instr in crt SUB = 22
        CRT INSTR         LP4_DRAMINIT <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_DRAMINIT <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
        CRT INSTR         LP4_DRAMINIT <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000050E0000) 
        CRT INSTR         LP4_DRAMINIT <>             SETSLSPD @                     (CMD, OP) = (40, 00000000000001) 
        CRT INSTR         LP4_DRAMINIT <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000050E0000) 
        CRT INSTR         LP4_DRAMINIT <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_DRAMINIT <>             SETSLSPD @                     (CMD, OP) = (40, 00000040030001) 
        CRT INSTR         LP4_DRAMINIT <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_DRAMINIT <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
        CRT INSTR         LP4_DRAMINIT <>                SELRK @                     (CMD, OP) = (2A, 00000000000F00) 
        CRT INSTR         LP4_DRAMINIT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR         LP4_DRAMINIT <>                CADES @                     (CMD, OP) = (23, 00000000000000) 
        CRT INSTR         LP4_DRAMINIT <>                RESET @                     (CMD, OP) = (2D, 00000000000014) 
        CRT INSTR         LP4_DRAMINIT <>                RESET @                     (CMD, OP) = (2D, 00000000010010) 
        CRT INSTR         LP4_DRAMINIT <>              STARTCK @                     (CMD, OP) = (2B, 00000000010000) 
        CRT INSTR         LP4_DRAMINIT <>                CADES @                     (CMD, OP) = (23, 00000000000011) 
        CRT INSTR         LP4_DRAMINIT <>                SETRR @                     (CMD, OP) = (0C, 00000000000F0F) 
        CRT INSTR         LP4_DRAMINIT <>                SELRK @                     (CMD, OP) = (2A, 00000000000F00) 
        CRT INSTR         LP4_DRAMINIT <>                CANOP @                     (CMD, OP) = (24, 00000000000012) 
        CRT INSTR         LP4_DRAMINIT <>                SELRK @                     (CMD, OP) = (2A, 00000000000F0F) 
        CRT INSTR         LP4_DRAMINIT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR         LP4_DRAMINIT <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_TOGGLE_CKE number of Instr in crt SUB = 4
        CRT INSTR       LP4_TOGGLE_CKE <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_TOGGLE_CKE <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
        CRT INSTR       LP4_TOGGLE_CKE <>                SELRK @                     (CMD, OP) = (2A, 00000080000000) 
        CRT INSTR       LP4_TOGGLE_CKE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_TURN_OFF_DQS number of Instr in crt SUB = 7
        CRT INSTR     LP4_TURN_OFF_DQS <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR     LP4_TURN_OFF_DQS <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
        CRT INSTR     LP4_TURN_OFF_DQS <>                SETRR @                     (CMD, OP) = (0C, 00000000846001) 
        CRT INSTR     LP4_TURN_OFF_DQS <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
        CRT INSTR     LP4_TURN_OFF_DQS <>                SETRR @                     (CMD, OP) = (0C, 00000000A46001) 
        CRT INSTR     LP4_TURN_OFF_DQS <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
        CRT INSTR     LP4_TURN_OFF_DQS <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_TURN_OFF_DQS_WO0 number of Instr in crt SUB = 12
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                MOVDR @                     (CMD, OP) = (10, 00000000003D02) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000000020000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                SETRR @                     (CMD, OP) = (0C, 00000000846001) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>               JUMPIF @   IF_ST_BYTEINDEX_1 (CMD, OP) = (06, 00000000020001) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                SETRR @                     (CMD, OP) = (0C, 00000000A46001) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                  NOP @   IF_ST_BYTEINDEX_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_WRITE_MRS number of Instr in crt SUB = 13
        CRT INSTR        LP4_WRITE_MRS <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 00000000010071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 0000000B020071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 0000000E030071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 0000000E200071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 0000000E280071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 000000000C0071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 000000000E0071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 00000000170071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 000000000B0071) 
        CRT INSTR        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 00000000160071) 
        CRT INSTR        LP4_WRITE_MRS <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR        LP4_WRITE_MRS <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_GOTOLSPD number of Instr in crt SUB = 18
        CRT INSTR         LP4_GOTOLSPD <>                SELRK @                     (CMD, OP) = (2A, 00000040000F0F) 
        CRT INSTR         LP4_GOTOLSPD <>                MOVMR @                     (CMD, OP) = (1B, 00000000000D00) 
        CRT INSTR         LP4_GOTOLSPD <>                SETRR @                     (CMD, OP) = (0C, 00000000004801) 
        CRT INSTR         LP4_GOTOLSPD <>                 ORRR @                     (CMD, OP) = (12, 00000000000100) 
        CRT INSTR         LP4_GOTOLSPD <>                MOVRM @                     (CMD, OP) = (1A, 0000000000000D) 
        CRT INSTR         LP4_GOTOLSPD <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
        CRT INSTR         LP4_GOTOLSPD <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
        CRT INSTR         LP4_GOTOLSPD <>                SETRR @                     (CMD, OP) = (0C, 0000000000030D) 
        CRT INSTR         LP4_GOTOLSPD <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000050E0000) 
        CRT INSTR         LP4_GOTOLSPD <>             SETSLSPD @                     (CMD, OP) = (40, 00000000000054) 
        CRT INSTR         LP4_GOTOLSPD <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000050E0000) 
        CRT INSTR         LP4_GOTOLSPD <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_GOTOLSPD <>             SETSLSPD @                     (CMD, OP) = (40, 000000400D0054) 
        CRT INSTR         LP4_GOTOLSPD <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_GOTOLSPD <>                CAMRS @                     (CMD, OP) = (21, 000000480D0071) 
        CRT INSTR         LP4_GOTOLSPD <>                  NOP @                     (CMD, OP) = (00, 00000000000054) 
        CRT INSTR         LP4_GOTOLSPD <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR         LP4_GOTOLSPD <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_GOTOHSPD number of Instr in crt SUB = 10
        CRT INSTR         LP4_GOTOHSPD <>                SELRK @                     (CMD, OP) = (2A, 00000040000F0F) 
        CRT INSTR         LP4_GOTOHSPD <>                MOVMR @                     (CMD, OP) = (1B, 00000000000D00) 
        CRT INSTR         LP4_GOTOHSPD <>                SETRR @                     (CMD, OP) = (0C, 0000000000C801) 
        CRT INSTR         LP4_GOTOHSPD <>                 ORRR @                     (CMD, OP) = (12, 00000000000100) 
        CRT INSTR         LP4_GOTOHSPD <>                MOVRM @                     (CMD, OP) = (1A, 0000000000000D) 
        CRT INSTR         LP4_GOTOHSPD <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
        CRT INSTR         LP4_GOTOHSPD <>                CAMRS @                     (CMD, OP) = (21, 000000C80D0071) 
        CRT INSTR         LP4_GOTOHSPD <>             RSTSLSPD @                     (CMD, OP) = (41, 00000000000054) 
        CRT INSTR         LP4_GOTOHSPD <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR         LP4_GOTOHSPD <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_DQST number of Instr in crt SUB = 60
        CRT INSTR        LP4_PROC_DQST <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
        CRT INSTR        LP4_PROC_DQST <>                MOVMR @                     (CMD, OP) = (1B, 00000000000200) 
        CRT INSTR        LP4_PROC_DQST <>                SETRR @                     (CMD, OP) = (0C, 00000000008001) 
        CRT INSTR        LP4_PROC_DQST <>                 ORRR @                     (CMD, OP) = (12, 00000000000100) 
        CRT INSTR        LP4_PROC_DQST <>                MOVRM @                     (CMD, OP) = (1A, 00000000000002) 
        CRT INSTR        LP4_PROC_DQST <>                CAMRS @                     (CMD, OP) = (21, 0000009B020041) 
        CRT INSTR        LP4_PROC_DQST <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR        LP4_PROC_DQST <>             GETASYNC @                     (CMD, OP) = (62, 000000000F0000) 
        CRT INSTR        LP4_PROC_DQST <>               SETTRN @                     (CMD, OP) = (A0, 00000000000010) 
        CRT INSTR        LP4_PROC_DQST <>               DRVWCK @                     (CMD, OP) = (2F, 00000000080000) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFF) 
        CRT INSTR        LP4_PROC_DQST <>               ENCSRW @                     (CMD, OP) = (A1, 0000000000000C) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA104FFC) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000019030520) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000002000000) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSEQ2 @                     (CMD, OP) = (82, 000000081C1B01) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSEQ3 @                     (CMD, OP) = (83, 00000001010101) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000001) 
        CRT INSTR        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004A14) 
        CRT INSTR        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004913) 
        CRT INSTR        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004818) 
        CRT INSTR        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004B19) 
        CRT INSTR        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004C1A) 
        CRT INSTR        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004D1B) 
        CRT INSTR        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004E1C) 
        CRT INSTR        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004F20) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFD) 
        CRT INSTR        LP4_PROC_DQST <>              CFGDATG @                     (CMD, OP) = (8C, 00000000000F83) 
        CRT INSTR        LP4_PROC_DQST <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000039) 
        CRT INSTR        LP4_PROC_DQST <>              CFGDATR @                     (CMD, OP) = (8D, 00000050008A83) 
        CRT INSTR        LP4_PROC_DQST <>              CFGDATR @                     (CMD, OP) = (8D, 00000050008A82) 
        CRT INSTR        LP4_PROC_DQST <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000040FFFF) 
        CRT INSTR        LP4_PROC_DQST <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @            FOR_LOOP (CMD, OP) = (8A, 0000005A004521) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004522) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A304520) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004521) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004520) 
        CRT INSTR        LP4_PROC_DQST <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
        CRT INSTR        LP4_PROC_DQST <>                INCRR @                     (CMD, OP) = (0A, 00000000000103) 
        CRT INSTR        LP4_PROC_DQST <>              JUMPNIF @            FOR_LOOP (CMD, OP) = (07, 000000B3030002) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058004520) 
        CRT INSTR        LP4_PROC_DQST <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000000C) 
        CRT INSTR        LP4_PROC_DQST <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058004521) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058204520) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058004521) 
        CRT INSTR        LP4_PROC_DQST <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
        CRT INSTR        LP4_PROC_DQST <>                MOVMR @                     (CMD, OP) = (1B, 00000000000200) 
        CRT INSTR        LP4_PROC_DQST <>                SETRR @                     (CMD, OP) = (0C, 00000000007F01) 
        CRT INSTR        LP4_PROC_DQST <>                ANDRR @                     (CMD, OP) = (11, 00000000000100) 
        CRT INSTR        LP4_PROC_DQST <>                MOVRM @                     (CMD, OP) = (1A, 00000000000002) 
        CRT INSTR        LP4_PROC_DQST <>                CAMRS @                     (CMD, OP) = (21, 0000001B020071) 
        CRT INSTR        LP4_PROC_DQST <>             RSTASYNC @                     (CMD, OP) = (61, 000000000F0071) 
        CRT INSTR        LP4_PROC_DQST <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR        LP4_PROC_DQST <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR        LP4_PROC_DQST <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000039) 
        CRT INSTR        LP4_PROC_DQST <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR        LP4_PROC_DQST <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
        CRT INSTR        LP4_PROC_DQST <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_CBT number of Instr in crt SUB = 106
        CRT INSTR         LP4_PROC_CBT <>               SETTRN @                     (CMD, OP) = (A0, 00000000000004) 
        CRT INSTR         LP4_PROC_CBT <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000009) 
        CRT INSTR         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR         LP4_PROC_CBT <>             GETASYNC @                     (CMD, OP) = (62, 000000000F0000) 
        CRT INSTR         LP4_PROC_CBT <>                CAMRS @                     (CMD, OP) = (21, 000000400D0071) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
        CRT INSTR         LP4_PROC_CBT <>                MOVRM @                     (CMD, OP) = (1A, 0000000000000C) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000008704) 
        CRT INSTR         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
        CRT INSTR         LP4_PROC_CBT <>                CAMRS @                     (CMD, OP) = (21, 000000000C0071) 
        CRT INSTR         LP4_PROC_CBT <>               DRVWCK @                     (CMD, OP) = (2F, 00000000080072) 
        CRT INSTR         LP4_PROC_CBT <>             SETASYNC @                     (CMD, OP) = (60, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>             SETASYNC @                     (CMD, OP) = (60, 00000000010000) 
        CRT INSTR         LP4_PROC_CBT <>             OENASYNC @                     (CMD, OP) = (63, 0000003FC00000) 
        CRT INSTR         LP4_PROC_CBT <>             OENASYNC @                     (CMD, OP) = (63, 00000000010000) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>             OENASYNC @                     (CMD, OP) = (63, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>             OENASYNC @                     (CMD, OP) = (63, 0000003FC10000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR         LP4_PROC_CBT <>                CAMRS @                     (CMD, OP) = (21, 000000410D0072) 
        CRT INSTR         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
        CRT INSTR         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @LP4_TURN_OFF_DQS_WO0 (CMD, OP) = (05, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000E00) 
        CRT INSTR         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @      LP4_TOGGLE_CKE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000487) 
        CRT INSTR         LP4_PROC_CBT <>                CADES @                     (CMD, OP) = (23, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                CADES @                     (CMD, OP) = (23, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>             RSTSLSPD @                     (CMD, OP) = (41, 00000000000024) 
        CRT INSTR         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000023) 
        CRT INSTR         LP4_PROC_CBT <>                LSHFT @                     (CMD, OP) = (15, 00000001060409) 
        CRT INSTR         LP4_PROC_CBT <>             SETASYNC @                     (CMD, OP) = (60, 00000009000000) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @   IF_ST_BYTEINDEX_1 (CMD, OP) = (06, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>             SETASYNC @                     (CMD, OP) = (60, 00000009010000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @   IF_ST_BYTEINDEX_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>               DRVWCK @                     (CMD, OP) = (2F, 00000000080072) 
        CRT INSTR         LP4_PROC_CBT <>               DRVWCK @                     (CMD, OP) = (2F, 000000000A0000) 
        CRT INSTR         LP4_PROC_CBT <>               DRVWCK @                     (CMD, OP) = (2F, 00000000080031) 
        CRT INSTR         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSEQ0 @                     (CMD, OP) = (80, 0000000F030520) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000002000000) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSEQ2 @                     (CMD, OP) = (82, 000000061A1901) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSEQ3 @                     (CMD, OP) = (83, 00000001010101) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003714) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003613) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003518) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003819) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 0000000000391A) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003A1B) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003B1C) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003C20) 
        CRT INSTR         LP4_PROC_CBT <>              MAPSEQ2 @                     (CMD, OP) = (88, 00000000000480) 
        CRT INSTR         LP4_PROC_CBT <>              MAPSEQ3 @                     (CMD, OP) = (89, 00000000000011) 
        CRT INSTR         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005E004523) 
        CRT INSTR         LP4_PROC_CBT <>             CFGSWPGE @                     (CMD, OP) = (8B, 00000003001F00) 
        CRT INSTR         LP4_PROC_CBT <>               SETTRN @                     (CMD, OP) = (A0, 00000000000001) 
        CRT INSTR         LP4_PROC_CBT <>               SETTRN @                     (CMD, OP) = (A0, 00000000000004) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C004523) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C104520) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C004521) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C004520) 
        CRT INSTR         LP4_PROC_CBT <>              CFGDATG @                     (CMD, OP) = (8C, 00000000003080) 
        CRT INSTR         LP4_PROC_CBT <>              CFGDATR @                     (CMD, OP) = (8D, 00000030000282) 
        CRT INSTR         LP4_PROC_CBT <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000010C) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000008801) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 00000000010001) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR         LP4_PROC_CBT <>             CFGSWPGE @                     (CMD, OP) = (8B, 00000000001F00) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C004521) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C204520) 
        CRT INSTR         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058004521) 
        CRT INSTR         LP4_PROC_CBT <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
        CRT INSTR         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 0000000000030D) 
        CRT INSTR         LP4_PROC_CBT <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000050E0000) 
        CRT INSTR         LP4_PROC_CBT <>             SETSLSPD @                     (CMD, OP) = (40, 00000000000054) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000050E0000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>             SETSLSPD @                     (CMD, OP) = (40, 000000400D0054) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                CADES @                     (CMD, OP) = (23, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
        CRT INSTR         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000F00) 
        CRT INSTR         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @      LP4_TOGGLE_CKE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                CADES @                     (CMD, OP) = (23, 0000000000002D) 
        CRT INSTR         LP4_PROC_CBT <>                CAMRS @                     (CMD, OP) = (21, 000000400D0072) 
        CRT INSTR         LP4_PROC_CBT <>             RSTASYNC @                     (CMD, OP) = (61, 000000000F0000) 
        CRT INSTR         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @LP4_TURN_OFF_DQS_WO0 (CMD, OP) = (05, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>              MAPSEQ2 @                     (CMD, OP) = (88, 00000000000400) 
        CRT INSTR         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000487) 
        CRT INSTR         LP4_PROC_CBT <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_CBT_VREF number of Instr in crt SUB = 27
        CRT INSTR    LP4_PROC_CBT_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000402FFFF) 
        CRT INSTR    LP4_PROC_CBT_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000002FFFF) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
        CRT INSTR    LP4_PROC_CBT_VREF <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000101) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000188) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                 CALL @        LP4_PROC_CBT (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>              CFGDATR @                     (CMD, OP) = (8D, 00000020000001) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                INCRR @                     (CMD, OP) = (0A, 00000000000500) 
        CRT INSTR    LP4_PROC_CBT_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 0000000B00000F) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000003F02) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000103) 
        CRT INSTR    LP4_PROC_CBT_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000908) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                MOVDR @                     (CMD, OP) = (10, 00000000000903) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 000000002A0400) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                ADDRR @                     (CMD, OP) = (0E, 00000000030000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>              APBREAD @                     (CMD, OP) = (FB, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000D87) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000088) 
        CRT INSTR    LP4_PROC_CBT_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                 CALL @        LP4_PROC_CBT (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_READ_VREF number of Instr in crt SUB = 18
        CRT INSTR   LP4_PROC_READ_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000400FFFF) 
        CRT INSTR   LP4_PROC_READ_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR   LP4_PROC_READ_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR   LP4_PROC_READ_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000101) 
        CRT INSTR   LP4_PROC_READ_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000188) 
        CRT INSTR   LP4_PROC_READ_VREF <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 00000000000000) 
        CRT INSTR   LP4_PROC_READ_VREF <>                INCRR @                     (CMD, OP) = (0A, 00000000000500) 
        CRT INSTR   LP4_PROC_READ_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 0000000B00000F) 
        CRT INSTR   LP4_PROC_READ_VREF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000010) 
        CRT INSTR   LP4_PROC_READ_VREF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000100) 
        CRT INSTR   LP4_PROC_READ_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000208) 
        CRT INSTR   LP4_PROC_READ_VREF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR   LP4_PROC_READ_VREF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR   LP4_PROC_READ_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR   LP4_PROC_READ_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR   LP4_PROC_READ_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000088) 
        CRT INSTR   LP4_PROC_READ_VREF <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 00000000000000) 
        CRT INSTR   LP4_PROC_READ_VREF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_WRITE_VREF number of Instr in crt SUB = 21
        CRT INSTR  LP4_PROC_WRITE_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000400FFFF) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000101) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000188) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                INCRR @                     (CMD, OP) = (0A, 00000000000500) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 0000000B00000F) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 0000000000FF02) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000303) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000808) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                MOVDR @                     (CMD, OP) = (10, 00000000000903) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 000000002A0400) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                ADDRR @                     (CMD, OP) = (0E, 00000000030000) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>              APBREAD @                     (CMD, OP) = (FB, 00000000000000) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000D87) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000088) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_READGATE number of Instr in crt SUB = 144
        CRT INSTR    LP4_PROC_READGATE <>               DRVWCK @                     (CMD, OP) = (2F, 0000000000000A) 
        CRT INSTR    LP4_PROC_READGATE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR    LP4_PROC_READGATE <>                CAMRS @                     (CMD, OP) = (21, 000000CA0D0080) 
        CRT INSTR    LP4_PROC_READGATE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               SETTRN @                     (CMD, OP) = (A0, 00000000000040) 
        CRT INSTR    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFF) 
        CRT INSTR    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000080) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA104FFC) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000003030E20) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000003000000) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ2 @                     (CMD, OP) = (82, 0000000E0D0201) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ3 @                     (CMD, OP) = (83, 0000000F070605) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000040) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B414) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B313) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B218) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B512) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B619) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B71A) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B81B) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B91C) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BA1D) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BB1E) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BC1F) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BD20) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BE21) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BF22) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004525) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004524) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATG @                     (CMD, OP) = (8C, 00000000002FFF) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001001291) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001001290) 
        CRT INSTR    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000300FFFF) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATG @                     (CMD, OP) = (8C, 00000000002FFF) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001001291) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001001290) 
        CRT INSTR    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000200FFFF) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ4 @                     (CMD, OP) = (90, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0198) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120320) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0998) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000320) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000000C) 
        CRT INSTR    LP4_PROC_READGATE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8204FFC) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
        CRT INSTR    LP4_PROC_READGATE <>               SETTRN @                     (CMD, OP) = (A0, 00000000000020) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000006030701) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000002000000) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ2 @                     (CMD, OP) = (82, 00000007211101) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ3 @                     (CMD, OP) = (83, 00000023070605) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000030) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C214) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C113) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C018) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C312) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C419) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C51A) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C61B) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C71C) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C81D) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C91E) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000CA1F) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000CB20) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000CC21) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000CD22) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0180) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120320) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0980) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000320) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA408FFF) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATG @                     (CMD, OP) = (8C, 0000000010347C) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C07291) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C07290) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
        CRT INSTR    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000300FFFF) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATG @                     (CMD, OP) = (8C, 0000000000347C) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000081407291) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000081407290) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
        CRT INSTR    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000200FFFF) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000180) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 0000000055000E) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000847401) 
        CRT INSTR    LP4_PROC_READGATE <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0E01) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000A47401) 
        CRT INSTR    LP4_PROC_READGATE <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0E01) 
        CRT INSTR    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_4 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_4_4 (CMD, OP) = (06, 000000050F0004) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_4 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000005) 
        CRT INSTR    LP4_PROC_READGATE <>              STRTSEQ @         FOR_LOOP_01 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                INCRR @                     (CMD, OP) = (0A, 00000000000105) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR    LP4_PROC_READGATE <>              JUMPNIF @         FOR_LOOP_01 (CMD, OP) = (07, 0000000B05000F) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_5 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_4_4 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000005) 
        CRT INSTR    LP4_PROC_READGATE <>              STRTSEQ @         FOR_LOOP_02 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                INCRR @                     (CMD, OP) = (0A, 00000000000105) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR    LP4_PROC_READGATE <>              JUMPNIF @         FOR_LOOP_02 (CMD, OP) = (07, 0000000B05000F) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_5 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8408FFF) 
        CRT INSTR    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000001) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000004) 
        CRT INSTR    LP4_PROC_READGATE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
        CRT INSTR    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR    LP4_PROC_READGATE <>                CAMRS @                     (CMD, OP) = (21, 000000C80D0080) 
        CRT INSTR    LP4_PROC_READGATE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               DRVWCK @                     (CMD, OP) = (2F, 0000000000000A) 
        CRT INSTR    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
        CRT INSTR    LP4_PROC_READGATE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_READ number of Instr in crt SUB = 80
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000008704) 
        CRT INSTR        LP4_PROC_READ <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>               SETTRN @                     (CMD, OP) = (A0, 00000000000100) 
        CRT INSTR        LP4_PROC_READ <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR        LP4_PROC_READ <>                CAMRS @                     (CMD, OP) = (21, 000000000F0071) 
        CRT INSTR        LP4_PROC_READ <>                CAMRS @                     (CMD, OP) = (21, 00000000140071) 
        CRT INSTR        LP4_PROC_READ <>                CAMRS @                     (CMD, OP) = (21, 0000005A200071) 
        CRT INSTR        LP4_PROC_READ <>                CAMRS @                     (CMD, OP) = (21, 0000003C280072) 
        CRT INSTR        LP4_PROC_READ <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFF) 
        CRT INSTR        LP4_PROC_READ <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000010) 
        CRT INSTR        LP4_PROC_READ <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
        CRT INSTR        LP4_PROC_READ <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8104FFC) 
        CRT INSTR        LP4_PROC_READ <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000001030E20) 
        CRT INSTR        LP4_PROC_READ <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000003000000) 
        CRT INSTR        LP4_PROC_READ <>              CFGSEQ2 @                     (CMD, OP) = (82, 000000000C1101) 
        CRT INSTR        LP4_PROC_READ <>              CFGSEQ3 @                     (CMD, OP) = (83, 0000001E07060B) 
        CRT INSTR        LP4_PROC_READ <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000040) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D014) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000CF13) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000CE18) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D112) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D219) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D31A) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D41B) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D51C) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D61D) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D71E) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D81F) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D920) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000DA21) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000DB22) 
        CRT INSTR        LP4_PROC_READ <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>                ADDRR @                     (CMD, OP) = (0E, 000000001B001B) 
        CRT INSTR        LP4_PROC_READ <>                ADDRR @                     (CMD, OP) = (0E, 000000001C001C) 
        CRT INSTR        LP4_PROC_READ <>                ADDRR @                     (CMD, OP) = (0E, 000000001D001D) 
        CRT INSTR        LP4_PROC_READ <>                ADDRR @                     (CMD, OP) = (0E, 00000000200020) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR        LP4_PROC_READ <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0180) 
        CRT INSTR        LP4_PROC_READ <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120320) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR        LP4_PROC_READ <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0980) 
        CRT INSTR        LP4_PROC_READ <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000320) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000008801) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @             NO_VREF (CMD, OP) = (06, 00000000010000) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005400462D) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @             VREF_EN (CMD, OP) = (06, 00000000010001) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @             NO_VREF (CMD, OP) = (8A, 0000005000462D) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @             VREF_EN (CMD, OP) = (00, 00000000000001) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR        LP4_PROC_READ <>              CFGDATG @                     (CMD, OP) = (8C, 0000000010347C) 
        CRT INSTR        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C01311) 
        CRT INSTR        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C01310) 
        CRT INSTR        LP4_PROC_READ <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000900FFFF) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR        LP4_PROC_READ <>              CFGDATG @                     (CMD, OP) = (8C, 0000000000347C) 
        CRT INSTR        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081401311) 
        CRT INSTR        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081401310) 
        CRT INSTR        LP4_PROC_READ <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000800FFFF) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C01310) 
        CRT INSTR        LP4_PROC_READ <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000000C) 
        CRT INSTR        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000008801) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 00000000010001) 
        CRT INSTR        LP4_PROC_READ <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8204FFC) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
        CRT INSTR        LP4_PROC_READ <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000100FFFF) 
        CRT INSTR        LP4_PROC_READ <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR        LP4_PROC_READ <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_WRITE number of Instr in crt SUB = 94
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000008704) 
        CRT INSTR       LP4_PROC_WRITE <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
        CRT INSTR       LP4_PROC_WRITE <>                CAMRS @                     (CMD, OP) = (21, 000000000E0083) 
        CRT INSTR       LP4_PROC_WRITE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR       LP4_PROC_WRITE <>               DRVWCK @                     (CMD, OP) = (2F, 0000000007000A) 
        CRT INSTR       LP4_PROC_WRITE <>               SETTRN @                     (CMD, OP) = (A0, 00000000001000) 
        CRT INSTR       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FC004FFF) 
        CRT INSTR       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000020) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FC104FFC) 
        CRT INSTR       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               SETTRN @                     (CMD, OP) = (A0, 00000000001000) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000001035820) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000003000000) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSEQ2 @                     (CMD, OP) = (82, 00000030094001) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSEQ3 @                     (CMD, OP) = (83, 0000000B070605) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000440) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EC14) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EB13) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EA18) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000ED12) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EE19) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EF1A) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F01B) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F11C) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F21D) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F31E) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F41F) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F520) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F621) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F722) 
        CRT INSTR       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000100) 
        CRT INSTR       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>                ADDRR @                     (CMD, OP) = (0E, 00000000002020) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR       LP4_PROC_WRITE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0180) 
        CRT INSTR       LP4_PROC_WRITE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120720) 
        CRT INSTR       LP4_PROC_WRITE <>              MAPSEQ4 @                     (CMD, OP) = (90, 000000009F0183) 
        CRT INSTR       LP4_PROC_WRITE <>              MAPSEQ5 @                     (CMD, OP) = (91, 00000000120120) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR       LP4_PROC_WRITE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0980) 
        CRT INSTR       LP4_PROC_WRITE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000720) 
        CRT INSTR       LP4_PROC_WRITE <>              MAPSEQ4 @                     (CMD, OP) = (90, 000000001F0983) 
        CRT INSTR       LP4_PROC_WRITE <>              MAPSEQ5 @                     (CMD, OP) = (91, 00000000000120) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C0047A9) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C0047A8) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGDATG @                     (CMD, OP) = (8C, 0000000010040B) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGDATG @                     (CMD, OP) = (8C, 00000000100408) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001C013D1) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001C013D0) 
        CRT INSTR       LP4_PROC_WRITE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000100FFFF) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGDATG @                     (CMD, OP) = (8C, 0000000000040B) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGDATG @                     (CMD, OP) = (8C, 00000000000408) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGDATR @                     (CMD, OP) = (8D, 000000014013D1) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGDATR @                     (CMD, OP) = (8D, 000000014013D0) 
        CRT INSTR       LP4_PROC_WRITE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000020) 
        CRT INSTR       LP4_PROC_WRITE <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000029) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000002C) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000008801) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 00000000010001) 
        CRT INSTR       LP4_PROC_WRITE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FC004FFD) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FC204FFC) 
        CRT INSTR       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
        CRT INSTR       LP4_PROC_WRITE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000008FFFF) 
        CRT INSTR       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000000101) 
        CRT INSTR       LP4_PROC_WRITE <>                ADDRR @                     (CMD, OP) = (0E, 00000000010000) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000018) 
        CRT INSTR       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000100) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000000201) 
        CRT INSTR       LP4_PROC_WRITE <>                ADDRR @                     (CMD, OP) = (0E, 00000000010000) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000019) 
        CRT INSTR       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
        CRT INSTR       LP4_PROC_WRITE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
        CRT INSTR       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000608) 
        CRT INSTR       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000709) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000816) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000917) 
        CRT INSTR       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000005) 
        CRT INSTR       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000100) 
        CRT INSTR       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000006) 
        CRT INSTR       LP4_PROC_WRITE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_WRITF number of Instr in crt SUB = 81
        CRT INSTR       LP4_PROC_WRITF <>               DRVWCK @                     (CMD, OP) = (2F, 0000000007000A) 
        CRT INSTR       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000800) 
        CRT INSTR       LP4_PROC_WRITF <>             ENCMDCNT @                     (CMD, OP) = (D0, 00000003080800) 
        CRT INSTR       LP4_PROC_WRITF <>            CFGCMDCNT @                     (CMD, OP) = (D1, 00000007200120) 
        CRT INSTR       LP4_PROC_WRITF <>             ENCMDCNT @                     (CMD, OP) = (D0, 0000000C050500) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFF) 
        CRT INSTR       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000020) 
        CRT INSTR       LP4_PROC_WRITF <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
        CRT INSTR       LP4_PROC_WRITF <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA104FFC) 
        CRT INSTR       LP4_PROC_WRITF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000800) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000003030701) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000002000000) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSEQ2 @                     (CMD, OP) = (82, 00000038094801) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSEQ3 @                     (CMD, OP) = (83, 00000060070605) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000440) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000DE14) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000DD13) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000DC18) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000DF12) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E019) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E11A) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E21B) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E31C) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E41D) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E51E) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E61F) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E720) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E821) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E922) 
        CRT INSTR       LP4_PROC_WRITF <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR       LP4_PROC_WRITF <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0180) 
        CRT INSTR       LP4_PROC_WRITF <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120720) 
        CRT INSTR       LP4_PROC_WRITF <>              MAPSEQ4 @                     (CMD, OP) = (90, 000000009F0183) 
        CRT INSTR       LP4_PROC_WRITF <>              MAPSEQ5 @                     (CMD, OP) = (91, 00000000120120) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR       LP4_PROC_WRITF <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0980) 
        CRT INSTR       LP4_PROC_WRITF <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000720) 
        CRT INSTR       LP4_PROC_WRITF <>              MAPSEQ4 @                     (CMD, OP) = (90, 000000001F0983) 
        CRT INSTR       LP4_PROC_WRITF <>              MAPSEQ5 @                     (CMD, OP) = (91, 00000000000120) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA408FFF) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGDATG @                     (CMD, OP) = (8C, 00000000103408) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGDATR @                     (CMD, OP) = (8D, 00000001C073D1) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGDATR @                     (CMD, OP) = (8D, 00000001C073D0) 
        CRT INSTR       LP4_PROC_WRITF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000100FEFF) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGDATG @                     (CMD, OP) = (8C, 00000000003408) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGDATR @                     (CMD, OP) = (8D, 000000014073D1) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGDATR @                     (CMD, OP) = (8D, 000000014073D0) 
        CRT INSTR       LP4_PROC_WRITF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000EFFF) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000220) 
        CRT INSTR       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_4_2 (CMD, OP) = (06, 000000050F0004) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>                SETRR @                     (CMD, OP) = (0C, 00000000000005) 
        CRT INSTR       LP4_PROC_WRITF <>              STRTSEQ @         FOR_LOOP_01 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>                INCRR @                     (CMD, OP) = (0A, 00000000000105) 
        CRT INSTR       LP4_PROC_WRITF <>              JUMPNIF @         FOR_LOOP_01 (CMD, OP) = (07, 00000005050007) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (06, 000000050F0002) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_4_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>                SETRR @                     (CMD, OP) = (0C, 00000000000005) 
        CRT INSTR       LP4_PROC_WRITF <>              STRTSEQ @         FOR_LOOP_02 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>                INCRR @                     (CMD, OP) = (0A, 00000000000105) 
        CRT INSTR       LP4_PROC_WRITF <>              JUMPNIF @         FOR_LOOP_02 (CMD, OP) = (07, 00000005050007) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8408FFF) 
        CRT INSTR       LP4_PROC_WRITF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000001) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000004) 
        CRT INSTR       LP4_PROC_WRITF <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000001) 
        CRT INSTR       LP4_PROC_WRITF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_ERROR_TRACE number of Instr in crt SUB = 7
        CRT INSTR      LP4_ERROR_TRACE <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR      LP4_ERROR_TRACE <>              USRLOAD @                     (CMD, OP) = (19, 0000000000040E) 
        CRT INSTR      LP4_ERROR_TRACE <>               JUMPIF @               IF_ST (CMD, OP) = (06, 000000050E0000) 
        CRT INSTR      LP4_ERROR_TRACE <>                DEBUG @                     (CMD, OP) = (02, 0000007400000E) 
        CRT INSTR      LP4_ERROR_TRACE <>                 HALT @                     (CMD, OP) = (03, 00000000000000) 
        CRT INSTR      LP4_ERROR_TRACE <>                  NOP @               IF_ST (CMD, OP) = (00, 00000000000000) 
        CRT INSTR      LP4_ERROR_TRACE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_DRAMSRFE number of Instr in crt SUB = 7
        CRT INSTR         LP4_DRAMSRFE <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
        CRT INSTR         LP4_DRAMSRFE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR         LP4_DRAMSRFE <>                CADES @                     (CMD, OP) = (23, 00000000000090) 
        CRT INSTR         LP4_DRAMSRFE <>               CAUSER @                     (CMD, OP) = (29, 000000180000A0) 
        CRT INSTR         LP4_DRAMSRFE <>                CANOP @                     (CMD, OP) = (24, 00000000000000) 
        CRT INSTR         LP4_DRAMSRFE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR         LP4_DRAMSRFE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_DRAMSRFX number of Instr in crt SUB = 6
        CRT INSTR         LP4_DRAMSRFX <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
        CRT INSTR         LP4_DRAMSRFX <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
        CRT INSTR         LP4_DRAMSRFX <>               CAUSER @                     (CMD, OP) = (29, 000000140000A1) 
        CRT INSTR         LP4_DRAMSRFX <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_DRAMSRFX <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR         LP4_DRAMSRFX <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_MR_UPDATE number of Instr in crt SUB = 32
        CRT INSTR        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 00000000261000) 
        CRT INSTR        LP4_MR_UPDATE <>              APBREAD @                     (CMD, OP) = (FB, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 00000000038001) 
        CRT INSTR        LP4_MR_UPDATE <>                ANDRR @                     (CMD, OP) = (11, 000000000D0101) 
        CRT INSTR        LP4_MR_UPDATE <>                LSHFT @                     (CMD, OP) = (15, 00000000070100) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @       IF_DRAMSRFPDX (CMD, OP) = (06, 00000000000005) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @         IF_DRAMINIT (CMD, OP) = (06, 00000000000004) 
        CRT INSTR        LP4_MR_UPDATE <>              JUMPNIF @      IF_NO_DRAMINIT (CMD, OP) = (07, 00000000000004) 
        CRT INSTR        LP4_MR_UPDATE <>              JUMPNIF @     IF_NO_DRAMSRFPD (CMD, OP) = (07, 00000000000005) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @         IF_DRAMINIT (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
        CRT INSTR        LP4_MR_UPDATE <>                SELRK @                     (CMD, OP) = (2A, 00000000000F0F) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_DRAMINIT (CMD, OP) = (05, 00000000000032) 
        CRT INSTR        LP4_MR_UPDATE <>               CAUSER @                     (CMD, OP) = (29, 000000200F0000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @    IF_DRAMINIT_DONE (CMD, OP) = (06, 00000000000004) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @       IF_DRAMSRFPDX (CMD, OP) = (00, 00000000000023) 
        CRT INSTR        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                SELRK @                     (CMD, OP) = (2A, 0000000000000F) 
        CRT INSTR        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000F00) 
        CRT INSTR        LP4_MR_UPDATE <>                SELRK @                     (CMD, OP) = (2A, 0000000000000F) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @                     (CMD, OP) = (00, 000000000000A8) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @      IF_NO_DRAMINIT (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @     IF_NO_DRAMSRFPD (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 00000000000028) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 0000000000005A) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 00000000000168) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @    IF_DRAMINIT_DONE (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP5_INIT_RDQS_TRACK number of Instr in crt SUB = 19
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000002900) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000849001) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000A49001) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                  NOP @          WHILE_LOOP (CMD, OP) = (00, 000000000000FF) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000000202) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000FFFF03) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000FFFF04) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000849001) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>              APBREAD @                     (CMD, OP) = (FB, 00000000000001) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                ANDRR @                     (CMD, OP) = (11, 00000000020D04) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                ANDRR @                     (CMD, OP) = (11, 00000000030403) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000A49001) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>              APBREAD @                     (CMD, OP) = (FB, 00000000000001) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                ANDRR @                     (CMD, OP) = (11, 00000000020D04) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                ANDRR @                     (CMD, OP) = (11, 00000000030403) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>              JUMPNIF @          WHILE_LOOP (CMD, OP) = (07, 00000000030002) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_PROC_RXFFRST number of Instr in crt SUB = 9
        CRT INSTR     LP4_PROC_RXFFRST <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR     LP4_PROC_RXFFRST <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR     LP4_PROC_RXFFRST <>                SETRR @                     (CMD, OP) = (0C, 00000000400003) 
        CRT INSTR     LP4_PROC_RXFFRST <>               SETTRN @                     (CMD, OP) = (A0, 00000000000040) 
        CRT INSTR     LP4_PROC_RXFFRST <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000080) 
        CRT INSTR     LP4_PROC_RXFFRST <>                SETRR @                     (CMD, OP) = (0C, 00000000C00003) 
        CRT INSTR     LP4_PROC_RXFFRST <>                SETRR @                     (CMD, OP) = (0C, 00000000400003) 
        CRT INSTR     LP4_PROC_RXFFRST <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
        CRT INSTR     LP4_PROC_RXFFRST <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_RETRAIN number of Instr in crt SUB = 54
        CRT INSTR          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR          LP4_RETRAIN <>                 CALL @ LP5_INIT_RDQS_TRACK (CMD, OP) = (05, 00000000000000) 
        CRT INSTR          LP4_RETRAIN <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
        CRT INSTR          LP4_RETRAIN <>                MOVDR @                     (CMD, OP) = (10, 00000000000100) 
        CRT INSTR          LP4_RETRAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000083) 
        CRT INSTR          LP4_RETRAIN <>                CAMRS @                     (CMD, OP) = (21, 00000040170072) 
        CRT INSTR          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000072) 
        CRT INSTR          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 000000200B0056) 
        CRT INSTR          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 0000000E120000) 
        CRT INSTR          LP4_RETRAIN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
        CRT INSTR          LP4_RETRAIN <>                MOVRR @                     (CMD, OP) = (0D, 00000000000F0D) 
        CRT INSTR          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 0000000E130000) 
        CRT INSTR          LP4_RETRAIN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
        CRT INSTR          LP4_RETRAIN <>                LSHFT @                     (CMD, OP) = (15, 00000001080F0E) 
        CRT INSTR          LP4_RETRAIN <>                ADDRR @                     (CMD, OP) = (0E, 000000000D0E0D) 
        CRT INSTR          LP4_RETRAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 000000000086A0) 
        CRT INSTR          LP4_RETRAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000083) 
        CRT INSTR          LP4_RETRAIN <>                CAMRS @                     (CMD, OP) = (21, 00000040170072) 
        CRT INSTR          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000072) 
        CRT INSTR          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 000000200B0056) 
        CRT INSTR          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 0000000E120000) 
        CRT INSTR          LP4_RETRAIN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
        CRT INSTR          LP4_RETRAIN <>                MOVRR @                     (CMD, OP) = (0D, 00000000000F0C) 
        CRT INSTR          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 0000000E130000) 
        CRT INSTR          LP4_RETRAIN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
        CRT INSTR          LP4_RETRAIN <>                LSHFT @                     (CMD, OP) = (15, 00000001080F0E) 
        CRT INSTR          LP4_RETRAIN <>                ADDRR @                     (CMD, OP) = (0E, 000000000C0E0C) 
        CRT INSTR          LP4_RETRAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR          LP4_RETRAIN <>                SUBRR @                     (CMD, OP) = (0F, 000000000D0C0C) 
        CRT INSTR          LP4_RETRAIN <>                LSHFT @                     (CMD, OP) = (15, 00000001010C0C) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 000000008E6C01) 
        CRT INSTR          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
        CRT INSTR          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000AE6C01) 
        CRT INSTR          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
        CRT INSTR          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
        CRT INSTR          LP4_RETRAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000004000) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
        CRT INSTR          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000010100) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
        CRT INSTR          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
        CRT INSTR          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 0000000000000A) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
        CRT INSTR          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
        CRT INSTR          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
        CRT INSTR          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000001) 
        CRT INSTR          LP4_RETRAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR          LP4_RETRAIN <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_RETRAIN_INIT number of Instr in crt SUB = 19
        CRT INSTR     LP4_RETRAIN_INIT <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
        CRT INSTR     LP4_RETRAIN_INIT <>                 CALL @ LP5_INIT_RDQS_TRACK (CMD, OP) = (05, 00000000000000) 
        CRT INSTR     LP4_RETRAIN_INIT <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
        CRT INSTR     LP4_RETRAIN_INIT <>                MOVDR @                     (CMD, OP) = (10, 00000000000100) 
        CRT INSTR     LP4_RETRAIN_INIT <>             SETREFMD @                     (CMD, OP) = (42, 0000000000008B) 
        CRT INSTR     LP4_RETRAIN_INIT <>                CAMRS @                     (CMD, OP) = (21, 00000040170072) 
        CRT INSTR     LP4_RETRAIN_INIT <>                  NOP @                     (CMD, OP) = (00, 00000000000072) 
        CRT INSTR     LP4_RETRAIN_INIT <>               CAUSER @                     (CMD, OP) = (29, 000000200B0056) 
        CRT INSTR     LP4_RETRAIN_INIT <>               CAUSER @                     (CMD, OP) = (29, 0000000E120000) 
        CRT INSTR     LP4_RETRAIN_INIT <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
        CRT INSTR     LP4_RETRAIN_INIT <>                MOVRR @                     (CMD, OP) = (0D, 00000000000F0D) 
        CRT INSTR     LP4_RETRAIN_INIT <>               CAUSER @                     (CMD, OP) = (29, 0000000E130000) 
        CRT INSTR     LP4_RETRAIN_INIT <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
        CRT INSTR     LP4_RETRAIN_INIT <>                LSHFT @                     (CMD, OP) = (15, 00000001080F0E) 
        CRT INSTR     LP4_RETRAIN_INIT <>                ADDRR @                     (CMD, OP) = (0E, 000000000D0E0D) 
        CRT INSTR     LP4_RETRAIN_INIT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR     LP4_RETRAIN_INIT <>                MOVRD @                     (CMD, OP) = (18, 00000000000D95) 
        CRT INSTR     LP4_RETRAIN_INIT <>                MOVRD @                     (CMD, OP) = (18, 00000000000D96) 
        CRT INSTR     LP4_RETRAIN_INIT <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_RETRAIN_RUN number of Instr in crt SUB = 47
        CRT INSTR      LP4_RETRAIN_RUN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                  NOP @                     (CMD, OP) = (00, 00000000000064) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
        CRT INSTR      LP4_RETRAIN_RUN <>                MOVDR @                     (CMD, OP) = (10, 00000000000100) 
        CRT INSTR      LP4_RETRAIN_RUN <>                MOVDR @                     (CMD, OP) = (10, 0000000000950D) 
        CRT INSTR      LP4_RETRAIN_RUN <>                MOVDR @                     (CMD, OP) = (10, 0000000000960D) 
        CRT INSTR      LP4_RETRAIN_RUN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000083) 
        CRT INSTR      LP4_RETRAIN_RUN <>               CAUSER @                     (CMD, OP) = (29, 0000000E120000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                MOVRR @                     (CMD, OP) = (0D, 00000000000F0C) 
        CRT INSTR      LP4_RETRAIN_RUN <>               CAUSER @                     (CMD, OP) = (29, 0000000E130000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                CAMRS @                     (CMD, OP) = (21, 00000040170072) 
        CRT INSTR      LP4_RETRAIN_RUN <>                  NOP @                     (CMD, OP) = (00, 00000000000072) 
        CRT INSTR      LP4_RETRAIN_RUN <>               CAUSER @                     (CMD, OP) = (29, 000000200B0000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                LSHFT @                     (CMD, OP) = (15, 00000001080F0E) 
        CRT INSTR      LP4_RETRAIN_RUN <>                ADDRR @                     (CMD, OP) = (0E, 000000000C0E0C) 
        CRT INSTR      LP4_RETRAIN_RUN <>                MOVRD @                     (CMD, OP) = (18, 00000000000C95) 
        CRT INSTR      LP4_RETRAIN_RUN <>                MOVRD @                     (CMD, OP) = (18, 00000000000C96) 
        CRT INSTR      LP4_RETRAIN_RUN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SUBRR @                     (CMD, OP) = (0F, 000000000D0C0C) 
        CRT INSTR      LP4_RETRAIN_RUN <>                MOVDR @                     (CMD, OP) = (10, 00000000000900) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 000000008E6C01) 
        CRT INSTR      LP4_RETRAIN_RUN <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
        CRT INSTR      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
        CRT INSTR      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000AE6C01) 
        CRT INSTR      LP4_RETRAIN_RUN <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
        CRT INSTR      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
        CRT INSTR      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
        CRT INSTR      LP4_RETRAIN_RUN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
        CRT INSTR      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000010100) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
        CRT INSTR      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
        CRT INSTR      LP4_RETRAIN_RUN <>                  NOP @                     (CMD, OP) = (00, 0000000000000A) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
        CRT INSTR      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
        CRT INSTR      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
        CRT INSTR      LP4_RETRAIN_RUN <>                  NOP @                     (CMD, OP) = (00, 00000000000001) 
        CRT INSTR      LP4_RETRAIN_RUN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR      LP4_RETRAIN_RUN <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
    PSM DBG SUB: Current SubRoutine PMEM_LP4_RETR number of Instr in crt SUB = 49
        CRT INSTR             LP4_RETR <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR             LP4_RETR <>                MOVDR @                     (CMD, OP) = (10, 00000000000900) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 000000008E7401) 
        CRT INSTR             LP4_RETR <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
        CRT INSTR             LP4_RETR <>              APBREAD @                     (CMD, OP) = (FB, 00000000000001) 
        CRT INSTR             LP4_RETR <>                MOVDR @                     (CMD, OP) = (10, 00000000005703) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000000204) 
        CRT INSTR             LP4_RETR <>                MULRR @                     (CMD, OP) = (1C, 00000000040304) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000040003) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000040003) 
        CRT INSTR             LP4_RETR <>                MULRR @                     (CMD, OP) = (1C, 00000000040304) 
        CRT INSTR             LP4_RETR <>                MOVRR @                     (CMD, OP) = (0D, 00000000001005) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
        CRT INSTR             LP4_RETR <>                DIVRR @                     (CMD, OP) = (1D, 000000400E0407) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 0000000000000E) 
        CRT INSTR             LP4_RETR <>                DIVRR @                     (CMD, OP) = (1D, 000000400D0408) 
        CRT INSTR             LP4_RETR <>                LSHFT @                     (CMD, OP) = (15, 00000000010707) 
        CRT INSTR             LP4_RETR <>                LSHFT @                     (CMD, OP) = (15, 00000000010808) 
        CRT INSTR             LP4_RETR <>                SUBRR @                     (CMD, OP) = (0F, 0000000008070C) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 000000008E6C01) 
        CRT INSTR             LP4_RETR <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
        CRT INSTR             LP4_RETR <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
        CRT INSTR             LP4_RETR <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000AE7401) 
        CRT INSTR             LP4_RETR <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
        CRT INSTR             LP4_RETR <>              APBREAD @                     (CMD, OP) = (FB, 00000000000001) 
        CRT INSTR             LP4_RETR <>                MOVDR @                     (CMD, OP) = (10, 00000000005703) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000000204) 
        CRT INSTR             LP4_RETR <>                MULRR @                     (CMD, OP) = (1C, 00000000040304) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000040003) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000040003) 
        CRT INSTR             LP4_RETR <>                MULRR @                     (CMD, OP) = (1C, 00000000040304) 
        CRT INSTR             LP4_RETR <>                MOVRR @                     (CMD, OP) = (0D, 00000000001005) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
        CRT INSTR             LP4_RETR <>                DIVRR @                     (CMD, OP) = (1D, 000000400E0407) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 0000000000000E) 
        CRT INSTR             LP4_RETR <>                DIVRR @                     (CMD, OP) = (1D, 000000400D0408) 
        CRT INSTR             LP4_RETR <>                LSHFT @                     (CMD, OP) = (15, 00000000010707) 
        CRT INSTR             LP4_RETR <>                LSHFT @                     (CMD, OP) = (15, 00000000010808) 
        CRT INSTR             LP4_RETR <>                SUBRR @                     (CMD, OP) = (0F, 0000000008070C) 
        CRT INSTR             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000AE6C01) 
        CRT INSTR             LP4_RETR <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
        CRT INSTR             LP4_RETR <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
        CRT INSTR             LP4_RETR <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
        CRT INSTR             LP4_RETR <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR             LP4_RETR <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000401) 
        CRT INSTR             LP4_RETR <>                  NOP @                     (CMD, OP) = (00, 00000000000001) 
        CRT INSTR             LP4_RETR <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
        CRT INSTR             LP4_RETR <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INFO: PSM Program Memory Usage: Number of lines 1112, Percentage of usage 54.296875%
PSM DBG Updating Labels: LP4_DRAMINIT_IF_FREQ_BIN_0 150 
PSM DBG Updating Labels: LP4_DRAMINIT_IF_FREQ_BIN_1 152 
PSM DBG Updating Labels: LP4_ERROR_TRACE_IF_ST 867 
PSM DBG Updating Labels: LP4_GOTOLSPD_IF_FREQ_BIN_0 214 
PSM DBG Updating Labels: LP4_GOTOLSPD_IF_FREQ_BIN_1 216 
PSM DBG Updating Labels: LP4_INCR_IF_DRAM_ACTIVE 73 
PSM DBG Updating Labels: LP4_INCR_IF_DRAM_ACTIVE_DONE 76 
PSM DBG Updating Labels: LP4_INCR_IF_DRAM_IDLE 75 
PSM DBG Updating Labels: LP4_INCR_IF_NO_RESET_0 100 
PSM DBG Updating Labels: LP4_INCR_IF_READ_0 84 
PSM DBG Updating Labels: LP4_INCR_IF_READ_1 90 
PSM DBG Updating Labels: LP4_INCR_IF_RESET_0 99 
PSM DBG Updating Labels: LP4_INCR_IF_RGT_1 92 
PSM DBG Updating Labels: LP4_INCR_IF_WRITE_0 87 
PSM DBG Updating Labels: LP4_INCR_IF_WRITE_1 91 
PSM DBG Updating Labels: LP4_INCR_LP4_DRAMSRFE 78 
PSM DBG Updating Labels: LP4_INCR_LP4_DRAMSRFX 95 
PSM DBG Updating Labels: LP4_INCR_LP4_PROC_READ 85 
PSM DBG Updating Labels: LP4_INCR_LP4_PROC_READGATE 82 
PSM DBG Updating Labels: LP4_INCR_LP4_PROC_WRITE 88 
PSM DBG Updating Labels: LP4_MAIN_DRAMINIT_IF_ST_BYTEINDEX_0 121 
PSM DBG Updating Labels: LP4_MAIN_DRAMINIT_IF_ST_DFI2CKRATIO_2_0 123 
PSM DBG Updating Labels: LP4_MAIN_DRAMINIT_LP4_DRAMINIT 109 
PSM DBG Updating Labels: LP4_MAIN_DRAMINIT_LP4_DRAMSRFE 115 
PSM DBG Updating Labels: LP4_MAIN_DRAMINIT_LP4_GOTOLSPD 112 
PSM DBG Updating Labels: LP4_MAIN_DRAMINIT_LP4_MAIN 114 
PSM DBG Updating Labels: LP4_MAIN_DRAMINIT_LP4_RETRAIN_INIT 122 
PSM DBG Updating Labels: LP4_MAIN_DRAMINIT_LP4_WRITE_MRS 113 
PSM DBG Updating Labels: LP4_MAIN_DRAMSRFPD_LP4_MAIN_DRAMSRF 142 
PSM DBG Updating Labels: LP4_MAIN_DRAMSRF_LP4_GOTOLSPD 132 
PSM DBG Updating Labels: LP4_MAIN_DRAMSRF_LP4_MAIN 134 
PSM DBG Updating Labels: LP4_MAIN_DRAMSRF_LP4_WRITE_MRS 133 
PSM DBG Updating Labels: LP4_MAIN_IF_ST_BYTEINDEX_0 33 
PSM DBG Updating Labels: LP4_MAIN_LP4_GOTOHSPD 39 
PSM DBG Updating Labels: LP4_MAIN_LP4_PROC_CBT_VREF 35 
PSM DBG Updating Labels: LP4_MAIN_LP4_PROC_DQST 46 
PSM DBG Updating Labels: LP4_MAIN_LP4_PROC_READ 52 
PSM DBG Updating Labels: LP4_MAIN_LP4_PROC_READGATE 51 
PSM DBG Updating Labels: LP4_MAIN_LP4_PROC_WRITE 54 
PSM DBG Updating Labels: LP4_MAIN_LP4_PROC_WRITF 53 
PSM DBG Updating Labels: LP4_MR_UPDATE_IF_DRAMINIT 891 
PSM DBG Updating Labels: LP4_MR_UPDATE_IF_DRAMINIT_DONE 912 
PSM DBG Updating Labels: LP4_MR_UPDATE_IF_DRAMSRFPDX 901 
PSM DBG Updating Labels: LP4_MR_UPDATE_IF_NO_DRAMINIT 907 
PSM DBG Updating Labels: LP4_MR_UPDATE_IF_NO_DRAMSRFPD 908 
PSM DBG Updating Labels: LP4_MR_UPDATE_LP4_DRAMINIT 894 
PSM DBG Updating Labels: LP4_MR_UPDATE_LP4_DRAMSRFE 899 
PSM DBG Updating Labels: LP4_MR_UPDATE_LP4_GOTOHSPD 911 
PSM DBG Updating Labels: LP4_MR_UPDATE_LP4_GOTOLSPD 909 
PSM DBG Updating Labels: LP4_MR_UPDATE_LP4_WRITE_MRS 910 
PSM DBG Updating Labels: LP4_PROC_CBT_IF_FREQ_BIN_0 377 
PSM DBG Updating Labels: LP4_PROC_CBT_IF_FREQ_BIN_1 379 
PSM DBG Updating Labels: LP4_PROC_CBT_IF_ST_BYTEINDEX_0 310 
PSM DBG Updating Labels: LP4_PROC_CBT_IF_ST_BYTEINDEX_1 329 
PSM DBG Updating Labels: LP4_PROC_CBT_LP4_ERROR_TRACE 364 
PSM DBG Updating Labels: LP4_PROC_CBT_LP4_TOGGLE_CKE 385 
PSM DBG Updating Labels: LP4_PROC_CBT_LP4_TURN_OFF_DQS_WO0 391 
PSM DBG Updating Labels: LP4_PROC_CBT_NO_ERROR 365 
PSM DBG Updating Labels: LP4_PROC_CBT_VREF_FOR_LOOP_VREF 404 
PSM DBG Updating Labels: LP4_PROC_CBT_VREF_IF_ST_BYTEINDEX_0 402 
PSM DBG Updating Labels: LP4_PROC_CBT_VREF_LP4_PROC_CBT 422 
PSM DBG Updating Labels: LP4_PROC_DQST_FOR_LOOP 264 
PSM DBG Updating Labels: LP4_PROC_DQST_LP4_ERROR_TRACE 274 
PSM DBG Updating Labels: LP4_PROC_READGATE_FOR_LOOP_01 577 
PSM DBG Updating Labels: LP4_PROC_READGATE_FOR_LOOP_02 585 
PSM DBG Updating Labels: LP4_PROC_READGATE_IF_ST_DFI2CKRATIO_2_0 513 
PSM DBG Updating Labels: LP4_PROC_READGATE_IF_ST_DFI2CKRATIO_2_1 547 
PSM DBG Updating Labels: LP4_PROC_READGATE_IF_ST_DFI2CKRATIO_2_2 505 
PSM DBG Updating Labels: LP4_PROC_READGATE_IF_ST_DFI2CKRATIO_2_3 563 
PSM DBG Updating Labels: LP4_PROC_READGATE_IF_ST_DFI2CKRATIO_2_4 575 
PSM DBG Updating Labels: LP4_PROC_READGATE_IF_ST_DFI2CKRATIO_2_5 590 
PSM DBG Updating Labels: LP4_PROC_READGATE_IF_ST_DFI2CKRATIO_4_4 583 
PSM DBG Updating Labels: LP4_PROC_READGATE_LP4_ERROR_TRACE 595 
PSM DBG Updating Labels: LP4_PROC_READ_IF_ST_DFI2CKRATIO_2_0 652 
PSM DBG Updating Labels: LP4_PROC_READ_IF_ST_DFI2CKRATIO_2_1 669 
PSM DBG Updating Labels: LP4_PROC_READ_LP4_ERROR_TRACE 677 
PSM DBG Updating Labels: LP4_PROC_READ_NO_ERROR 678 
PSM DBG Updating Labels: LP4_PROC_READ_NO_VREF 657 
PSM DBG Updating Labels: LP4_PROC_READ_VREF_EN 658 
PSM DBG Updating Labels: LP4_PROC_READ_VREF_FOR_LOOP_VREF 426 
PSM DBG Updating Labels: LP4_PROC_READ_VREF_LP4_PROC_READ 440 
PSM DBG Updating Labels: LP4_PROC_WRITE_IF_ST_DFI2CKRATIO_2_0 732 
PSM DBG Updating Labels: LP4_PROC_WRITE_IF_ST_DFI2CKRATIO_2_1 747 
PSM DBG Updating Labels: LP4_PROC_WRITE_LP4_ERROR_TRACE 755 
PSM DBG Updating Labels: LP4_PROC_WRITE_NO_ERROR 756 
PSM DBG Updating Labels: LP4_PROC_WRITE_VREF_FOR_LOOP_VREF 444 
PSM DBG Updating Labels: LP4_PROC_WRITE_VREF_LP4_PROC_WRITE 461 
PSM DBG Updating Labels: LP4_PROC_WRITF_FOR_LOOP_01 843 
PSM DBG Updating Labels: LP4_PROC_WRITF_FOR_LOOP_02 849 
PSM DBG Updating Labels: LP4_PROC_WRITF_IF_ST_DFI2CKRATIO_2_0 823 
PSM DBG Updating Labels: LP4_PROC_WRITF_IF_ST_DFI2CKRATIO_2_1 836 
PSM DBG Updating Labels: LP4_PROC_WRITF_IF_ST_DFI2CKRATIO_2_2 841 
PSM DBG Updating Labels: LP4_PROC_WRITF_IF_ST_DFI2CKRATIO_2_3 852 
PSM DBG Updating Labels: LP4_PROC_WRITF_IF_ST_DFI2CKRATIO_4_2 847 
PSM DBG Updating Labels: LP4_PROC_WRITF_LP4_ERROR_TRACE 857 
PSM DBG Updating Labels: LP4_RETRAIN_INIT_LP5_INIT_RDQS_TRACK 997 
PSM DBG Updating Labels: LP4_RETRAIN_LP5_INIT_RDQS_TRACK 943 
PSM DBG Updating Labels: LP4_TURN_OFF_DQS_WO0_IF_ST_BYTEINDEX_0 185 
PSM DBG Updating Labels: LP4_TURN_OFF_DQS_WO0_IF_ST_BYTEINDEX_1 188 
PSM DBG Updating Labels: LP5_INIT_RDQS_TRACK_WHILE_LOOP 919 
PSM DBG Second pass... updating args of JUMP* ...
        CRT INSTR             LP4_MAIN <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000021000000) 
        CRT INSTR             LP4_MAIN <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @   LP4_PROC_CBT_VREF (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @       LP4_PROC_DQST (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @   LP4_PROC_READGATE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @      LP4_PROC_WRITF (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @      IF_DRAM_ACTIVE (CMD, OP) = (06, 00000049000007) 
        CRT INSTR             LP4_INCR <>               JUMPIF @        IF_DRAM_IDLE (CMD, OP) = (06, 0000004B000000) 
        CRT INSTR             LP4_INCR <>               CAUSER @      IF_DRAM_ACTIVE (CMD, OP) = (29, 00000010000092) 
        CRT INSTR             LP4_INCR <>               JUMPIF @ IF_DRAM_ACTIVE_DONE (CMD, OP) = (06, 0000004C000007) 
        CRT INSTR             LP4_INCR <>                CADES @        IF_DRAM_IDLE (CMD, OP) = (23, 00000000000092) 
        CRT INSTR             LP4_INCR <>                  NOP @ IF_DRAM_ACTIVE_DONE (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @           IF_READ_0 (CMD, OP) = (06, 00000054000001) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_WRITE_0 (CMD, OP) = (06, 00000057000002) 
        CRT INSTR             LP4_INCR <>                 CALL @   LP4_PROC_READGATE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @            IF_RGT_1 (CMD, OP) = (06, 0000005C000000) 
        CRT INSTR             LP4_INCR <>                  NOP @           IF_READ_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @           IF_READ_1 (CMD, OP) = (06, 0000005A000001) 
        CRT INSTR             LP4_INCR <>                  NOP @          IF_WRITE_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_WRITE_1 (CMD, OP) = (06, 0000005B000002) 
        CRT INSTR             LP4_INCR <>                  NOP @           IF_READ_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @          IF_WRITE_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @            IF_RGT_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @        LP4_DRAMSRFX (CMD, OP) = (05, 00000000000000) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_RESET_0 (CMD, OP) = (06, 00000063000002) 
        CRT INSTR             LP4_INCR <>              JUMPNIF @       IF_NO_RESET_0 (CMD, OP) = (07, 00000064000003) 
        CRT INSTR             LP4_INCR <>                SETRR @          IF_RESET_0 (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @       IF_NO_RESET_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_DRAMINIT (CMD, OP) = (05, 00000000000032) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @            LP4_MAIN (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 0000007B0F0004) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000079000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @    LP4_RETRAIN_INIT (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 00000000000028) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 00000000000000) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @            LP4_MAIN (CMD, OP) = (05, 00000000000172) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                 CALL @    LP4_MAIN_DRAMSRF (CMD, OP) = (05, 00000000000000) 
        CRT INSTR         LP4_DRAMINIT <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000960E0000) 
        CRT INSTR         LP4_DRAMINIT <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000980E0000) 
        CRT INSTR         LP4_DRAMINIT <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_DRAMINIT <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 000000B9020000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>               JUMPIF @   IF_ST_BYTEINDEX_1 (CMD, OP) = (06, 000000BC020001) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                  NOP @   IF_ST_BYTEINDEX_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_GOTOLSPD <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000D60E0000) 
        CRT INSTR         LP4_GOTOLSPD <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000D80E0000) 
        CRT INSTR         LP4_GOTOLSPD <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_GOTOLSPD <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @            FOR_LOOP (CMD, OP) = (8A, 0000005A004521) 
        CRT INSTR        LP4_PROC_DQST <>              JUMPNIF @            FOR_LOOP (CMD, OP) = (07, 00000008030002) 
        CRT INSTR        LP4_PROC_DQST <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000036000000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @LP4_TURN_OFF_DQS_WO0 (CMD, OP) = (05, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @      LP4_TOGGLE_CKE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @   IF_ST_BYTEINDEX_1 (CMD, OP) = (06, 00000049000000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @   IF_ST_BYTEINDEX_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 0000006D010001) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR         LP4_PROC_CBT <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000790E0000) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 0000007B0E0000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @      LP4_TOGGLE_CKE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @LP4_TURN_OFF_DQS_WO0 (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000092000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                 CALL @        LP4_PROC_CBT (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 0000009400000F) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                 CALL @        LP4_PROC_CBT (CMD, OP) = (05, 00000000000000) 
        CRT INSTR   LP4_PROC_READ_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR   LP4_PROC_READ_VREF <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 00000000000000) 
        CRT INSTR   LP4_PROC_READ_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 000000AA00000F) 
        CRT INSTR   LP4_PROC_READ_VREF <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 00000000000000) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 000000BC00000F) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (06, 000000F90F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000010F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000230F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (06, 000000330F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_4 (CMD, OP) = (06, 0000003F0F0002) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_4_4 (CMD, OP) = (06, 000000470F0004) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_4 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              STRTSEQ @         FOR_LOOP_01 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              JUMPNIF @         FOR_LOOP_01 (CMD, OP) = (07, 0000004105000F) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_5 (CMD, OP) = (06, 0000004E0F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_4_4 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              STRTSEQ @         FOR_LOOP_02 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              JUMPNIF @         FOR_LOOP_02 (CMD, OP) = (07, 0000004905000F) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_5 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 0000008C0F0002) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @             NO_VREF (CMD, OP) = (06, 00000091010000) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @             VREF_EN (CMD, OP) = (06, 00000092010001) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @             NO_VREF (CMD, OP) = (8A, 0000005000462D) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @             VREF_EN (CMD, OP) = (00, 00000000000001) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 0000009D0F0002) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 000000A6010001) 
        CRT INSTR        LP4_PROC_READ <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000DC0F0002) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000EB0F0002) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 000000F4010001) 
        CRT INSTR       LP4_PROC_WRITE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000370F0002) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000440F0002) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (06, 000000490F0002) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_4_2 (CMD, OP) = (06, 0000004F0F0004) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              STRTSEQ @         FOR_LOOP_01 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              JUMPNIF @         FOR_LOOP_01 (CMD, OP) = (07, 0000004B050007) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (06, 000000540F0002) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_4_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              STRTSEQ @         FOR_LOOP_02 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              JUMPNIF @         FOR_LOOP_02 (CMD, OP) = (07, 00000051050007) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 000000000002BC) 
        CRT INSTR      LP4_ERROR_TRACE <>               JUMPIF @               IF_ST (CMD, OP) = (06, 000000630E0000) 
        CRT INSTR      LP4_ERROR_TRACE <>                  NOP @               IF_ST (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @       IF_DRAMSRFPDX (CMD, OP) = (06, 00000085000005) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @         IF_DRAMINIT (CMD, OP) = (06, 0000007B000004) 
        CRT INSTR        LP4_MR_UPDATE <>              JUMPNIF @      IF_NO_DRAMINIT (CMD, OP) = (07, 0000008B000004) 
        CRT INSTR        LP4_MR_UPDATE <>              JUMPNIF @     IF_NO_DRAMSRFPD (CMD, OP) = (07, 0000008C000005) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @         IF_DRAMINIT (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_DRAMINIT (CMD, OP) = (05, 00000000000032) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @    IF_DRAMINIT_DONE (CMD, OP) = (06, 00000090000004) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @       IF_DRAMSRFPDX (CMD, OP) = (00, 00000000000023) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @      IF_NO_DRAMINIT (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @     IF_NO_DRAMSRFPD (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 00000000000028) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 0000000000005A) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 00000000000168) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @    IF_DRAMINIT_DONE (CMD, OP) = (00, 00000000000000) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                  NOP @          WHILE_LOOP (CMD, OP) = (00, 000000000000FF) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>              JUMPNIF @          WHILE_LOOP (CMD, OP) = (07, 00000097030002) 
        CRT INSTR          LP4_RETRAIN <>                 CALL @ LP5_INIT_RDQS_TRACK (CMD, OP) = (05, 00000000000000) 
        CRT INSTR     LP4_RETRAIN_INIT <>                 CALL @ LP5_INIT_RDQS_TRACK (CMD, OP) = (05, 00000000000000) 
PSM DBG Updating CALL Labels: LP4_DRAMINIT 145 
PSM DBG Updating CALL Labels: LP4_DRAMSRFE 869 
PSM DBG Updating CALL Labels: LP4_DRAMSRFX 876 
PSM DBG Updating CALL Labels: LP4_ERROR_TRACE 862 
PSM DBG Updating CALL Labels: LP4_GOTOHSPD 221 
PSM DBG Updating CALL Labels: LP4_GOTOLSPD 203 
PSM DBG Updating CALL Labels: LP4_INCR 65 
PSM DBG Updating CALL Labels: LP4_INTR_REF 0 
PSM DBG Updating CALL Labels: LP4_MAIN 10 
PSM DBG Updating CALL Labels: LP4_MAIN_DRAMINIT 106 
PSM DBG Updating CALL Labels: LP4_MAIN_DRAMSRF 125 
PSM DBG Updating CALL Labels: LP4_MAIN_DRAMSRFPD 136 
PSM DBG Updating CALL Labels: LP4_MAIN_EMPTY 103 
PSM DBG Updating CALL Labels: LP4_MR_UPDATE 882 
PSM DBG Updating CALL Labels: LP4_PROC_CBT 291 
PSM DBG Updating CALL Labels: LP4_PROC_CBT_VREF 397 
PSM DBG Updating CALL Labels: LP4_PROC_DQST 231 
PSM DBG Updating CALL Labels: LP4_PROC_READ 607 
PSM DBG Updating CALL Labels: LP4_PROC_READGATE 463 
PSM DBG Updating CALL Labels: LP4_PROC_READ_VREF 424 
PSM DBG Updating CALL Labels: LP4_PROC_RXFFRST 933 
PSM DBG Updating CALL Labels: LP4_PROC_WRITE 687 
PSM DBG Updating CALL Labels: LP4_PROC_WRITE_VREF 442 
PSM DBG Updating CALL Labels: LP4_PROC_WRITF 781 
PSM DBG Updating CALL Labels: LP4_RETR 1062 
PSM DBG Updating CALL Labels: LP4_RETRAIN 942 
PSM DBG Updating CALL Labels: LP4_RETRAIN_INIT 996 
PSM DBG Updating CALL Labels: LP4_RETRAIN_RUN 1015 
PSM DBG Updating CALL Labels: LP4_TOGGLE_CKE 167 
PSM DBG Updating CALL Labels: LP4_TURN_OFF_DQS 171 
PSM DBG Updating CALL Labels: LP4_TURN_OFF_DQS_WO0 178 
PSM DBG Updating CALL Labels: LP4_WRITE_MRS 190 
PSM DBG Updating CALL Labels: LP5_INIT_RDQS_TRACK 914 
PSM DBG Second pass... updating args of CALL...
        CRT INSTR             LP4_MAIN <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000021000000) 
        CRT INSTR             LP4_MAIN <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_MAIN <>                 CALL @   LP4_PROC_CBT_VREF (CMD, OP) = (05, 0000000000018D) 
        CRT INSTR             LP4_MAIN <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 000000000000DD) 
        CRT INSTR             LP4_MAIN <>                 CALL @       LP4_PROC_DQST (CMD, OP) = (05, 000000000000E7) 
        CRT INSTR             LP4_MAIN <>                 CALL @   LP4_PROC_READGATE (CMD, OP) = (05, 000000000001CF) 
        CRT INSTR             LP4_MAIN <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 0000000000025F) 
        CRT INSTR             LP4_MAIN <>                 CALL @      LP4_PROC_WRITF (CMD, OP) = (05, 0000000000030D) 
        CRT INSTR             LP4_MAIN <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 000000000002AF) 
        CRT INSTR             LP4_INCR <>               JUMPIF @      IF_DRAM_ACTIVE (CMD, OP) = (06, 00000049000007) 
        CRT INSTR             LP4_INCR <>               JUMPIF @        IF_DRAM_IDLE (CMD, OP) = (06, 0000004B000000) 
        CRT INSTR             LP4_INCR <>               CAUSER @      IF_DRAM_ACTIVE (CMD, OP) = (29, 00000010000092) 
        CRT INSTR             LP4_INCR <>               JUMPIF @ IF_DRAM_ACTIVE_DONE (CMD, OP) = (06, 0000004C000007) 
        CRT INSTR             LP4_INCR <>                CADES @        IF_DRAM_IDLE (CMD, OP) = (23, 00000000000092) 
        CRT INSTR             LP4_INCR <>                  NOP @ IF_DRAM_ACTIVE_DONE (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000365) 
        CRT INSTR             LP4_INCR <>               JUMPIF @           IF_READ_0 (CMD, OP) = (06, 00000054000001) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_WRITE_0 (CMD, OP) = (06, 00000057000002) 
        CRT INSTR             LP4_INCR <>                 CALL @   LP4_PROC_READGATE (CMD, OP) = (05, 000000000001CF) 
        CRT INSTR             LP4_INCR <>               JUMPIF @            IF_RGT_1 (CMD, OP) = (06, 0000005C000000) 
        CRT INSTR             LP4_INCR <>                  NOP @           IF_READ_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 0000000000025F) 
        CRT INSTR             LP4_INCR <>               JUMPIF @           IF_READ_1 (CMD, OP) = (06, 0000005A000001) 
        CRT INSTR             LP4_INCR <>                  NOP @          IF_WRITE_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 000000000002AF) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_WRITE_1 (CMD, OP) = (06, 0000005B000002) 
        CRT INSTR             LP4_INCR <>                  NOP @           IF_READ_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @          IF_WRITE_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @            IF_RGT_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR             LP4_INCR <>                 CALL @        LP4_DRAMSRFX (CMD, OP) = (05, 0000000000036C) 
        CRT INSTR             LP4_INCR <>               JUMPIF @          IF_RESET_0 (CMD, OP) = (06, 00000063000002) 
        CRT INSTR             LP4_INCR <>              JUMPNIF @       IF_NO_RESET_0 (CMD, OP) = (07, 00000064000003) 
        CRT INSTR             LP4_INCR <>                SETRR @          IF_RESET_0 (CMD, OP) = (0C, 00000000000000) 
        CRT INSTR             LP4_INCR <>                  NOP @       IF_NO_RESET_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_DRAMINIT (CMD, OP) = (05, 00000000000091) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 000000000000CB) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 000000000000BE) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @            LP4_MAIN (CMD, OP) = (05, 0000000000000A) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000365) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 0000007B0F0004) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000079000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                 CALL @    LP4_RETRAIN_INIT (CMD, OP) = (05, 000000000003E4) 
        CRT INSTR    LP4_MAIN_DRAMINIT <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 000000000000CB) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 000000000000BE) 
        CRT INSTR     LP4_MAIN_DRAMSRF <>                 CALL @            LP4_MAIN (CMD, OP) = (05, 0000000000000A) 
        CRT INSTR   LP4_MAIN_DRAMSRFPD <>                 CALL @    LP4_MAIN_DRAMSRF (CMD, OP) = (05, 0000000000007D) 
        CRT INSTR         LP4_DRAMINIT <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000960E0000) 
        CRT INSTR         LP4_DRAMINIT <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000980E0000) 
        CRT INSTR         LP4_DRAMINIT <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_DRAMINIT <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 000000B9020000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>               JUMPIF @   IF_ST_BYTEINDEX_1 (CMD, OP) = (06, 000000BC020001) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR LP4_TURN_OFF_DQS_WO0 <>                  NOP @   IF_ST_BYTEINDEX_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_GOTOLSPD <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000D60E0000) 
        CRT INSTR         LP4_GOTOLSPD <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000D80E0000) 
        CRT INSTR         LP4_GOTOLSPD <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_GOTOLSPD <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_DQST <>              CFGSWPG @            FOR_LOOP (CMD, OP) = (8A, 0000005A004521) 
        CRT INSTR        LP4_PROC_DQST <>              JUMPNIF @            FOR_LOOP (CMD, OP) = (07, 00000008030002) 
        CRT INSTR        LP4_PROC_DQST <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000036000000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @LP4_TURN_OFF_DQS_WO0 (CMD, OP) = (05, 000000000000B2) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @      LP4_TOGGLE_CKE (CMD, OP) = (05, 000000000000A7) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @   IF_ST_BYTEINDEX_1 (CMD, OP) = (06, 00000049000000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @   IF_ST_BYTEINDEX_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 0000006D010001) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR         LP4_PROC_CBT <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000790E0000) 
        CRT INSTR         LP4_PROC_CBT <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 0000007B0E0000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @      LP4_TOGGLE_CKE (CMD, OP) = (05, 000000000000A7) 
        CRT INSTR         LP4_PROC_CBT <>                 CALL @LP4_TURN_OFF_DQS_WO0 (CMD, OP) = (05, 000000000000B2) 
        CRT INSTR    LP4_PROC_CBT_VREF <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000092000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                 CALL @        LP4_PROC_CBT (CMD, OP) = (05, 00000000000123) 
        CRT INSTR    LP4_PROC_CBT_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 0000009400000F) 
        CRT INSTR    LP4_PROC_CBT_VREF <>                 CALL @        LP4_PROC_CBT (CMD, OP) = (05, 00000000000123) 
        CRT INSTR   LP4_PROC_READ_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR   LP4_PROC_READ_VREF <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 0000000000025F) 
        CRT INSTR   LP4_PROC_READ_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 000000AA00000F) 
        CRT INSTR   LP4_PROC_READ_VREF <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 0000000000025F) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 000000000002AF) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 000000BC00000F) 
        CRT INSTR  LP4_PROC_WRITE_VREF <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 000000000002AF) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (06, 000000F90F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000010F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000230F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (06, 000000330F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_4 (CMD, OP) = (06, 0000003F0F0002) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_4_4 (CMD, OP) = (06, 000000470F0004) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_4 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              STRTSEQ @         FOR_LOOP_01 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              JUMPNIF @         FOR_LOOP_01 (CMD, OP) = (07, 0000004105000F) 
        CRT INSTR    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_5 (CMD, OP) = (06, 0000004E0F0002) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_4_4 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              STRTSEQ @         FOR_LOOP_02 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>              JUMPNIF @         FOR_LOOP_02 (CMD, OP) = (07, 0000004905000F) 
        CRT INSTR    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_5 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR    LP4_PROC_READGATE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 0000008C0F0002) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @             NO_VREF (CMD, OP) = (06, 00000091010000) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @             VREF_EN (CMD, OP) = (06, 00000092010001) 
        CRT INSTR        LP4_PROC_READ <>              CFGSWPG @             NO_VREF (CMD, OP) = (8A, 0000005000462D) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @             VREF_EN (CMD, OP) = (00, 00000000000001) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 0000009D0F0002) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_PROC_READ <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 000000A6010001) 
        CRT INSTR        LP4_PROC_READ <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
        CRT INSTR        LP4_PROC_READ <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000DC0F0002) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000EB0F0002) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITE <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 000000F4010001) 
        CRT INSTR       LP4_PROC_WRITE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
        CRT INSTR       LP4_PROC_WRITE <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000370F0002) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000440F0002) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (06, 000000490F0002) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_4_2 (CMD, OP) = (06, 0000004F0F0004) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              STRTSEQ @         FOR_LOOP_01 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              JUMPNIF @         FOR_LOOP_01 (CMD, OP) = (07, 0000004B050007) 
        CRT INSTR       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (06, 000000540F0002) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_4_2 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              STRTSEQ @         FOR_LOOP_02 (CMD, OP) = (85, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>              JUMPNIF @         FOR_LOOP_02 (CMD, OP) = (07, 00000051050007) 
        CRT INSTR       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (00, 00000000000000) 
        CRT INSTR       LP4_PROC_WRITF <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
        CRT INSTR      LP4_ERROR_TRACE <>               JUMPIF @               IF_ST (CMD, OP) = (06, 000000630E0000) 
        CRT INSTR      LP4_ERROR_TRACE <>                  NOP @               IF_ST (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @       IF_DRAMSRFPDX (CMD, OP) = (06, 00000085000005) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @         IF_DRAMINIT (CMD, OP) = (06, 0000007B000004) 
        CRT INSTR        LP4_MR_UPDATE <>              JUMPNIF @      IF_NO_DRAMINIT (CMD, OP) = (07, 0000008B000004) 
        CRT INSTR        LP4_MR_UPDATE <>              JUMPNIF @     IF_NO_DRAMSRFPD (CMD, OP) = (07, 0000008C000005) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @         IF_DRAMINIT (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_DRAMINIT (CMD, OP) = (05, 00000000000091) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 000000000000CB) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 000000000000BE) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 000000000000DD) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000365) 
        CRT INSTR        LP4_MR_UPDATE <>               JUMPIF @    IF_DRAMINIT_DONE (CMD, OP) = (06, 00000090000004) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @       IF_DRAMSRFPDX (CMD, OP) = (00, 00000000000023) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @      IF_NO_DRAMINIT (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @     IF_NO_DRAMSRFPD (CMD, OP) = (00, 00000000000000) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 000000000000CB) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 000000000000BE) 
        CRT INSTR        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 000000000000DD) 
        CRT INSTR        LP4_MR_UPDATE <>                  NOP @    IF_DRAMINIT_DONE (CMD, OP) = (00, 00000000000000) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>                  NOP @          WHILE_LOOP (CMD, OP) = (00, 000000000000FF) 
        CRT INSTR  LP5_INIT_RDQS_TRACK <>              JUMPNIF @          WHILE_LOOP (CMD, OP) = (07, 00000097030002) 
        CRT INSTR          LP4_RETRAIN <>                 CALL @ LP5_INIT_RDQS_TRACK (CMD, OP) = (05, 00000000000392) 
        CRT INSTR     LP4_RETRAIN_INIT <>                 CALL @ LP5_INIT_RDQS_TRACK (CMD, OP) = (05, 00000000000392) 
PSM DBG: Program has Number of Lines = 2048
INSTR @    0         LP4_INTR_REF <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @    1         LP4_INTR_REF <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
INSTR @    2         LP4_INTR_REF <>               CAUSER @                     (CMD, OP) = (29, 00000010000092) 
INSTR @    3         LP4_INTR_REF <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
INSTR @    4         LP4_INTR_REF <>               CAUSER @                     (CMD, OP) = (29, 00000028000090) 
INSTR @    5         LP4_INTR_REF <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
INSTR @    6         LP4_INTR_REF <>               CAUSER @                     (CMD, OP) = (29, 00000001000000) 
INSTR @    7         LP4_INTR_REF <>               CAUSER @                     (CMD, OP) = (29, 00000003000093) 
INSTR @    8         LP4_INTR_REF <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @    9         LP4_INTR_REF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @   10             LP4_MAIN <>                MOVMR @                     (CMD, OP) = (1B, 0000000000030A) 
INSTR @   11             LP4_MAIN <>                MOVMR @                     (CMD, OP) = (1B, 00000000000D0B) 
INSTR @   12             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 0000000000FF00) 
INSTR @   13             LP4_MAIN <>                ANDRR @                     (CMD, OP) = (11, 000000000A000C) 
INSTR @   14             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000003F00) 
INSTR @   15             LP4_MAIN <>                ANDRR @                     (CMD, OP) = (11, 000000000B000D) 
INSTR @   16             LP4_MAIN <>                MOVRR @                     (CMD, OP) = (0D, 00000000000D0B) 
INSTR @   17             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 00000000000D0D) 
INSTR @   18             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 0000000000C000) 
INSTR @   19             LP4_MAIN <>                 ORRR @                     (CMD, OP) = (12, 000000000A0000) 
INSTR @   20             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 00000000000003) 
INSTR @   21             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 0000000000DF00) 
INSTR @   22             LP4_MAIN <>                ANDRR @                     (CMD, OP) = (11, 000000000B0000) 
INSTR @   23             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 0000000000000D) 
INSTR @   24             LP4_MAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @   25             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @   26             LP4_MAIN <>                MOVRD @                     (CMD, OP) = (18, 0000000000001C) 
INSTR @   27             LP4_MAIN <>               DRVWCK @                     (CMD, OP) = (2F, 00000000000000) 
INSTR @   28             LP4_MAIN <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000002FFFF) 
INSTR @   29             LP4_MAIN <>              CFGDATR @                     (CMD, OP) = (8D, 0000001F0007FF) 
INSTR @   30             LP4_MAIN <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
INSTR @   31             LP4_MAIN <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000021000000) 
INSTR @   32             LP4_MAIN <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
INSTR @   33             LP4_MAIN <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
INSTR @   34             LP4_MAIN <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
INSTR @   35             LP4_MAIN <>                 CALL @   LP4_PROC_CBT_VREF (CMD, OP) = (05, 0000000000018D) 
INSTR @   36             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000004) 
INSTR @   37             LP4_MAIN <>              RNKEVAL @                     (CMD, OP) = (A2, 00000000000004) 
INSTR @   38             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @   39             LP4_MAIN <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 000000000000DD) 
INSTR @   40             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283003) 
INSTR @   41             LP4_MAIN <>                MOVDR @                     (CMD, OP) = (10, 00000000000900) 
INSTR @   42             LP4_MAIN <>                ADDRR @                     (CMD, OP) = (0E, 00000000030003) 
INSTR @   43             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
INSTR @   44             LP4_MAIN <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110003) 
INSTR @   45             LP4_MAIN <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
INSTR @   46             LP4_MAIN <>                 CALL @       LP4_PROC_DQST (CMD, OP) = (05, 000000000000E7) 
INSTR @   47             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000010) 
INSTR @   48             LP4_MAIN <>              RNKEVAL @                     (CMD, OP) = (A2, 00000000000004) 
INSTR @   49             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @   50             LP4_MAIN <>               DRVWCK @                     (CMD, OP) = (2F, 0000000007000A) 
INSTR @   51             LP4_MAIN <>                 CALL @   LP4_PROC_READGATE (CMD, OP) = (05, 000000000001CF) 
INSTR @   52             LP4_MAIN <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 0000000000025F) 
INSTR @   53             LP4_MAIN <>                 CALL @      LP4_PROC_WRITF (CMD, OP) = (05, 0000000000030D) 
INSTR @   54             LP4_MAIN <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 000000000002AF) 
INSTR @   55             LP4_MAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @   56             LP4_MAIN <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
INSTR @   57             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 00000000000C03) 
INSTR @   58             LP4_MAIN <>                CAMRS @                     (CMD, OP) = (21, 00000000030071) 
INSTR @   59             LP4_MAIN <>                SETRR @                     (CMD, OP) = (0C, 0000000000C000) 
INSTR @   60             LP4_MAIN <>                 ORRR @                     (CMD, OP) = (12, 000000000D000D) 
INSTR @   61             LP4_MAIN <>                MOVRM @                     (CMD, OP) = (1A, 00000000000D0D) 
INSTR @   62             LP4_MAIN <>                CAMRS @                     (CMD, OP) = (21, 000000000D0054) 
INSTR @   63             LP4_MAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @   64             LP4_MAIN <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @   65             LP4_INCR <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @   66             LP4_INCR <>                SETRR @                     (CMD, OP) = (0C, 00000000261000) 
INSTR @   67             LP4_INCR <>              APBREAD @                     (CMD, OP) = (FB, 00000000000000) 
INSTR @   68             LP4_INCR <>                SETRR @                     (CMD, OP) = (0C, 00000000038001) 
INSTR @   69             LP4_INCR <>                ANDRR @                     (CMD, OP) = (11, 000000000D0101) 
INSTR @   70             LP4_INCR <>                LSHFT @                     (CMD, OP) = (15, 00000000070100) 
INSTR @   71             LP4_INCR <>               JUMPIF @      IF_DRAM_ACTIVE (CMD, OP) = (06, 00000049000007) 
INSTR @   72             LP4_INCR <>               JUMPIF @        IF_DRAM_IDLE (CMD, OP) = (06, 0000004B000000) 
INSTR @   73             LP4_INCR <>               CAUSER @      IF_DRAM_ACTIVE (CMD, OP) = (29, 00000010000092) 
INSTR @   74             LP4_INCR <>               JUMPIF @ IF_DRAM_ACTIVE_DONE (CMD, OP) = (06, 0000004C000007) 
INSTR @   75             LP4_INCR <>                CADES @        IF_DRAM_IDLE (CMD, OP) = (23, 00000000000092) 
INSTR @   76             LP4_INCR <>                  NOP @ IF_DRAM_ACTIVE_DONE (CMD, OP) = (00, 00000000000000) 
INSTR @   77             LP4_INCR <>                MOVDR @                     (CMD, OP) = (10, 00000000001C00) 
INSTR @   78             LP4_INCR <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000365) 
INSTR @   79             LP4_INCR <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
INSTR @   80             LP4_INCR <>               JUMPIF @           IF_READ_0 (CMD, OP) = (06, 00000054000001) 
INSTR @   81             LP4_INCR <>               JUMPIF @          IF_WRITE_0 (CMD, OP) = (06, 00000057000002) 
INSTR @   82             LP4_INCR <>                 CALL @   LP4_PROC_READGATE (CMD, OP) = (05, 000000000001CF) 
INSTR @   83             LP4_INCR <>               JUMPIF @            IF_RGT_1 (CMD, OP) = (06, 0000005C000000) 
INSTR @   84             LP4_INCR <>                  NOP @           IF_READ_0 (CMD, OP) = (00, 00000000000000) 
INSTR @   85             LP4_INCR <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 0000000000025F) 
INSTR @   86             LP4_INCR <>               JUMPIF @           IF_READ_1 (CMD, OP) = (06, 0000005A000001) 
INSTR @   87             LP4_INCR <>                  NOP @          IF_WRITE_0 (CMD, OP) = (00, 00000000000000) 
INSTR @   88             LP4_INCR <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 000000000002AF) 
INSTR @   89             LP4_INCR <>               JUMPIF @          IF_WRITE_1 (CMD, OP) = (06, 0000005B000002) 
INSTR @   90             LP4_INCR <>                  NOP @           IF_READ_1 (CMD, OP) = (00, 00000000000000) 
INSTR @   91             LP4_INCR <>                  NOP @          IF_WRITE_1 (CMD, OP) = (00, 00000000000000) 
INSTR @   92             LP4_INCR <>                  NOP @            IF_RGT_1 (CMD, OP) = (00, 00000000000000) 
INSTR @   93             LP4_INCR <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @   94             LP4_INCR <>               DRVWCK @                     (CMD, OP) = (2F, 0000000007000A) 
INSTR @   95             LP4_INCR <>                 CALL @        LP4_DRAMSRFX (CMD, OP) = (05, 0000000000036C) 
INSTR @   96             LP4_INCR <>               JUMPIF @          IF_RESET_0 (CMD, OP) = (06, 00000063000002) 
INSTR @   97             LP4_INCR <>                INCRR @                     (CMD, OP) = (0A, 00000000000100) 
INSTR @   98             LP4_INCR <>              JUMPNIF @       IF_NO_RESET_0 (CMD, OP) = (07, 00000064000003) 
INSTR @   99             LP4_INCR <>                SETRR @          IF_RESET_0 (CMD, OP) = (0C, 00000000000000) 
INSTR @  100             LP4_INCR <>                  NOP @       IF_NO_RESET_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  101             LP4_INCR <>                MOVRD @                     (CMD, OP) = (18, 0000000000001C) 
INSTR @  102             LP4_INCR <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  103       LP4_MAIN_EMPTY <>                  NOP @                     (CMD, OP) = (00, 00000000000014) 
INSTR @  104       LP4_MAIN_EMPTY <>                 HALT @                     (CMD, OP) = (03, 00000000000000) 
INSTR @  105       LP4_MAIN_EMPTY <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  106    LP4_MAIN_DRAMINIT <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  107    LP4_MAIN_DRAMINIT <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
INSTR @  108    LP4_MAIN_DRAMINIT <>                SELRK @                     (CMD, OP) = (2A, 00000000000F0F) 
INSTR @  109    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_DRAMINIT (CMD, OP) = (05, 00000000000091) 
INSTR @  110    LP4_MAIN_DRAMINIT <>               CAUSER @                     (CMD, OP) = (29, 000000200F0000) 
INSTR @  111    LP4_MAIN_DRAMINIT <>                  NOP @                     (CMD, OP) = (00, 0000000000000A) 
INSTR @  112    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 000000000000CB) 
INSTR @  113    LP4_MAIN_DRAMINIT <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 000000000000BE) 
INSTR @  114    LP4_MAIN_DRAMINIT <>                 CALL @            LP4_MAIN (CMD, OP) = (05, 0000000000000A) 
INSTR @  115    LP4_MAIN_DRAMINIT <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000365) 
INSTR @  116    LP4_MAIN_DRAMINIT <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  117    LP4_MAIN_DRAMINIT <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 0000007B0F0004) 
INSTR @  118    LP4_MAIN_DRAMINIT <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
INSTR @  119    LP4_MAIN_DRAMINIT <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000079000000) 
INSTR @  120    LP4_MAIN_DRAMINIT <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000002FFFF) 
INSTR @  121    LP4_MAIN_DRAMINIT <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  122    LP4_MAIN_DRAMINIT <>                 CALL @    LP4_RETRAIN_INIT (CMD, OP) = (05, 000000000003E4) 
INSTR @  123    LP4_MAIN_DRAMINIT <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  124    LP4_MAIN_DRAMINIT <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  125     LP4_MAIN_DRAMSRF <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  126     LP4_MAIN_DRAMSRF <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  127     LP4_MAIN_DRAMSRF <>                SELRK @                     (CMD, OP) = (2A, 0000004000000F) 
INSTR @  128     LP4_MAIN_DRAMSRF <>                MOVMR @                     (CMD, OP) = (1B, 00000000000D0B) 
INSTR @  129     LP4_MAIN_DRAMSRF <>                SETRR @                     (CMD, OP) = (0C, 00000000003F00) 
INSTR @  130     LP4_MAIN_DRAMSRF <>                ANDRR @                     (CMD, OP) = (11, 000000000B000B) 
INSTR @  131     LP4_MAIN_DRAMSRF <>                MOVRM @                     (CMD, OP) = (1A, 00000000000B0D) 
INSTR @  132     LP4_MAIN_DRAMSRF <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 000000000000CB) 
INSTR @  133     LP4_MAIN_DRAMSRF <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 000000000000BE) 
INSTR @  134     LP4_MAIN_DRAMSRF <>                 CALL @            LP4_MAIN (CMD, OP) = (05, 0000000000000A) 
INSTR @  135     LP4_MAIN_DRAMSRF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  136   LP4_MAIN_DRAMSRFPD <>                  NOP @                     (CMD, OP) = (00, 00000000000023) 
INSTR @  137   LP4_MAIN_DRAMSRFPD <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  138   LP4_MAIN_DRAMSRFPD <>                SELRK @                     (CMD, OP) = (2A, 0000000000000F) 
INSTR @  139   LP4_MAIN_DRAMSRFPD <>                SETRR @                     (CMD, OP) = (0C, 00000000000F00) 
INSTR @  140   LP4_MAIN_DRAMSRFPD <>                SELRK @                     (CMD, OP) = (2A, 0000000000000F) 
INSTR @  141   LP4_MAIN_DRAMSRFPD <>                  NOP @                     (CMD, OP) = (00, 000000000000A8) 
INSTR @  142   LP4_MAIN_DRAMSRFPD <>                 CALL @    LP4_MAIN_DRAMSRF (CMD, OP) = (05, 0000000000007D) 
INSTR @  143   LP4_MAIN_DRAMSRFPD <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  144   LP4_MAIN_DRAMSRFPD <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  145         LP4_DRAMINIT <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  146         LP4_DRAMINIT <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
INSTR @  147         LP4_DRAMINIT <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000960E0000) 
INSTR @  148         LP4_DRAMINIT <>             SETSLSPD @                     (CMD, OP) = (40, 00000000000001) 
INSTR @  149         LP4_DRAMINIT <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000980E0000) 
INSTR @  150         LP4_DRAMINIT <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  151         LP4_DRAMINIT <>             SETSLSPD @                     (CMD, OP) = (40, 00000040030001) 
INSTR @  152         LP4_DRAMINIT <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  153         LP4_DRAMINIT <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
INSTR @  154         LP4_DRAMINIT <>                SELRK @                     (CMD, OP) = (2A, 00000000000F00) 
INSTR @  155         LP4_DRAMINIT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  156         LP4_DRAMINIT <>                CADES @                     (CMD, OP) = (23, 00000000000000) 
INSTR @  157         LP4_DRAMINIT <>                RESET @                     (CMD, OP) = (2D, 00000000000014) 
INSTR @  158         LP4_DRAMINIT <>                RESET @                     (CMD, OP) = (2D, 00000000010010) 
INSTR @  159         LP4_DRAMINIT <>              STARTCK @                     (CMD, OP) = (2B, 00000000010000) 
INSTR @  160         LP4_DRAMINIT <>                CADES @                     (CMD, OP) = (23, 00000000000011) 
INSTR @  161         LP4_DRAMINIT <>                SETRR @                     (CMD, OP) = (0C, 00000000000F0F) 
INSTR @  162         LP4_DRAMINIT <>                SELRK @                     (CMD, OP) = (2A, 00000000000F00) 
INSTR @  163         LP4_DRAMINIT <>                CANOP @                     (CMD, OP) = (24, 00000000000012) 
INSTR @  164         LP4_DRAMINIT <>                SELRK @                     (CMD, OP) = (2A, 00000000000F0F) 
INSTR @  165         LP4_DRAMINIT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  166         LP4_DRAMINIT <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  167       LP4_TOGGLE_CKE <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  168       LP4_TOGGLE_CKE <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
INSTR @  169       LP4_TOGGLE_CKE <>                SELRK @                     (CMD, OP) = (2A, 00000080000000) 
INSTR @  170       LP4_TOGGLE_CKE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  171     LP4_TURN_OFF_DQS <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  172     LP4_TURN_OFF_DQS <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
INSTR @  173     LP4_TURN_OFF_DQS <>                SETRR @                     (CMD, OP) = (0C, 00000000846001) 
INSTR @  174     LP4_TURN_OFF_DQS <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
INSTR @  175     LP4_TURN_OFF_DQS <>                SETRR @                     (CMD, OP) = (0C, 00000000A46001) 
INSTR @  176     LP4_TURN_OFF_DQS <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
INSTR @  177     LP4_TURN_OFF_DQS <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  178 LP4_TURN_OFF_DQS_WO0 <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  179 LP4_TURN_OFF_DQS_WO0 <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
INSTR @  180 LP4_TURN_OFF_DQS_WO0 <>                MOVDR @                     (CMD, OP) = (10, 00000000003D02) 
INSTR @  181 LP4_TURN_OFF_DQS_WO0 <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 000000B9020000) 
INSTR @  182 LP4_TURN_OFF_DQS_WO0 <>                SETRR @                     (CMD, OP) = (0C, 00000000846001) 
INSTR @  183 LP4_TURN_OFF_DQS_WO0 <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
INSTR @  184 LP4_TURN_OFF_DQS_WO0 <>               JUMPIF @   IF_ST_BYTEINDEX_1 (CMD, OP) = (06, 000000BC020001) 
INSTR @  185 LP4_TURN_OFF_DQS_WO0 <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  186 LP4_TURN_OFF_DQS_WO0 <>                SETRR @                     (CMD, OP) = (0C, 00000000A46001) 
INSTR @  187 LP4_TURN_OFF_DQS_WO0 <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
INSTR @  188 LP4_TURN_OFF_DQS_WO0 <>                  NOP @   IF_ST_BYTEINDEX_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  189 LP4_TURN_OFF_DQS_WO0 <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  190        LP4_WRITE_MRS <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
INSTR @  191        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 00000000010071) 
INSTR @  192        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 0000000B020071) 
INSTR @  193        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 0000000E030071) 
INSTR @  194        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 0000000E200071) 
INSTR @  195        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 0000000E280071) 
INSTR @  196        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 000000000C0071) 
INSTR @  197        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 000000000E0071) 
INSTR @  198        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 00000000170071) 
INSTR @  199        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 000000000B0071) 
INSTR @  200        LP4_WRITE_MRS <>                CAMRS @                     (CMD, OP) = (21, 00000000160071) 
INSTR @  201        LP4_WRITE_MRS <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  202        LP4_WRITE_MRS <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  203         LP4_GOTOLSPD <>                SELRK @                     (CMD, OP) = (2A, 00000040000F0F) 
INSTR @  204         LP4_GOTOLSPD <>                MOVMR @                     (CMD, OP) = (1B, 00000000000D00) 
INSTR @  205         LP4_GOTOLSPD <>                SETRR @                     (CMD, OP) = (0C, 00000000004801) 
INSTR @  206         LP4_GOTOLSPD <>                 ORRR @                     (CMD, OP) = (12, 00000000000100) 
INSTR @  207         LP4_GOTOLSPD <>                MOVRM @                     (CMD, OP) = (1A, 0000000000000D) 
INSTR @  208         LP4_GOTOLSPD <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
INSTR @  209         LP4_GOTOLSPD <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
INSTR @  210         LP4_GOTOLSPD <>                SETRR @                     (CMD, OP) = (0C, 0000000000030D) 
INSTR @  211         LP4_GOTOLSPD <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000D60E0000) 
INSTR @  212         LP4_GOTOLSPD <>             SETSLSPD @                     (CMD, OP) = (40, 00000000000054) 
INSTR @  213         LP4_GOTOLSPD <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 000000D80E0000) 
INSTR @  214         LP4_GOTOLSPD <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  215         LP4_GOTOLSPD <>             SETSLSPD @                     (CMD, OP) = (40, 000000400D0054) 
INSTR @  216         LP4_GOTOLSPD <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  217         LP4_GOTOLSPD <>                CAMRS @                     (CMD, OP) = (21, 000000480D0071) 
INSTR @  218         LP4_GOTOLSPD <>                  NOP @                     (CMD, OP) = (00, 00000000000054) 
INSTR @  219         LP4_GOTOLSPD <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  220         LP4_GOTOLSPD <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  221         LP4_GOTOHSPD <>                SELRK @                     (CMD, OP) = (2A, 00000040000F0F) 
INSTR @  222         LP4_GOTOHSPD <>                MOVMR @                     (CMD, OP) = (1B, 00000000000D00) 
INSTR @  223         LP4_GOTOHSPD <>                SETRR @                     (CMD, OP) = (0C, 0000000000C801) 
INSTR @  224         LP4_GOTOHSPD <>                 ORRR @                     (CMD, OP) = (12, 00000000000100) 
INSTR @  225         LP4_GOTOHSPD <>                MOVRM @                     (CMD, OP) = (1A, 0000000000000D) 
INSTR @  226         LP4_GOTOHSPD <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
INSTR @  227         LP4_GOTOHSPD <>                CAMRS @                     (CMD, OP) = (21, 000000C80D0071) 
INSTR @  228         LP4_GOTOHSPD <>             RSTSLSPD @                     (CMD, OP) = (41, 00000000000054) 
INSTR @  229         LP4_GOTOHSPD <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  230         LP4_GOTOHSPD <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  231        LP4_PROC_DQST <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
INSTR @  232        LP4_PROC_DQST <>                MOVMR @                     (CMD, OP) = (1B, 00000000000200) 
INSTR @  233        LP4_PROC_DQST <>                SETRR @                     (CMD, OP) = (0C, 00000000008001) 
INSTR @  234        LP4_PROC_DQST <>                 ORRR @                     (CMD, OP) = (12, 00000000000100) 
INSTR @  235        LP4_PROC_DQST <>                MOVRM @                     (CMD, OP) = (1A, 00000000000002) 
INSTR @  236        LP4_PROC_DQST <>                CAMRS @                     (CMD, OP) = (21, 0000009B020041) 
INSTR @  237        LP4_PROC_DQST <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  238        LP4_PROC_DQST <>             GETASYNC @                     (CMD, OP) = (62, 000000000F0000) 
INSTR @  239        LP4_PROC_DQST <>               SETTRN @                     (CMD, OP) = (A0, 00000000000010) 
INSTR @  240        LP4_PROC_DQST <>               DRVWCK @                     (CMD, OP) = (2F, 00000000080000) 
INSTR @  241        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFF) 
INSTR @  242        LP4_PROC_DQST <>               ENCSRW @                     (CMD, OP) = (A1, 0000000000000C) 
INSTR @  243        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA104FFC) 
INSTR @  244        LP4_PROC_DQST <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000019030520) 
INSTR @  245        LP4_PROC_DQST <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000002000000) 
INSTR @  246        LP4_PROC_DQST <>              CFGSEQ2 @                     (CMD, OP) = (82, 000000081C1B01) 
INSTR @  247        LP4_PROC_DQST <>              CFGSEQ3 @                     (CMD, OP) = (83, 00000001010101) 
INSTR @  248        LP4_PROC_DQST <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000001) 
INSTR @  249        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004A14) 
INSTR @  250        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004913) 
INSTR @  251        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004818) 
INSTR @  252        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004B19) 
INSTR @  253        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004C1A) 
INSTR @  254        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004D1B) 
INSTR @  255        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004E1C) 
INSTR @  256        LP4_PROC_DQST <>                MOVDR @                     (CMD, OP) = (10, 00000000004F20) 
INSTR @  257        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFD) 
INSTR @  258        LP4_PROC_DQST <>              CFGDATG @                     (CMD, OP) = (8C, 00000000000F83) 
INSTR @  259        LP4_PROC_DQST <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000039) 
INSTR @  260        LP4_PROC_DQST <>              CFGDATR @                     (CMD, OP) = (8D, 00000050008A83) 
INSTR @  261        LP4_PROC_DQST <>              CFGDATR @                     (CMD, OP) = (8D, 00000050008A82) 
INSTR @  262        LP4_PROC_DQST <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000040FFFF) 
INSTR @  263        LP4_PROC_DQST <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  264        LP4_PROC_DQST <>              CFGSWPG @            FOR_LOOP (CMD, OP) = (8A, 0000005A004521) 
INSTR @  265        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004522) 
INSTR @  266        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A304520) 
INSTR @  267        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004521) 
INSTR @  268        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004520) 
INSTR @  269        LP4_PROC_DQST <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
INSTR @  270        LP4_PROC_DQST <>                INCRR @                     (CMD, OP) = (0A, 00000000000103) 
INSTR @  271        LP4_PROC_DQST <>              JUMPNIF @            FOR_LOOP (CMD, OP) = (07, 00000008030002) 
INSTR @  272        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058004520) 
INSTR @  273        LP4_PROC_DQST <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000000C) 
INSTR @  274        LP4_PROC_DQST <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
INSTR @  275        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058004521) 
INSTR @  276        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058204520) 
INSTR @  277        LP4_PROC_DQST <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058004521) 
INSTR @  278        LP4_PROC_DQST <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
INSTR @  279        LP4_PROC_DQST <>                MOVMR @                     (CMD, OP) = (1B, 00000000000200) 
INSTR @  280        LP4_PROC_DQST <>                SETRR @                     (CMD, OP) = (0C, 00000000007F01) 
INSTR @  281        LP4_PROC_DQST <>                ANDRR @                     (CMD, OP) = (11, 00000000000100) 
INSTR @  282        LP4_PROC_DQST <>                MOVRM @                     (CMD, OP) = (1A, 00000000000002) 
INSTR @  283        LP4_PROC_DQST <>                CAMRS @                     (CMD, OP) = (21, 0000001B020071) 
INSTR @  284        LP4_PROC_DQST <>             RSTASYNC @                     (CMD, OP) = (61, 000000000F0071) 
INSTR @  285        LP4_PROC_DQST <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  286        LP4_PROC_DQST <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  287        LP4_PROC_DQST <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000039) 
INSTR @  288        LP4_PROC_DQST <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @  289        LP4_PROC_DQST <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
INSTR @  290        LP4_PROC_DQST <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  291         LP4_PROC_CBT <>               SETTRN @                     (CMD, OP) = (A0, 00000000000004) 
INSTR @  292         LP4_PROC_CBT <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000009) 
INSTR @  293         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  294         LP4_PROC_CBT <>             GETASYNC @                     (CMD, OP) = (62, 000000000F0000) 
INSTR @  295         LP4_PROC_CBT <>                CAMRS @                     (CMD, OP) = (21, 000000400D0071) 
INSTR @  296         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
INSTR @  297         LP4_PROC_CBT <>                MOVRM @                     (CMD, OP) = (1A, 0000000000000C) 
INSTR @  298         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000008704) 
INSTR @  299         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
INSTR @  300         LP4_PROC_CBT <>                CAMRS @                     (CMD, OP) = (21, 000000000C0071) 
INSTR @  301         LP4_PROC_CBT <>               DRVWCK @                     (CMD, OP) = (2F, 00000000080072) 
INSTR @  302         LP4_PROC_CBT <>             SETASYNC @                     (CMD, OP) = (60, 00000000000000) 
INSTR @  303         LP4_PROC_CBT <>             SETASYNC @                     (CMD, OP) = (60, 00000000010000) 
INSTR @  304         LP4_PROC_CBT <>             OENASYNC @                     (CMD, OP) = (63, 0000003FC00000) 
INSTR @  305         LP4_PROC_CBT <>             OENASYNC @                     (CMD, OP) = (63, 00000000010000) 
INSTR @  306         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
INSTR @  307         LP4_PROC_CBT <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000036000000) 
INSTR @  308         LP4_PROC_CBT <>             OENASYNC @                     (CMD, OP) = (63, 00000000000000) 
INSTR @  309         LP4_PROC_CBT <>             OENASYNC @                     (CMD, OP) = (63, 0000003FC10000) 
INSTR @  310         LP4_PROC_CBT <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  311         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  312         LP4_PROC_CBT <>                CAMRS @                     (CMD, OP) = (21, 000000410D0072) 
INSTR @  313         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
INSTR @  314         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
INSTR @  315         LP4_PROC_CBT <>                 CALL @LP4_TURN_OFF_DQS_WO0 (CMD, OP) = (05, 000000000000B2) 
INSTR @  316         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000E00) 
INSTR @  317         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
INSTR @  318         LP4_PROC_CBT <>                 CALL @      LP4_TOGGLE_CKE (CMD, OP) = (05, 000000000000A7) 
INSTR @  319         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000487) 
INSTR @  320         LP4_PROC_CBT <>                CADES @                     (CMD, OP) = (23, 00000000000000) 
INSTR @  321         LP4_PROC_CBT <>                CADES @                     (CMD, OP) = (23, 00000000000000) 
INSTR @  322         LP4_PROC_CBT <>             RSTSLSPD @                     (CMD, OP) = (41, 00000000000024) 
INSTR @  323         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000023) 
INSTR @  324         LP4_PROC_CBT <>                LSHFT @                     (CMD, OP) = (15, 00000001060409) 
INSTR @  325         LP4_PROC_CBT <>             SETASYNC @                     (CMD, OP) = (60, 00000009000000) 
INSTR @  326         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
INSTR @  327         LP4_PROC_CBT <>               JUMPIF @   IF_ST_BYTEINDEX_1 (CMD, OP) = (06, 00000049000000) 
INSTR @  328         LP4_PROC_CBT <>             SETASYNC @                     (CMD, OP) = (60, 00000009010000) 
INSTR @  329         LP4_PROC_CBT <>                  NOP @   IF_ST_BYTEINDEX_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  330         LP4_PROC_CBT <>               DRVWCK @                     (CMD, OP) = (2F, 00000000080072) 
INSTR @  331         LP4_PROC_CBT <>               DRVWCK @                     (CMD, OP) = (2F, 000000000A0000) 
INSTR @  332         LP4_PROC_CBT <>               DRVWCK @                     (CMD, OP) = (2F, 00000000080031) 
INSTR @  333         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  334         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  335         LP4_PROC_CBT <>              CFGSEQ0 @                     (CMD, OP) = (80, 0000000F030520) 
INSTR @  336         LP4_PROC_CBT <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000002000000) 
INSTR @  337         LP4_PROC_CBT <>              CFGSEQ2 @                     (CMD, OP) = (82, 000000061A1901) 
INSTR @  338         LP4_PROC_CBT <>              CFGSEQ3 @                     (CMD, OP) = (83, 00000001010101) 
INSTR @  339         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003714) 
INSTR @  340         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003613) 
INSTR @  341         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003518) 
INSTR @  342         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003819) 
INSTR @  343         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 0000000000391A) 
INSTR @  344         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003A1B) 
INSTR @  345         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003B1C) 
INSTR @  346         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000003C20) 
INSTR @  347         LP4_PROC_CBT <>              MAPSEQ2 @                     (CMD, OP) = (88, 00000000000480) 
INSTR @  348         LP4_PROC_CBT <>              MAPSEQ3 @                     (CMD, OP) = (89, 00000000000011) 
INSTR @  349         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  350         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005E004523) 
INSTR @  351         LP4_PROC_CBT <>             CFGSWPGE @                     (CMD, OP) = (8B, 00000003001F00) 
INSTR @  352         LP4_PROC_CBT <>               SETTRN @                     (CMD, OP) = (A0, 00000000000001) 
INSTR @  353         LP4_PROC_CBT <>               SETTRN @                     (CMD, OP) = (A0, 00000000000004) 
INSTR @  354         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C004523) 
INSTR @  355         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C104520) 
INSTR @  356         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C004521) 
INSTR @  357         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C004520) 
INSTR @  358         LP4_PROC_CBT <>              CFGDATG @                     (CMD, OP) = (8C, 00000000003080) 
INSTR @  359         LP4_PROC_CBT <>              CFGDATR @                     (CMD, OP) = (8D, 00000030000282) 
INSTR @  360         LP4_PROC_CBT <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
INSTR @  361         LP4_PROC_CBT <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000010C) 
INSTR @  362         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 00000000008801) 
INSTR @  363         LP4_PROC_CBT <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 0000006D010001) 
INSTR @  364         LP4_PROC_CBT <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
INSTR @  365         LP4_PROC_CBT <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
INSTR @  366         LP4_PROC_CBT <>             CFGSWPGE @                     (CMD, OP) = (8B, 00000000001F00) 
INSTR @  367         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C004521) 
INSTR @  368         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C204520) 
INSTR @  369         LP4_PROC_CBT <>              CFGSWPG @                     (CMD, OP) = (8A, 00000058004521) 
INSTR @  370         LP4_PROC_CBT <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  371         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  372         LP4_PROC_CBT <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
INSTR @  373         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 0000000000030D) 
INSTR @  374         LP4_PROC_CBT <>              JUMPNIF @       IF_FREQ_BIN_0 (CMD, OP) = (07, 000000790E0000) 
INSTR @  375         LP4_PROC_CBT <>             SETSLSPD @                     (CMD, OP) = (40, 00000000000054) 
INSTR @  376         LP4_PROC_CBT <>               JUMPIF @       IF_FREQ_BIN_1 (CMD, OP) = (06, 0000007B0E0000) 
INSTR @  377         LP4_PROC_CBT <>                  NOP @       IF_FREQ_BIN_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  378         LP4_PROC_CBT <>             SETSLSPD @                     (CMD, OP) = (40, 000000400D0054) 
INSTR @  379         LP4_PROC_CBT <>                  NOP @       IF_FREQ_BIN_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  380         LP4_PROC_CBT <>                CADES @                     (CMD, OP) = (23, 00000000000000) 
INSTR @  381         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  382         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
INSTR @  383         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000F00) 
INSTR @  384         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
INSTR @  385         LP4_PROC_CBT <>                 CALL @      LP4_TOGGLE_CKE (CMD, OP) = (05, 000000000000A7) 
INSTR @  386         LP4_PROC_CBT <>                CADES @                     (CMD, OP) = (23, 0000000000002D) 
INSTR @  387         LP4_PROC_CBT <>                CAMRS @                     (CMD, OP) = (21, 000000400D0072) 
INSTR @  388         LP4_PROC_CBT <>             RSTASYNC @                     (CMD, OP) = (61, 000000000F0000) 
INSTR @  389         LP4_PROC_CBT <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  390         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000087) 
INSTR @  391         LP4_PROC_CBT <>                 CALL @LP4_TURN_OFF_DQS_WO0 (CMD, OP) = (05, 000000000000B2) 
INSTR @  392         LP4_PROC_CBT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  393         LP4_PROC_CBT <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  394         LP4_PROC_CBT <>              MAPSEQ2 @                     (CMD, OP) = (88, 00000000000400) 
INSTR @  395         LP4_PROC_CBT <>                MOVRD @                     (CMD, OP) = (18, 00000000000487) 
INSTR @  396         LP4_PROC_CBT <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  397    LP4_PROC_CBT_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000402FFFF) 
INSTR @  398    LP4_PROC_CBT_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000002FFFF) 
INSTR @  399    LP4_PROC_CBT_VREF <>                MOVDR @                     (CMD, OP) = (10, 00000000003D00) 
INSTR @  400    LP4_PROC_CBT_VREF <>               JUMPIF @   IF_ST_BYTEINDEX_0 (CMD, OP) = (06, 00000092000000) 
INSTR @  401    LP4_PROC_CBT_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
INSTR @  402    LP4_PROC_CBT_VREF <>                  NOP @   IF_ST_BYTEINDEX_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  403    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  404    LP4_PROC_CBT_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
INSTR @  405    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000101) 
INSTR @  406    LP4_PROC_CBT_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000188) 
INSTR @  407    LP4_PROC_CBT_VREF <>                 CALL @        LP4_PROC_CBT (CMD, OP) = (05, 00000000000123) 
INSTR @  408    LP4_PROC_CBT_VREF <>              CFGDATR @                     (CMD, OP) = (8D, 00000020000001) 
INSTR @  409    LP4_PROC_CBT_VREF <>                INCRR @                     (CMD, OP) = (0A, 00000000000500) 
INSTR @  410    LP4_PROC_CBT_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 0000009400000F) 
INSTR @  411    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000003F02) 
INSTR @  412    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000103) 
INSTR @  413    LP4_PROC_CBT_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000908) 
INSTR @  414    LP4_PROC_CBT_VREF <>                MOVDR @                     (CMD, OP) = (10, 00000000000903) 
INSTR @  415    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 000000002A0400) 
INSTR @  416    LP4_PROC_CBT_VREF <>                ADDRR @                     (CMD, OP) = (0E, 00000000030000) 
INSTR @  417    LP4_PROC_CBT_VREF <>              APBREAD @                     (CMD, OP) = (FB, 00000000000000) 
INSTR @  418    LP4_PROC_CBT_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000D87) 
INSTR @  419    LP4_PROC_CBT_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  420    LP4_PROC_CBT_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000088) 
INSTR @  421    LP4_PROC_CBT_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  422    LP4_PROC_CBT_VREF <>                 CALL @        LP4_PROC_CBT (CMD, OP) = (05, 00000000000123) 
INSTR @  423    LP4_PROC_CBT_VREF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  424   LP4_PROC_READ_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000400FFFF) 
INSTR @  425   LP4_PROC_READ_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  426   LP4_PROC_READ_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
INSTR @  427   LP4_PROC_READ_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000101) 
INSTR @  428   LP4_PROC_READ_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000188) 
INSTR @  429   LP4_PROC_READ_VREF <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 0000000000025F) 
INSTR @  430   LP4_PROC_READ_VREF <>                INCRR @                     (CMD, OP) = (0A, 00000000000500) 
INSTR @  431   LP4_PROC_READ_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 000000AA00000F) 
INSTR @  432   LP4_PROC_READ_VREF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000010) 
INSTR @  433   LP4_PROC_READ_VREF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000100) 
INSTR @  434   LP4_PROC_READ_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000208) 
INSTR @  435   LP4_PROC_READ_VREF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  436   LP4_PROC_READ_VREF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @  437   LP4_PROC_READ_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  438   LP4_PROC_READ_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  439   LP4_PROC_READ_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000088) 
INSTR @  440   LP4_PROC_READ_VREF <>                 CALL @       LP4_PROC_READ (CMD, OP) = (05, 0000000000025F) 
INSTR @  441   LP4_PROC_READ_VREF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  442  LP4_PROC_WRITE_VREF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000400FFFF) 
INSTR @  443  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  444  LP4_PROC_WRITE_VREF <>                MOVRD @       FOR_LOOP_VREF (CMD, OP) = (18, 00000000000087) 
INSTR @  445  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000101) 
INSTR @  446  LP4_PROC_WRITE_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000188) 
INSTR @  447  LP4_PROC_WRITE_VREF <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 000000000002AF) 
INSTR @  448  LP4_PROC_WRITE_VREF <>                INCRR @                     (CMD, OP) = (0A, 00000000000500) 
INSTR @  449  LP4_PROC_WRITE_VREF <>              JUMPNIF @       FOR_LOOP_VREF (CMD, OP) = (07, 000000BC00000F) 
INSTR @  450  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 0000000000FF02) 
INSTR @  451  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000303) 
INSTR @  452  LP4_PROC_WRITE_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000808) 
INSTR @  453  LP4_PROC_WRITE_VREF <>                MOVDR @                     (CMD, OP) = (10, 00000000000903) 
INSTR @  454  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 000000002A0400) 
INSTR @  455  LP4_PROC_WRITE_VREF <>                ADDRR @                     (CMD, OP) = (0E, 00000000030000) 
INSTR @  456  LP4_PROC_WRITE_VREF <>              APBREAD @                     (CMD, OP) = (FB, 00000000000000) 
INSTR @  457  LP4_PROC_WRITE_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000D87) 
INSTR @  458  LP4_PROC_WRITE_VREF <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  459  LP4_PROC_WRITE_VREF <>                MOVRD @                     (CMD, OP) = (18, 00000000000088) 
INSTR @  460  LP4_PROC_WRITE_VREF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  461  LP4_PROC_WRITE_VREF <>                 CALL @      LP4_PROC_WRITE (CMD, OP) = (05, 000000000002AF) 
INSTR @  462  LP4_PROC_WRITE_VREF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  463    LP4_PROC_READGATE <>               DRVWCK @                     (CMD, OP) = (2F, 0000000000000A) 
INSTR @  464    LP4_PROC_READGATE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  465    LP4_PROC_READGATE <>                CAMRS @                     (CMD, OP) = (21, 000000CA0D0080) 
INSTR @  466    LP4_PROC_READGATE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  467    LP4_PROC_READGATE <>               SETTRN @                     (CMD, OP) = (A0, 00000000000040) 
INSTR @  468    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  469    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFF) 
INSTR @  470    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000080) 
INSTR @  471    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
INSTR @  472    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  473    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA104FFC) 
INSTR @  474    LP4_PROC_READGATE <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000003030E20) 
INSTR @  475    LP4_PROC_READGATE <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000003000000) 
INSTR @  476    LP4_PROC_READGATE <>              CFGSEQ2 @                     (CMD, OP) = (82, 0000000E0D0201) 
INSTR @  477    LP4_PROC_READGATE <>              CFGSEQ3 @                     (CMD, OP) = (83, 0000000F070605) 
INSTR @  478    LP4_PROC_READGATE <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000040) 
INSTR @  479    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B414) 
INSTR @  480    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B313) 
INSTR @  481    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B218) 
INSTR @  482    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B512) 
INSTR @  483    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B619) 
INSTR @  484    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B71A) 
INSTR @  485    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B81B) 
INSTR @  486    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000B91C) 
INSTR @  487    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BA1D) 
INSTR @  488    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BB1E) 
INSTR @  489    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BC1F) 
INSTR @  490    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BD20) 
INSTR @  491    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BE21) 
INSTR @  492    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000BF22) 
INSTR @  493    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004525) 
INSTR @  494    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005A004524) 
INSTR @  495    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  496    LP4_PROC_READGATE <>              CFGDATG @                     (CMD, OP) = (8C, 00000000002FFF) 
INSTR @  497    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001001291) 
INSTR @  498    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001001290) 
INSTR @  499    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000300FFFF) 
INSTR @  500    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (06, 000000F90F0002) 
INSTR @  501    LP4_PROC_READGATE <>              CFGDATG @                     (CMD, OP) = (8C, 00000000002FFF) 
INSTR @  502    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001001291) 
INSTR @  503    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001001290) 
INSTR @  504    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000200FFFF) 
INSTR @  505    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (00, 00000000000000) 
INSTR @  506    LP4_PROC_READGATE <>              MAPSEQ4 @                     (CMD, OP) = (90, 00000000000000) 
INSTR @  507    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  508    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0198) 
INSTR @  509    LP4_PROC_READGATE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120320) 
INSTR @  510    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000010F0002) 
INSTR @  511    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0998) 
INSTR @  512    LP4_PROC_READGATE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000320) 
INSTR @  513    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  514    LP4_PROC_READGATE <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
INSTR @  515    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  516    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000000C) 
INSTR @  517    LP4_PROC_READGATE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
INSTR @  518    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
INSTR @  519    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8204FFC) 
INSTR @  520    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
INSTR @  521    LP4_PROC_READGATE <>               SETTRN @                     (CMD, OP) = (A0, 00000000000020) 
INSTR @  522    LP4_PROC_READGATE <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000006030701) 
INSTR @  523    LP4_PROC_READGATE <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000002000000) 
INSTR @  524    LP4_PROC_READGATE <>              CFGSEQ2 @                     (CMD, OP) = (82, 00000007211101) 
INSTR @  525    LP4_PROC_READGATE <>              CFGSEQ3 @                     (CMD, OP) = (83, 00000023070605) 
INSTR @  526    LP4_PROC_READGATE <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000030) 
INSTR @  527    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C214) 
INSTR @  528    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C113) 
INSTR @  529    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C018) 
INSTR @  530    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C312) 
INSTR @  531    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C419) 
INSTR @  532    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C51A) 
INSTR @  533    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C61B) 
INSTR @  534    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C71C) 
INSTR @  535    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C81D) 
INSTR @  536    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000C91E) 
INSTR @  537    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000CA1F) 
INSTR @  538    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000CB20) 
INSTR @  539    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000CC21) 
INSTR @  540    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000CD22) 
INSTR @  541    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  542    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0180) 
INSTR @  543    LP4_PROC_READGATE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120320) 
INSTR @  544    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000230F0002) 
INSTR @  545    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0980) 
INSTR @  546    LP4_PROC_READGATE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000320) 
INSTR @  547    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  548    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  549    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  550    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA408FFF) 
INSTR @  551    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  552    LP4_PROC_READGATE <>              CFGDATG @                     (CMD, OP) = (8C, 0000000010347C) 
INSTR @  553    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C07291) 
INSTR @  554    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C07290) 
INSTR @  555    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
INSTR @  556    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000300FFFF) 
INSTR @  557    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (06, 000000330F0002) 
INSTR @  558    LP4_PROC_READGATE <>              CFGDATG @                     (CMD, OP) = (8C, 0000000000347C) 
INSTR @  559    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000081407291) 
INSTR @  560    LP4_PROC_READGATE <>              CFGDATR @                     (CMD, OP) = (8D, 00000081407290) 
INSTR @  561    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F80E) 
INSTR @  562    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000200FFFF) 
INSTR @  563    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (00, 00000000000000) 
INSTR @  564    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000180) 
INSTR @  565    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
INSTR @  566    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  567    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 0000000055000E) 
INSTR @  568    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000847401) 
INSTR @  569    LP4_PROC_READGATE <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0E01) 
INSTR @  570    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000A47401) 
INSTR @  571    LP4_PROC_READGATE <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0E01) 
INSTR @  572    LP4_PROC_READGATE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  573    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_4 (CMD, OP) = (06, 0000003F0F0002) 
INSTR @  574    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_4_4 (CMD, OP) = (06, 000000470F0004) 
INSTR @  575    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_4 (CMD, OP) = (00, 00000000000000) 
INSTR @  576    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000005) 
INSTR @  577    LP4_PROC_READGATE <>              STRTSEQ @         FOR_LOOP_01 (CMD, OP) = (85, 00000000000000) 
INSTR @  578    LP4_PROC_READGATE <>                INCRR @                     (CMD, OP) = (0A, 00000000000105) 
INSTR @  579    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
INSTR @  580    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  581    LP4_PROC_READGATE <>              JUMPNIF @         FOR_LOOP_01 (CMD, OP) = (07, 0000004105000F) 
INSTR @  582    LP4_PROC_READGATE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_5 (CMD, OP) = (06, 0000004E0F0002) 
INSTR @  583    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_4_4 (CMD, OP) = (00, 00000000000000) 
INSTR @  584    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000005) 
INSTR @  585    LP4_PROC_READGATE <>              STRTSEQ @         FOR_LOOP_02 (CMD, OP) = (85, 00000000000000) 
INSTR @  586    LP4_PROC_READGATE <>                INCRR @                     (CMD, OP) = (0A, 00000000000105) 
INSTR @  587    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
INSTR @  588    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  589    LP4_PROC_READGATE <>              JUMPNIF @         FOR_LOOP_02 (CMD, OP) = (07, 0000004905000F) 
INSTR @  590    LP4_PROC_READGATE <>                  NOP @IF_ST_DFI2CKRATIO_2_5 (CMD, OP) = (00, 00000000000000) 
INSTR @  591    LP4_PROC_READGATE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8408FFF) 
INSTR @  592    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000001) 
INSTR @  593    LP4_PROC_READGATE <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  594    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000004) 
INSTR @  595    LP4_PROC_READGATE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
INSTR @  596    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
INSTR @  597    LP4_PROC_READGATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  598    LP4_PROC_READGATE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  599    LP4_PROC_READGATE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  600    LP4_PROC_READGATE <>                CAMRS @                     (CMD, OP) = (21, 000000C80D0080) 
INSTR @  601    LP4_PROC_READGATE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  602    LP4_PROC_READGATE <>               DRVWCK @                     (CMD, OP) = (2F, 0000000000000A) 
INSTR @  603    LP4_PROC_READGATE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  604    LP4_PROC_READGATE <>              MAPSEQ0 @                     (CMD, OP) = (86, 00000000000000) 
INSTR @  605    LP4_PROC_READGATE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
INSTR @  606    LP4_PROC_READGATE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  607        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
INSTR @  608        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000008704) 
INSTR @  609        LP4_PROC_READ <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  610        LP4_PROC_READ <>               SETTRN @                     (CMD, OP) = (A0, 00000000000100) 
INSTR @  611        LP4_PROC_READ <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  612        LP4_PROC_READ <>                CAMRS @                     (CMD, OP) = (21, 000000000F0071) 
INSTR @  613        LP4_PROC_READ <>                CAMRS @                     (CMD, OP) = (21, 00000000140071) 
INSTR @  614        LP4_PROC_READ <>                CAMRS @                     (CMD, OP) = (21, 0000005A200071) 
INSTR @  615        LP4_PROC_READ <>                CAMRS @                     (CMD, OP) = (21, 0000003C280072) 
INSTR @  616        LP4_PROC_READ <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  617        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFF) 
INSTR @  618        LP4_PROC_READ <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000010) 
INSTR @  619        LP4_PROC_READ <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
INSTR @  620        LP4_PROC_READ <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  621        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8104FFC) 
INSTR @  622        LP4_PROC_READ <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000001030E20) 
INSTR @  623        LP4_PROC_READ <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000003000000) 
INSTR @  624        LP4_PROC_READ <>              CFGSEQ2 @                     (CMD, OP) = (82, 000000000C1101) 
INSTR @  625        LP4_PROC_READ <>              CFGSEQ3 @                     (CMD, OP) = (83, 0000001E07060B) 
INSTR @  626        LP4_PROC_READ <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000040) 
INSTR @  627        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D014) 
INSTR @  628        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000CF13) 
INSTR @  629        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000CE18) 
INSTR @  630        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D112) 
INSTR @  631        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D219) 
INSTR @  632        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D31A) 
INSTR @  633        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D41B) 
INSTR @  634        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D51C) 
INSTR @  635        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D61D) 
INSTR @  636        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D71E) 
INSTR @  637        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D81F) 
INSTR @  638        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000D920) 
INSTR @  639        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000DA21) 
INSTR @  640        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 0000000000DB22) 
INSTR @  641        LP4_PROC_READ <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
INSTR @  642        LP4_PROC_READ <>                ADDRR @                     (CMD, OP) = (0E, 000000001B001B) 
INSTR @  643        LP4_PROC_READ <>                ADDRR @                     (CMD, OP) = (0E, 000000001C001C) 
INSTR @  644        LP4_PROC_READ <>                ADDRR @                     (CMD, OP) = (0E, 000000001D001D) 
INSTR @  645        LP4_PROC_READ <>                ADDRR @                     (CMD, OP) = (0E, 00000000200020) 
INSTR @  646        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  647        LP4_PROC_READ <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0180) 
INSTR @  648        LP4_PROC_READ <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120320) 
INSTR @  649        LP4_PROC_READ <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 0000008C0F0002) 
INSTR @  650        LP4_PROC_READ <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0980) 
INSTR @  651        LP4_PROC_READ <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000320) 
INSTR @  652        LP4_PROC_READ <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  653        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000008801) 
INSTR @  654        LP4_PROC_READ <>               JUMPIF @             NO_VREF (CMD, OP) = (06, 00000091010000) 
INSTR @  655        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005400462D) 
INSTR @  656        LP4_PROC_READ <>               JUMPIF @             VREF_EN (CMD, OP) = (06, 00000092010001) 
INSTR @  657        LP4_PROC_READ <>              CFGSWPG @             NO_VREF (CMD, OP) = (8A, 0000005000462D) 
INSTR @  658        LP4_PROC_READ <>                  NOP @             VREF_EN (CMD, OP) = (00, 00000000000001) 
INSTR @  659        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  660        LP4_PROC_READ <>              CFGDATG @                     (CMD, OP) = (8C, 0000000010347C) 
INSTR @  661        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C01311) 
INSTR @  662        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C01310) 
INSTR @  663        LP4_PROC_READ <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000900FFFF) 
INSTR @  664        LP4_PROC_READ <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 0000009D0F0002) 
INSTR @  665        LP4_PROC_READ <>              CFGDATG @                     (CMD, OP) = (8C, 0000000000347C) 
INSTR @  666        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081401311) 
INSTR @  667        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081401310) 
INSTR @  668        LP4_PROC_READ <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000800FFFF) 
INSTR @  669        LP4_PROC_READ <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  670        LP4_PROC_READ <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
INSTR @  671        LP4_PROC_READ <>              CFGDATR @                     (CMD, OP) = (8D, 00000081C01310) 
INSTR @  672        LP4_PROC_READ <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  673        LP4_PROC_READ <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  674        LP4_PROC_READ <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000000C) 
INSTR @  675        LP4_PROC_READ <>                MOVDR @                     (CMD, OP) = (10, 00000000008801) 
INSTR @  676        LP4_PROC_READ <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 000000A6010001) 
INSTR @  677        LP4_PROC_READ <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
INSTR @  678        LP4_PROC_READ <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
INSTR @  679        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
INSTR @  680        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8204FFC) 
INSTR @  681        LP4_PROC_READ <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
INSTR @  682        LP4_PROC_READ <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000100FFFF) 
INSTR @  683        LP4_PROC_READ <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  684        LP4_PROC_READ <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @  685        LP4_PROC_READ <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  686        LP4_PROC_READ <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  687       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000008700) 
INSTR @  688       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000008704) 
INSTR @  689       LP4_PROC_WRITE <>             SETREFMD @                     (CMD, OP) = (42, 0000000000000B) 
INSTR @  690       LP4_PROC_WRITE <>                CAMRS @                     (CMD, OP) = (21, 000000000E0083) 
INSTR @  691       LP4_PROC_WRITE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  692       LP4_PROC_WRITE <>               DRVWCK @                     (CMD, OP) = (2F, 0000000007000A) 
INSTR @  693       LP4_PROC_WRITE <>               SETTRN @                     (CMD, OP) = (A0, 00000000001000) 
INSTR @  694       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  695       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FC004FFF) 
INSTR @  696       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000020) 
INSTR @  697       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FC104FFC) 
INSTR @  698       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  699       LP4_PROC_WRITE <>               SETTRN @                     (CMD, OP) = (A0, 00000000001000) 
INSTR @  700       LP4_PROC_WRITE <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000001035820) 
INSTR @  701       LP4_PROC_WRITE <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000003000000) 
INSTR @  702       LP4_PROC_WRITE <>              CFGSEQ2 @                     (CMD, OP) = (82, 00000030094001) 
INSTR @  703       LP4_PROC_WRITE <>              CFGSEQ3 @                     (CMD, OP) = (83, 0000000B070605) 
INSTR @  704       LP4_PROC_WRITE <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000440) 
INSTR @  705       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EC14) 
INSTR @  706       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EB13) 
INSTR @  707       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EA18) 
INSTR @  708       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000ED12) 
INSTR @  709       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EE19) 
INSTR @  710       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000EF1A) 
INSTR @  711       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F01B) 
INSTR @  712       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F11C) 
INSTR @  713       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F21D) 
INSTR @  714       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F31E) 
INSTR @  715       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F41F) 
INSTR @  716       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F520) 
INSTR @  717       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F621) 
INSTR @  718       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 0000000000F722) 
INSTR @  719       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000100) 
INSTR @  720       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
INSTR @  721       LP4_PROC_WRITE <>                ADDRR @                     (CMD, OP) = (0E, 00000000002020) 
INSTR @  722       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  723       LP4_PROC_WRITE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0180) 
INSTR @  724       LP4_PROC_WRITE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120720) 
INSTR @  725       LP4_PROC_WRITE <>              MAPSEQ4 @                     (CMD, OP) = (90, 000000009F0183) 
INSTR @  726       LP4_PROC_WRITE <>              MAPSEQ5 @                     (CMD, OP) = (91, 00000000120120) 
INSTR @  727       LP4_PROC_WRITE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000DC0F0002) 
INSTR @  728       LP4_PROC_WRITE <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0980) 
INSTR @  729       LP4_PROC_WRITE <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000720) 
INSTR @  730       LP4_PROC_WRITE <>              MAPSEQ4 @                     (CMD, OP) = (90, 000000001F0983) 
INSTR @  731       LP4_PROC_WRITE <>              MAPSEQ5 @                     (CMD, OP) = (91, 00000000000120) 
INSTR @  732       LP4_PROC_WRITE <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  733       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C0047A9) 
INSTR @  734       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 0000005C0047A8) 
INSTR @  735       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  736       LP4_PROC_WRITE <>              CFGDATG @                     (CMD, OP) = (8C, 0000000010040B) 
INSTR @  737       LP4_PROC_WRITE <>              CFGDATG @                     (CMD, OP) = (8C, 00000000100408) 
INSTR @  738       LP4_PROC_WRITE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001C013D1) 
INSTR @  739       LP4_PROC_WRITE <>              CFGDATR @                     (CMD, OP) = (8D, 00000001C013D0) 
INSTR @  740       LP4_PROC_WRITE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000100FFFF) 
INSTR @  741       LP4_PROC_WRITE <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000EB0F0002) 
INSTR @  742       LP4_PROC_WRITE <>              CFGDATG @                     (CMD, OP) = (8C, 0000000000040B) 
INSTR @  743       LP4_PROC_WRITE <>              CFGDATG @                     (CMD, OP) = (8C, 00000000000408) 
INSTR @  744       LP4_PROC_WRITE <>              CFGDATR @                     (CMD, OP) = (8D, 000000014013D1) 
INSTR @  745       LP4_PROC_WRITE <>              CFGDATR @                     (CMD, OP) = (8D, 000000014013D0) 
INSTR @  746       LP4_PROC_WRITE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
INSTR @  747       LP4_PROC_WRITE <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  748       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000020) 
INSTR @  749       LP4_PROC_WRITE <>              STRTSEQ @                     (CMD, OP) = (85, 00000000000000) 
INSTR @  750       LP4_PROC_WRITE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000029) 
INSTR @  751       LP4_PROC_WRITE <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  752       LP4_PROC_WRITE <>               LNEVAL @                     (CMD, OP) = (8F, 0000000000002C) 
INSTR @  753       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000008801) 
INSTR @  754       LP4_PROC_WRITE <>               JUMPIF @            NO_ERROR (CMD, OP) = (06, 000000F4010001) 
INSTR @  755       LP4_PROC_WRITE <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
INSTR @  756       LP4_PROC_WRITE <>                  NOP @            NO_ERROR (CMD, OP) = (00, 00000000000001) 
INSTR @  757       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FC004FFD) 
INSTR @  758       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FC204FFC) 
INSTR @  759       LP4_PROC_WRITE <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8004FFD) 
INSTR @  760       LP4_PROC_WRITE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000008FFFF) 
INSTR @  761       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
INSTR @  762       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000000101) 
INSTR @  763       LP4_PROC_WRITE <>                ADDRR @                     (CMD, OP) = (0E, 00000000010000) 
INSTR @  764       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000018) 
INSTR @  765       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000100) 
INSTR @  766       LP4_PROC_WRITE <>                MOVDR @                     (CMD, OP) = (10, 00000000000201) 
INSTR @  767       LP4_PROC_WRITE <>                ADDRR @                     (CMD, OP) = (0E, 00000000010000) 
INSTR @  768       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000019) 
INSTR @  769       LP4_PROC_WRITE <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  770       LP4_PROC_WRITE <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000009) 
INSTR @  771       LP4_PROC_WRITE <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000FFFF) 
INSTR @  772       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000608) 
INSTR @  773       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000709) 
INSTR @  774       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000816) 
INSTR @  775       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000917) 
INSTR @  776       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
INSTR @  777       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000005) 
INSTR @  778       LP4_PROC_WRITE <>              USRLOAD @                     (CMD, OP) = (19, 00000000000100) 
INSTR @  779       LP4_PROC_WRITE <>                MOVRD @                     (CMD, OP) = (18, 00000000000006) 
INSTR @  780       LP4_PROC_WRITE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  781       LP4_PROC_WRITF <>               DRVWCK @                     (CMD, OP) = (2F, 0000000007000A) 
INSTR @  782       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  783       LP4_PROC_WRITF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000800) 
INSTR @  784       LP4_PROC_WRITF <>             ENCMDCNT @                     (CMD, OP) = (D0, 00000003080800) 
INSTR @  785       LP4_PROC_WRITF <>            CFGCMDCNT @                     (CMD, OP) = (D1, 00000007200120) 
INSTR @  786       LP4_PROC_WRITF <>             ENCMDCNT @                     (CMD, OP) = (D0, 0000000C050500) 
INSTR @  787       LP4_PROC_WRITF <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA004FFF) 
INSTR @  788       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000020) 
INSTR @  789       LP4_PROC_WRITF <>                SETRR @                     (CMD, OP) = (0C, 00000000800003) 
INSTR @  790       LP4_PROC_WRITF <>                SETRR @                     (CMD, OP) = (0C, 00000000000003) 
INSTR @  791       LP4_PROC_WRITF <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA104FFC) 
INSTR @  792       LP4_PROC_WRITF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000800) 
INSTR @  793       LP4_PROC_WRITF <>              CFGSEQ0 @                     (CMD, OP) = (80, 00000003030701) 
INSTR @  794       LP4_PROC_WRITF <>              CFGSEQ1 @                     (CMD, OP) = (81, 00000002000000) 
INSTR @  795       LP4_PROC_WRITF <>              CFGSEQ2 @                     (CMD, OP) = (82, 00000038094801) 
INSTR @  796       LP4_PROC_WRITF <>              CFGSEQ3 @                     (CMD, OP) = (83, 00000060070605) 
INSTR @  797       LP4_PROC_WRITF <>              CFGSEQ4 @                     (CMD, OP) = (84, 00000000000440) 
INSTR @  798       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000DE14) 
INSTR @  799       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000DD13) 
INSTR @  800       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000DC18) 
INSTR @  801       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000DF12) 
INSTR @  802       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E019) 
INSTR @  803       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E11A) 
INSTR @  804       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E21B) 
INSTR @  805       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E31C) 
INSTR @  806       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E41D) 
INSTR @  807       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E51E) 
INSTR @  808       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E61F) 
INSTR @  809       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E720) 
INSTR @  810       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E821) 
INSTR @  811       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 0000000000E922) 
INSTR @  812       LP4_PROC_WRITF <>              USRLOAD @                     (CMD, OP) = (19, 00000000000000) 
INSTR @  813       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  814       LP4_PROC_WRITF <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000009F0180) 
INSTR @  815       LP4_PROC_WRITF <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000120720) 
INSTR @  816       LP4_PROC_WRITF <>              MAPSEQ4 @                     (CMD, OP) = (90, 000000009F0183) 
INSTR @  817       LP4_PROC_WRITF <>              MAPSEQ5 @                     (CMD, OP) = (91, 00000000120120) 
INSTR @  818       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (06, 000000370F0002) 
INSTR @  819       LP4_PROC_WRITF <>              MAPSEQ0 @                     (CMD, OP) = (86, 000000001F0980) 
INSTR @  820       LP4_PROC_WRITF <>              MAPSEQ1 @                     (CMD, OP) = (87, 00000000000720) 
INSTR @  821       LP4_PROC_WRITF <>              MAPSEQ4 @                     (CMD, OP) = (90, 000000001F0983) 
INSTR @  822       LP4_PROC_WRITF <>              MAPSEQ5 @                     (CMD, OP) = (91, 00000000000120) 
INSTR @  823       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_0 (CMD, OP) = (00, 00000000000000) 
INSTR @  824       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  825       LP4_PROC_WRITF <>              CFGSWPG @                     (CMD, OP) = (8A, 000000FA408FFF) 
INSTR @  826       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  827       LP4_PROC_WRITF <>              CFGDATG @                     (CMD, OP) = (8C, 00000000103408) 
INSTR @  828       LP4_PROC_WRITF <>              CFGDATR @                     (CMD, OP) = (8D, 00000001C073D1) 
INSTR @  829       LP4_PROC_WRITF <>              CFGDATR @                     (CMD, OP) = (8D, 00000001C073D0) 
INSTR @  830       LP4_PROC_WRITF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000100FEFF) 
INSTR @  831       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (06, 000000440F0002) 
INSTR @  832       LP4_PROC_WRITF <>              CFGDATG @                     (CMD, OP) = (8C, 00000000003408) 
INSTR @  833       LP4_PROC_WRITF <>              CFGDATR @                     (CMD, OP) = (8D, 000000014073D1) 
INSTR @  834       LP4_PROC_WRITF <>              CFGDATR @                     (CMD, OP) = (8D, 000000014073D0) 
INSTR @  835       LP4_PROC_WRITF <>             CFGDATRE @                     (CMD, OP) = (8E, 0000000000EFFF) 
INSTR @  836       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_1 (CMD, OP) = (00, 00000000000000) 
INSTR @  837       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000220) 
INSTR @  838       LP4_PROC_WRITF <>                MOVDR @                     (CMD, OP) = (10, 00000000001B0F) 
INSTR @  839       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (06, 000000490F0002) 
INSTR @  840       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_4_2 (CMD, OP) = (06, 0000004F0F0004) 
INSTR @  841       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_2 (CMD, OP) = (00, 00000000000000) 
INSTR @  842       LP4_PROC_WRITF <>                SETRR @                     (CMD, OP) = (0C, 00000000000005) 
INSTR @  843       LP4_PROC_WRITF <>              STRTSEQ @         FOR_LOOP_01 (CMD, OP) = (85, 00000000000000) 
INSTR @  844       LP4_PROC_WRITF <>                INCRR @                     (CMD, OP) = (0A, 00000000000105) 
INSTR @  845       LP4_PROC_WRITF <>              JUMPNIF @         FOR_LOOP_01 (CMD, OP) = (07, 0000004B050007) 
INSTR @  846       LP4_PROC_WRITF <>               JUMPIF @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (06, 000000540F0002) 
INSTR @  847       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_4_2 (CMD, OP) = (00, 00000000000000) 
INSTR @  848       LP4_PROC_WRITF <>                SETRR @                     (CMD, OP) = (0C, 00000000000005) 
INSTR @  849       LP4_PROC_WRITF <>              STRTSEQ @         FOR_LOOP_02 (CMD, OP) = (85, 00000000000000) 
INSTR @  850       LP4_PROC_WRITF <>                INCRR @                     (CMD, OP) = (0A, 00000000000105) 
INSTR @  851       LP4_PROC_WRITF <>              JUMPNIF @         FOR_LOOP_02 (CMD, OP) = (07, 00000051050007) 
INSTR @  852       LP4_PROC_WRITF <>                  NOP @IF_ST_DFI2CKRATIO_2_3 (CMD, OP) = (00, 00000000000000) 
INSTR @  853       LP4_PROC_WRITF <>              CFGSWPG @                     (CMD, OP) = (8A, 000000F8408FFF) 
INSTR @  854       LP4_PROC_WRITF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000001) 
INSTR @  855       LP4_PROC_WRITF <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  856       LP4_PROC_WRITF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000004) 
INSTR @  857       LP4_PROC_WRITF <>                 CALL @     LP4_ERROR_TRACE (CMD, OP) = (05, 0000000000035E) 
INSTR @  858       LP4_PROC_WRITF <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  859       LP4_PROC_WRITF <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @  860       LP4_PROC_WRITF <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000001) 
INSTR @  861       LP4_PROC_WRITF <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  862      LP4_ERROR_TRACE <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  863      LP4_ERROR_TRACE <>              USRLOAD @                     (CMD, OP) = (19, 0000000000040E) 
INSTR @  864      LP4_ERROR_TRACE <>               JUMPIF @               IF_ST (CMD, OP) = (06, 000000630E0000) 
INSTR @  865      LP4_ERROR_TRACE <>                DEBUG @                     (CMD, OP) = (02, 0000007400000E) 
INSTR @  866      LP4_ERROR_TRACE <>                 HALT @                     (CMD, OP) = (03, 00000000000000) 
INSTR @  867      LP4_ERROR_TRACE <>                  NOP @               IF_ST (CMD, OP) = (00, 00000000000000) 
INSTR @  868      LP4_ERROR_TRACE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  869         LP4_DRAMSRFE <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
INSTR @  870         LP4_DRAMSRFE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  871         LP4_DRAMSRFE <>                CADES @                     (CMD, OP) = (23, 00000000000090) 
INSTR @  872         LP4_DRAMSRFE <>               CAUSER @                     (CMD, OP) = (29, 000000180000A0) 
INSTR @  873         LP4_DRAMSRFE <>                CANOP @                     (CMD, OP) = (24, 00000000000000) 
INSTR @  874         LP4_DRAMSRFE <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  875         LP4_DRAMSRFE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  876         LP4_DRAMSRFX <>                SELRK @                     (CMD, OP) = (2A, 00000040000F01) 
INSTR @  877         LP4_DRAMSRFX <>             SETREFMD @                     (CMD, OP) = (42, 00000000000003) 
INSTR @  878         LP4_DRAMSRFX <>               CAUSER @                     (CMD, OP) = (29, 000000140000A1) 
INSTR @  879         LP4_DRAMSRFX <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  880         LP4_DRAMSRFX <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  881         LP4_DRAMSRFX <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  882        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 00000000261000) 
INSTR @  883        LP4_MR_UPDATE <>              APBREAD @                     (CMD, OP) = (FB, 00000000000000) 
INSTR @  884        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 00000000038001) 
INSTR @  885        LP4_MR_UPDATE <>                ANDRR @                     (CMD, OP) = (11, 000000000D0101) 
INSTR @  886        LP4_MR_UPDATE <>                LSHFT @                     (CMD, OP) = (15, 00000000070100) 
INSTR @  887        LP4_MR_UPDATE <>               JUMPIF @       IF_DRAMSRFPDX (CMD, OP) = (06, 00000085000005) 
INSTR @  888        LP4_MR_UPDATE <>               JUMPIF @         IF_DRAMINIT (CMD, OP) = (06, 0000007B000004) 
INSTR @  889        LP4_MR_UPDATE <>              JUMPNIF @      IF_NO_DRAMINIT (CMD, OP) = (07, 0000008B000004) 
INSTR @  890        LP4_MR_UPDATE <>              JUMPNIF @     IF_NO_DRAMSRFPD (CMD, OP) = (07, 0000008C000005) 
INSTR @  891        LP4_MR_UPDATE <>                  NOP @         IF_DRAMINIT (CMD, OP) = (00, 00000000000000) 
INSTR @  892        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
INSTR @  893        LP4_MR_UPDATE <>                SELRK @                     (CMD, OP) = (2A, 00000000000F0F) 
INSTR @  894        LP4_MR_UPDATE <>                 CALL @        LP4_DRAMINIT (CMD, OP) = (05, 00000000000091) 
INSTR @  895        LP4_MR_UPDATE <>               CAUSER @                     (CMD, OP) = (29, 000000200F0000) 
INSTR @  896        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 000000000000CB) 
INSTR @  897        LP4_MR_UPDATE <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 000000000000BE) 
INSTR @  898        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 000000000000DD) 
INSTR @  899        LP4_MR_UPDATE <>                 CALL @        LP4_DRAMSRFE (CMD, OP) = (05, 00000000000365) 
INSTR @  900        LP4_MR_UPDATE <>               JUMPIF @    IF_DRAMINIT_DONE (CMD, OP) = (06, 00000090000004) 
INSTR @  901        LP4_MR_UPDATE <>                  NOP @       IF_DRAMSRFPDX (CMD, OP) = (00, 00000000000023) 
INSTR @  902        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  903        LP4_MR_UPDATE <>                SELRK @                     (CMD, OP) = (2A, 0000000000000F) 
INSTR @  904        LP4_MR_UPDATE <>                SETRR @                     (CMD, OP) = (0C, 00000000000F00) 
INSTR @  905        LP4_MR_UPDATE <>                SELRK @                     (CMD, OP) = (2A, 0000000000000F) 
INSTR @  906        LP4_MR_UPDATE <>                  NOP @                     (CMD, OP) = (00, 000000000000A8) 
INSTR @  907        LP4_MR_UPDATE <>                  NOP @      IF_NO_DRAMINIT (CMD, OP) = (00, 00000000000000) 
INSTR @  908        LP4_MR_UPDATE <>                  NOP @     IF_NO_DRAMSRFPD (CMD, OP) = (00, 00000000000000) 
INSTR @  909        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOLSPD (CMD, OP) = (05, 000000000000CB) 
INSTR @  910        LP4_MR_UPDATE <>                 CALL @       LP4_WRITE_MRS (CMD, OP) = (05, 000000000000BE) 
INSTR @  911        LP4_MR_UPDATE <>                 CALL @        LP4_GOTOHSPD (CMD, OP) = (05, 000000000000DD) 
INSTR @  912        LP4_MR_UPDATE <>                  NOP @    IF_DRAMINIT_DONE (CMD, OP) = (00, 00000000000000) 
INSTR @  913        LP4_MR_UPDATE <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  914  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000002900) 
INSTR @  915  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000849001) 
INSTR @  916  LP5_INIT_RDQS_TRACK <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
INSTR @  917  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000A49001) 
INSTR @  918  LP5_INIT_RDQS_TRACK <>             APBWRITE @                     (CMD, OP) = (FA, 00000000110001) 
INSTR @  919  LP5_INIT_RDQS_TRACK <>                  NOP @          WHILE_LOOP (CMD, OP) = (00, 000000000000FF) 
INSTR @  920  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000000202) 
INSTR @  921  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000FFFF03) 
INSTR @  922  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000FFFF04) 
INSTR @  923  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000849001) 
INSTR @  924  LP5_INIT_RDQS_TRACK <>              APBREAD @                     (CMD, OP) = (FB, 00000000000001) 
INSTR @  925  LP5_INIT_RDQS_TRACK <>                ANDRR @                     (CMD, OP) = (11, 00000000020D04) 
INSTR @  926  LP5_INIT_RDQS_TRACK <>                ANDRR @                     (CMD, OP) = (11, 00000000030403) 
INSTR @  927  LP5_INIT_RDQS_TRACK <>                SETRR @                     (CMD, OP) = (0C, 00000000A49001) 
INSTR @  928  LP5_INIT_RDQS_TRACK <>              APBREAD @                     (CMD, OP) = (FB, 00000000000001) 
INSTR @  929  LP5_INIT_RDQS_TRACK <>                ANDRR @                     (CMD, OP) = (11, 00000000020D04) 
INSTR @  930  LP5_INIT_RDQS_TRACK <>                ANDRR @                     (CMD, OP) = (11, 00000000030403) 
INSTR @  931  LP5_INIT_RDQS_TRACK <>              JUMPNIF @          WHILE_LOOP (CMD, OP) = (07, 00000097030002) 
INSTR @  932  LP5_INIT_RDQS_TRACK <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  933     LP4_PROC_RXFFRST <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  934     LP4_PROC_RXFFRST <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  935     LP4_PROC_RXFFRST <>                SETRR @                     (CMD, OP) = (0C, 00000000400003) 
INSTR @  936     LP4_PROC_RXFFRST <>               SETTRN @                     (CMD, OP) = (A0, 00000000000040) 
INSTR @  937     LP4_PROC_RXFFRST <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000080) 
INSTR @  938     LP4_PROC_RXFFRST <>                SETRR @                     (CMD, OP) = (0C, 00000000C00003) 
INSTR @  939     LP4_PROC_RXFFRST <>                SETRR @                     (CMD, OP) = (0C, 00000000400003) 
INSTR @  940     LP4_PROC_RXFFRST <>               ENCSRW @                     (CMD, OP) = (A1, 00000000000000) 
INSTR @  941     LP4_PROC_RXFFRST <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  942          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  943          LP4_RETRAIN <>                 CALL @ LP5_INIT_RDQS_TRACK (CMD, OP) = (05, 00000000000392) 
INSTR @  944          LP4_RETRAIN <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
INSTR @  945          LP4_RETRAIN <>                MOVDR @                     (CMD, OP) = (10, 00000000000100) 
INSTR @  946          LP4_RETRAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000083) 
INSTR @  947          LP4_RETRAIN <>                CAMRS @                     (CMD, OP) = (21, 00000040170072) 
INSTR @  948          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000072) 
INSTR @  949          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 000000200B0056) 
INSTR @  950          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 0000000E120000) 
INSTR @  951          LP4_RETRAIN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
INSTR @  952          LP4_RETRAIN <>                MOVRR @                     (CMD, OP) = (0D, 00000000000F0D) 
INSTR @  953          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 0000000E130000) 
INSTR @  954          LP4_RETRAIN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
INSTR @  955          LP4_RETRAIN <>                LSHFT @                     (CMD, OP) = (15, 00000001080F0E) 
INSTR @  956          LP4_RETRAIN <>                ADDRR @                     (CMD, OP) = (0E, 000000000D0E0D) 
INSTR @  957          LP4_RETRAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  958          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 000000000086A0) 
INSTR @  959          LP4_RETRAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000083) 
INSTR @  960          LP4_RETRAIN <>                CAMRS @                     (CMD, OP) = (21, 00000040170072) 
INSTR @  961          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000072) 
INSTR @  962          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 000000200B0056) 
INSTR @  963          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 0000000E120000) 
INSTR @  964          LP4_RETRAIN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
INSTR @  965          LP4_RETRAIN <>                MOVRR @                     (CMD, OP) = (0D, 00000000000F0C) 
INSTR @  966          LP4_RETRAIN <>               CAUSER @                     (CMD, OP) = (29, 0000000E130000) 
INSTR @  967          LP4_RETRAIN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
INSTR @  968          LP4_RETRAIN <>                LSHFT @                     (CMD, OP) = (15, 00000001080F0E) 
INSTR @  969          LP4_RETRAIN <>                ADDRR @                     (CMD, OP) = (0E, 000000000C0E0C) 
INSTR @  970          LP4_RETRAIN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @  971          LP4_RETRAIN <>                SUBRR @                     (CMD, OP) = (0F, 000000000D0C0C) 
INSTR @  972          LP4_RETRAIN <>                LSHFT @                     (CMD, OP) = (15, 00000001010C0C) 
INSTR @  973          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 000000008E6C01) 
INSTR @  974          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
INSTR @  975          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
INSTR @  976          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000AE6C01) 
INSTR @  977          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
INSTR @  978          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
INSTR @  979          LP4_RETRAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000004000) 
INSTR @  980          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
INSTR @  981          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
INSTR @  982          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
INSTR @  983          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000010100) 
INSTR @  984          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
INSTR @  985          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
INSTR @  986          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 0000000000000A) 
INSTR @  987          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
INSTR @  988          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
INSTR @  989          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
INSTR @  990          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @  991          LP4_RETRAIN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
INSTR @  992          LP4_RETRAIN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
INSTR @  993          LP4_RETRAIN <>                  NOP @                     (CMD, OP) = (00, 00000000000001) 
INSTR @  994          LP4_RETRAIN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @  995          LP4_RETRAIN <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @  996     LP4_RETRAIN_INIT <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @  997     LP4_RETRAIN_INIT <>                 CALL @ LP5_INIT_RDQS_TRACK (CMD, OP) = (05, 00000000000392) 
INSTR @  998     LP4_RETRAIN_INIT <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
INSTR @  999     LP4_RETRAIN_INIT <>                MOVDR @                     (CMD, OP) = (10, 00000000000100) 
INSTR @ 1000     LP4_RETRAIN_INIT <>             SETREFMD @                     (CMD, OP) = (42, 0000000000008B) 
INSTR @ 1001     LP4_RETRAIN_INIT <>                CAMRS @                     (CMD, OP) = (21, 00000040170072) 
INSTR @ 1002     LP4_RETRAIN_INIT <>                  NOP @                     (CMD, OP) = (00, 00000000000072) 
INSTR @ 1003     LP4_RETRAIN_INIT <>               CAUSER @                     (CMD, OP) = (29, 000000200B0056) 
INSTR @ 1004     LP4_RETRAIN_INIT <>               CAUSER @                     (CMD, OP) = (29, 0000000E120000) 
INSTR @ 1005     LP4_RETRAIN_INIT <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
INSTR @ 1006     LP4_RETRAIN_INIT <>                MOVRR @                     (CMD, OP) = (0D, 00000000000F0D) 
INSTR @ 1007     LP4_RETRAIN_INIT <>               CAUSER @                     (CMD, OP) = (29, 0000000E130000) 
INSTR @ 1008     LP4_RETRAIN_INIT <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
INSTR @ 1009     LP4_RETRAIN_INIT <>                LSHFT @                     (CMD, OP) = (15, 00000001080F0E) 
INSTR @ 1010     LP4_RETRAIN_INIT <>                ADDRR @                     (CMD, OP) = (0E, 000000000D0E0D) 
INSTR @ 1011     LP4_RETRAIN_INIT <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @ 1012     LP4_RETRAIN_INIT <>                MOVRD @                     (CMD, OP) = (18, 00000000000D95) 
INSTR @ 1013     LP4_RETRAIN_INIT <>                MOVRD @                     (CMD, OP) = (18, 00000000000D96) 
INSTR @ 1014     LP4_RETRAIN_INIT <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @ 1015      LP4_RETRAIN_RUN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @ 1016      LP4_RETRAIN_RUN <>                  NOP @                     (CMD, OP) = (00, 00000000000064) 
INSTR @ 1017      LP4_RETRAIN_RUN <>                SELRK @                     (CMD, OP) = (2A, 00000040000001) 
INSTR @ 1018      LP4_RETRAIN_RUN <>                MOVDR @                     (CMD, OP) = (10, 00000000000100) 
INSTR @ 1019      LP4_RETRAIN_RUN <>                MOVDR @                     (CMD, OP) = (10, 0000000000950D) 
INSTR @ 1020      LP4_RETRAIN_RUN <>                MOVDR @                     (CMD, OP) = (10, 0000000000960D) 
INSTR @ 1021      LP4_RETRAIN_RUN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000083) 
INSTR @ 1022      LP4_RETRAIN_RUN <>               CAUSER @                     (CMD, OP) = (29, 0000000E120000) 
INSTR @ 1023      LP4_RETRAIN_RUN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
INSTR @ 1024      LP4_RETRAIN_RUN <>                MOVRR @                     (CMD, OP) = (0D, 00000000000F0C) 
INSTR @ 1025      LP4_RETRAIN_RUN <>               CAUSER @                     (CMD, OP) = (29, 0000000E130000) 
INSTR @ 1026      LP4_RETRAIN_RUN <>                CAMRR @                     (CMD, OP) = (22, 00000000120000) 
INSTR @ 1027      LP4_RETRAIN_RUN <>                CAMRS @                     (CMD, OP) = (21, 00000040170072) 
INSTR @ 1028      LP4_RETRAIN_RUN <>                  NOP @                     (CMD, OP) = (00, 00000000000072) 
INSTR @ 1029      LP4_RETRAIN_RUN <>               CAUSER @                     (CMD, OP) = (29, 000000200B0000) 
INSTR @ 1030      LP4_RETRAIN_RUN <>                LSHFT @                     (CMD, OP) = (15, 00000001080F0E) 
INSTR @ 1031      LP4_RETRAIN_RUN <>                ADDRR @                     (CMD, OP) = (0E, 000000000C0E0C) 
INSTR @ 1032      LP4_RETRAIN_RUN <>                MOVRD @                     (CMD, OP) = (18, 00000000000C95) 
INSTR @ 1033      LP4_RETRAIN_RUN <>                MOVRD @                     (CMD, OP) = (18, 00000000000C96) 
INSTR @ 1034      LP4_RETRAIN_RUN <>             SETREFMD @                     (CMD, OP) = (42, 00000000000000) 
INSTR @ 1035      LP4_RETRAIN_RUN <>                SUBRR @                     (CMD, OP) = (0F, 000000000D0C0C) 
INSTR @ 1036      LP4_RETRAIN_RUN <>                MOVDR @                     (CMD, OP) = (10, 00000000000900) 
INSTR @ 1037      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 000000008E6C01) 
INSTR @ 1038      LP4_RETRAIN_RUN <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
INSTR @ 1039      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
INSTR @ 1040      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
INSTR @ 1041      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000AE6C01) 
INSTR @ 1042      LP4_RETRAIN_RUN <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
INSTR @ 1043      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
INSTR @ 1044      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
INSTR @ 1045      LP4_RETRAIN_RUN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @ 1046      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
INSTR @ 1047      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
INSTR @ 1048      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
INSTR @ 1049      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000010100) 
INSTR @ 1050      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
INSTR @ 1051      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
INSTR @ 1052      LP4_RETRAIN_RUN <>                  NOP @                     (CMD, OP) = (00, 0000000000000A) 
INSTR @ 1053      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000000100) 
INSTR @ 1054      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
INSTR @ 1055      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
INSTR @ 1056      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000000000) 
INSTR @ 1057      LP4_RETRAIN_RUN <>                SETRR @                     (CMD, OP) = (0C, 00000000283401) 
INSTR @ 1058      LP4_RETRAIN_RUN <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0001) 
INSTR @ 1059      LP4_RETRAIN_RUN <>                  NOP @                     (CMD, OP) = (00, 00000000000001) 
INSTR @ 1060      LP4_RETRAIN_RUN <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @ 1061      LP4_RETRAIN_RUN <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @ 1062             LP4_RETR <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @ 1063             LP4_RETR <>                MOVDR @                     (CMD, OP) = (10, 00000000000900) 
INSTR @ 1064             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 000000008E7401) 
INSTR @ 1065             LP4_RETR <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
INSTR @ 1066             LP4_RETR <>              APBREAD @                     (CMD, OP) = (FB, 00000000000001) 
INSTR @ 1067             LP4_RETR <>                MOVDR @                     (CMD, OP) = (10, 00000000005703) 
INSTR @ 1068             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000000204) 
INSTR @ 1069             LP4_RETR <>                MULRR @                     (CMD, OP) = (1C, 00000000040304) 
INSTR @ 1070             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000040003) 
INSTR @ 1071             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000040003) 
INSTR @ 1072             LP4_RETR <>                MULRR @                     (CMD, OP) = (1C, 00000000040304) 
INSTR @ 1073             LP4_RETR <>                MOVRR @                     (CMD, OP) = (0D, 00000000001005) 
INSTR @ 1074             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
INSTR @ 1075             LP4_RETR <>                DIVRR @                     (CMD, OP) = (1D, 000000400E0407) 
INSTR @ 1076             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 0000000000000E) 
INSTR @ 1077             LP4_RETR <>                DIVRR @                     (CMD, OP) = (1D, 000000400D0408) 
INSTR @ 1078             LP4_RETR <>                LSHFT @                     (CMD, OP) = (15, 00000000010707) 
INSTR @ 1079             LP4_RETR <>                LSHFT @                     (CMD, OP) = (15, 00000000010808) 
INSTR @ 1080             LP4_RETR <>                SUBRR @                     (CMD, OP) = (0F, 0000000008070C) 
INSTR @ 1081             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 000000008E6C01) 
INSTR @ 1082             LP4_RETR <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
INSTR @ 1083             LP4_RETR <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
INSTR @ 1084             LP4_RETR <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
INSTR @ 1085             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000AE7401) 
INSTR @ 1086             LP4_RETR <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
INSTR @ 1087             LP4_RETR <>              APBREAD @                     (CMD, OP) = (FB, 00000000000001) 
INSTR @ 1088             LP4_RETR <>                MOVDR @                     (CMD, OP) = (10, 00000000005703) 
INSTR @ 1089             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000000204) 
INSTR @ 1090             LP4_RETR <>                MULRR @                     (CMD, OP) = (1C, 00000000040304) 
INSTR @ 1091             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000040003) 
INSTR @ 1092             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000040003) 
INSTR @ 1093             LP4_RETR <>                MULRR @                     (CMD, OP) = (1C, 00000000040304) 
INSTR @ 1094             LP4_RETR <>                MOVRR @                     (CMD, OP) = (0D, 00000000001005) 
INSTR @ 1095             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 0000000000000F) 
INSTR @ 1096             LP4_RETR <>                DIVRR @                     (CMD, OP) = (1D, 000000400E0407) 
INSTR @ 1097             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 0000000000000E) 
INSTR @ 1098             LP4_RETR <>                DIVRR @                     (CMD, OP) = (1D, 000000400D0408) 
INSTR @ 1099             LP4_RETR <>                LSHFT @                     (CMD, OP) = (15, 00000000010707) 
INSTR @ 1100             LP4_RETR <>                LSHFT @                     (CMD, OP) = (15, 00000000010808) 
INSTR @ 1101             LP4_RETR <>                SUBRR @                     (CMD, OP) = (0F, 0000000008070C) 
INSTR @ 1102             LP4_RETR <>                SETRR @                     (CMD, OP) = (0C, 00000000AE6C01) 
INSTR @ 1103             LP4_RETR <>                ADDRR @                     (CMD, OP) = (0E, 00000000010001) 
INSTR @ 1104             LP4_RETR <>             APBWRITE @                     (CMD, OP) = (FA, 000000001F0C01) 
INSTR @ 1105             LP4_RETR <>             APBWRITE @                     (CMD, OP) = (FA, 000000000F0C01) 
INSTR @ 1106             LP4_RETR <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @ 1107             LP4_RETR <>               LNEVAL @                     (CMD, OP) = (8F, 00000000000401) 
INSTR @ 1108             LP4_RETR <>                  NOP @                     (CMD, OP) = (00, 00000000000001) 
INSTR @ 1109             LP4_RETR <>               SETTRN @                     (CMD, OP) = (A0, 00000000000000) 
INSTR @ 1110             LP4_RETR <>               RETURN @                     (CMD, OP) = (04, 00000000000000) 
INSTR @ 1111                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1112                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1113                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1114                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1115                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1116                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1117                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1118                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1119                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1120                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1121                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1122                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1123                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1124                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1125                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1126                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1127                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1128                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1129                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1130                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1131                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1132                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1133                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1134                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1135                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1136                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1137                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1138                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1139                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1140                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1141                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1142                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1143                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1144                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1145                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1146                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1147                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1148                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1149                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1150                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1151                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1152                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1153                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1154                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1155                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1156                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1157                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1158                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1159                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1160                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1161                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1162                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1163                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1164                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1165                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1166                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1167                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1168                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1169                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1170                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1171                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1172                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1173                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1174                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1175                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1176                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1177                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1178                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1179                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1180                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1181                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1182                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1183                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1184                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1185                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1186                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1187                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1188                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1189                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1190                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1191                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1192                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1193                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1194                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1195                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1196                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1197                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1198                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1199                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1200                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1201                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1202                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1203                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1204                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1205                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1206                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1207                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1208                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1209                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1210                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1211                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1212                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1213                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1214                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1215                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1216                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1217                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1218                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1219                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1220                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1221                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1222                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1223                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1224                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1225                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1226                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1227                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1228                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1229                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1230                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1231                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1232                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1233                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1234                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1235                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1236                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1237                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1238                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1239                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1240                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1241                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1242                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1243                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1244                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1245                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1246                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1247                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1248                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1249                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1250                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1251                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1252                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1253                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1254                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1255                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1256                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1257                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1258                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1259                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1260                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1261                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1262                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1263                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1264                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1265                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1266                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1267                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1268                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1269                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1270                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1271                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1272                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1273                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1274                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1275                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1276                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1277                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1278                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1279                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1280                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1281                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1282                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1283                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1284                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1285                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1286                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1287                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1288                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1289                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1290                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1291                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1292                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1293                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1294                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1295                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1296                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1297                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1298                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1299                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1300                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1301                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1302                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1303                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1304                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1305                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1306                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1307                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1308                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1309                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1310                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1311                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1312                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1313                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1314                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1315                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1316                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1317                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1318                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1319                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1320                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1321                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1322                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1323                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1324                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1325                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1326                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1327                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1328                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1329                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1330                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1331                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1332                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1333                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1334                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1335                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1336                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1337                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1338                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1339                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1340                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1341                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1342                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1343                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1344                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1345                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1346                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1347                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1348                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1349                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1350                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1351                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1352                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1353                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1354                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1355                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1356                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1357                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1358                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1359                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1360                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1361                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1362                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1363                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1364                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1365                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1366                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1367                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1368                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1369                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1370                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1371                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1372                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1373                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1374                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1375                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1376                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1377                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1378                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1379                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1380                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1381                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1382                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1383                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1384                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1385                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1386                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1387                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1388                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1389                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1390                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1391                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1392                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1393                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1394                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1395                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1396                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1397                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1398                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1399                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1400                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1401                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1402                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1403                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1404                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1405                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1406                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1407                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1408                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1409                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1410                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1411                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1412                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1413                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1414                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1415                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1416                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1417                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1418                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1419                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1420                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1421                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1422                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1423                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1424                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1425                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1426                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1427                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1428                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1429                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1430                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1431                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1432                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1433                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1434                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1435                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1436                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1437                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1438                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1439                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1440                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1441                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1442                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1443                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1444                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1445                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1446                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1447                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1448                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1449                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1450                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1451                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1452                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1453                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1454                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1455                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1456                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1457                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1458                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1459                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1460                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1461                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1462                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1463                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1464                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1465                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1466                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1467                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1468                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1469                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1470                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1471                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1472                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1473                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1474                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1475                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1476                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1477                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1478                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1479                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1480                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1481                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1482                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1483                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1484                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1485                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1486                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1487                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1488                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1489                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1490                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1491                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1492                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1493                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1494                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1495                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1496                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1497                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1498                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1499                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1500                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1501                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1502                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1503                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1504                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1505                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1506                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1507                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1508                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1509                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1510                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1511                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1512                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1513                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1514                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1515                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1516                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1517                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1518                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1519                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1520                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1521                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1522                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1523                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1524                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1525                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1526                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1527                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1528                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1529                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1530                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1531                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1532                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1533                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1534                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1535                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1536                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1537                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1538                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1539                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1540                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1541                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1542                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1543                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1544                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1545                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1546                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1547                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1548                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1549                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1550                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1551                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1552                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1553                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1554                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1555                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1556                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1557                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1558                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1559                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1560                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1561                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1562                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1563                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1564                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1565                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1566                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1567                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1568                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1569                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1570                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1571                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1572                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1573                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1574                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1575                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1576                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1577                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1578                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1579                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1580                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1581                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1582                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1583                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1584                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1585                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1586                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1587                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1588                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1589                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1590                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1591                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1592                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1593                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1594                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1595                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1596                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1597                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1598                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1599                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1600                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1601                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1602                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1603                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1604                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1605                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1606                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1607                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1608                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1609                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1610                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1611                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1612                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1613                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1614                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1615                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1616                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1617                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1618                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1619                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1620                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1621                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1622                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1623                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1624                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1625                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1626                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1627                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1628                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1629                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1630                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1631                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1632                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1633                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1634                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1635                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1636                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1637                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1638                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1639                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1640                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1641                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1642                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1643                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1644                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1645                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1646                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1647                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1648                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1649                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1650                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1651                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1652                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1653                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1654                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1655                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1656                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1657                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1658                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1659                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1660                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1661                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1662                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1663                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1664                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1665                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1666                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1667                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1668                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1669                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1670                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1671                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1672                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1673                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1674                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1675                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1676                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1677                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1678                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1679                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1680                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1681                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1682                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1683                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1684                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1685                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1686                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1687                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1688                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1689                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1690                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1691                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1692                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1693                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1694                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1695                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1696                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1697                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1698                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1699                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1700                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1701                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1702                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1703                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1704                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1705                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1706                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1707                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1708                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1709                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1710                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1711                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1712                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1713                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1714                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1715                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1716                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1717                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1718                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1719                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1720                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1721                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1722                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1723                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1724                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1725                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1726                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1727                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1728                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1729                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1730                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1731                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1732                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1733                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1734                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1735                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1736                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1737                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1738                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1739                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1740                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1741                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1742                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1743                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1744                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1745                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1746                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1747                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1748                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1749                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1750                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1751                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1752                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1753                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1754                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1755                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1756                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1757                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1758                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1759                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1760                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1761                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1762                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1763                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1764                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1765                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1766                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1767                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1768                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1769                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1770                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1771                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1772                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1773                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1774                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1775                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1776                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1777                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1778                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1779                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1780                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1781                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1782                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1783                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1784                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1785                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1786                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1787                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1788                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1789                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1790                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1791                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1792                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1793                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1794                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1795                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1796                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1797                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1798                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1799                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1800                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1801                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1802                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1803                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1804                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1805                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1806                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1807                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1808                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1809                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1810                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1811                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1812                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1813                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1814                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1815                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1816                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1817                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1818                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1819                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1820                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1821                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1822                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1823                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1824                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1825                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1826                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1827                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1828                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1829                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1830                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1831                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1832                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1833                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1834                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1835                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1836                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1837                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1838                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1839                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1840                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1841                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1842                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1843                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1844                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1845                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1846                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1847                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1848                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1849                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1850                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1851                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1852                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1853                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1854                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1855                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1856                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1857                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1858                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1859                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1860                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1861                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1862                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1863                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1864                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1865                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1866                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1867                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1868                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1869                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1870                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1871                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1872                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1873                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1874                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1875                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1876                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1877                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1878                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1879                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1880                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1881                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1882                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1883                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1884                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1885                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1886                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1887                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1888                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1889                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1890                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1891                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1892                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1893                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1894                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1895                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1896                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1897                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1898                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1899                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1900                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1901                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1902                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1903                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1904                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1905                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1906                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1907                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1908                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1909                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1910                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1911                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1912                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1913                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1914                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1915                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1916                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1917                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1918                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1919                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1920                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1921                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1922                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1923                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1924                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1925                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1926                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1927                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1928                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1929                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1930                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1931                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1932                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1933                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1934                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1935                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1936                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1937                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1938                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1939                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1940                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1941                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1942                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1943                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1944                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1945                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1946                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1947                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1948                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1949                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1950                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1951                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1952                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1953                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1954                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1955                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1956                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1957                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1958                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1959                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1960                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1961                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1962                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1963                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1964                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1965                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1966                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1967                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1968                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1969                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1970                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1971                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1972                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1973                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1974                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1975                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1976                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1977                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1978                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1979                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1980                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1981                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1982                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1983                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1984                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1985                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1986                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1987                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1988                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1989                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1990                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1991                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1992                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1993                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1994                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1995                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1996                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1997                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1998                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 1999                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2000                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2001                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2002                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2003                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2004                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2005                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2006                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2007                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2008                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2009                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2010                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2011                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2012                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2013                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2014                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2015                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2016                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2017                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2018                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2019                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2020                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2021                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2022                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2023                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2024                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2025                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2026                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2027                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2028                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2029                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2030                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2031                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2032                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2033                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2034                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2035                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2036                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2037                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2038                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2039                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2040                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2041                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2042                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2043                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2044                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2045                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2046                      <>                  NOP @                     (CMD, OP) = (00, 00000000000000) 
INSTR @ 2047                      <>               RETURN @                     (CMD, OP) = (03, 00000000000000) 
Current Size = 2048
SW computed PMEM CRC ... crc = [0xaf6a] 
// ---------------- FW CRC and CRC BIST set to once per phy reset on full SRAM memory  ---------------- // 
hwWrite(CH, DATA, ADDR) = (0, 0x0001AF6A, 0x0000A140) 
hwWrite(CH, DATA, ADDR) = (0, 0x1021FFFF, 0x0000A150) 
hwWrite(CH, DATA, ADDR) = (0, 0x07FF0000, 0x0000A160) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00000000) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000004) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000001, 0x00000008) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x0000000C) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000092, 0x00000010) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00000014) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000001, 0x00000018) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x0000001C) 
hwWrite(CH, DATA, ADDR) = (0, 0x28000090, 0x00000020) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00000024) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000001, 0x00000028) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x0000002C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01000000, 0x00000030) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00000034) 
hwWrite(CH, DATA, ADDR) = (0, 0x03000093, 0x00000038) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x0000003C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000040) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000044) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000048) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x0000004C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000030A, 0x00000050) 
hwWrite(CH, DATA, ADDR) = (0, 0x1B000000, 0x00000054) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D0B, 0x00000058) 
hwWrite(CH, DATA, ADDR) = (0, 0x1B000000, 0x0000005C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FF00, 0x00000060) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000064) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A000C, 0x00000068) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x0000006C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003F00, 0x00000070) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000074) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B000D, 0x00000078) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x0000007C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D0B, 0x00000080) 
hwWrite(CH, DATA, ADDR) = (0, 0x0D000000, 0x00000084) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D0D, 0x00000088) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x0000008C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C000, 0x00000090) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000094) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0000, 0x00000098) 
hwWrite(CH, DATA, ADDR) = (0, 0x12000000, 0x0000009C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x000000A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x000000A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000DF00, 0x000000A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000000AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B0000, 0x000000B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x000000B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000D, 0x000000B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x000000BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000000C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000000C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000000C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000000CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000001C, 0x000000D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x000000D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000000D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x000000DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0002FFFF, 0x000000E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x000000E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x1F0007FF, 0x000000E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x000000EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003D00, 0x000000F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000000F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x000000F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000000FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FFFF, 0x00000100) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000104) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000108) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000010C) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000F01, 0x00000110) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00000114) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000018D, 0x00000118) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000011C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00000120) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00000124) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00000128) 
hwWrite(CH, DATA, ADDR) = (0, 0xA2000000, 0x0000012C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000130) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00000134) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000DD, 0x00000138) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000013C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283003, 0x00000140) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000144) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000900, 0x00000148) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000014C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030003, 0x00000150) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00000154) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00000158) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000015C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00110003, 0x00000160) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00000164) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000F01, 0x00000168) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x0000016C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000E7, 0x00000170) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000174) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000010, 0x00000178) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x0000017C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00000180) 
hwWrite(CH, DATA, ADDR) = (0, 0xA2000000, 0x00000184) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000188) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x0000018C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0007000A, 0x00000190) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x00000194) 
hwWrite(CH, DATA, ADDR) = (0, 0x000001CF, 0x00000198) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000019C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000025F, 0x000001A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000001A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000030D, 0x000001A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000001AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000002AF, 0x000001B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000001B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000001B8) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x000001BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x000001C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000001C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000C03, 0x000001C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x000001CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030071, 0x000001D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x000001D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C000, 0x000001D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000001DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000D000D, 0x000001E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x12000000, 0x000001E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D0D, 0x000001E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x000001EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000D0054, 0x000001F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x000001F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000001F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000001FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000200) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000204) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000208) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000020C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00261000, 0x00000210) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000214) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000218) 
hwWrite(CH, DATA, ADDR) = (0, 0xFB000000, 0x0000021C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00038001, 0x00000220) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000224) 
hwWrite(CH, DATA, ADDR) = (0, 0x000D0101, 0x00000228) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x0000022C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070100, 0x00000230) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00000234) 
hwWrite(CH, DATA, ADDR) = (0, 0x49000007, 0x00000238) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x0000023C) 
hwWrite(CH, DATA, ADDR) = (0, 0x4B000000, 0x00000240) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x00000244) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000092, 0x00000248) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x0000024C) 
hwWrite(CH, DATA, ADDR) = (0, 0x4C000007, 0x00000250) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x00000254) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000092, 0x00000258) 
hwWrite(CH, DATA, ADDR) = (0, 0x23000000, 0x0000025C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000260) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000264) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001C00, 0x00000268) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000026C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000365, 0x00000270) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000274) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000F01, 0x00000278) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x0000027C) 
hwWrite(CH, DATA, ADDR) = (0, 0x54000001, 0x00000280) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x00000284) 
hwWrite(CH, DATA, ADDR) = (0, 0x57000002, 0x00000288) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x0000028C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000001CF, 0x00000290) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000294) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C000000, 0x00000298) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x0000029C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000025F, 0x000002A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000002AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A000001, 0x000002B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000002B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000002AF, 0x000002C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000002C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x5B000002, 0x000002C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000002CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000002E8) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x000002EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0007000A, 0x000002F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x000002F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000036C, 0x000002F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000002FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x63000002, 0x00000300) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x00000304) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00000308) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x0000030C) 
hwWrite(CH, DATA, ADDR) = (0, 0x64000003, 0x00000310) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000000, 0x00000314) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000318) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000031C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000320) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000324) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000001C, 0x00000328) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x0000032C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000330) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000334) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000014, 0x00000338) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000033C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000340) 
hwWrite(CH, DATA, ADDR) = (0, 0x03000000, 0x00000344) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000348) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x0000034C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000350) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000354) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x00000358) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000035C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F0F, 0x00000360) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00000364) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000091, 0x00000368) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000036C) 
hwWrite(CH, DATA, ADDR) = (0, 0x200F0000, 0x00000370) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00000374) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000A, 0x00000378) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000037C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000CB, 0x00000380) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000384) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000BE, 0x00000388) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000038C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000A, 0x00000390) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000394) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000365, 0x00000398) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000039C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x000003A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000003A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x7B0F0004, 0x000003A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000003AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003D00, 0x000003B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000003B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x79000000, 0x000003B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000003BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0002FFFF, 0x000003C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x000003C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000003E4, 0x000003D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000003D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x000003E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000003F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x4000000F, 0x000003F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x000003FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D0B, 0x00000400) 
hwWrite(CH, DATA, ADDR) = (0, 0x1B000000, 0x00000404) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003F00, 0x00000408) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000040C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B000B, 0x00000410) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x00000414) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000B0D, 0x00000418) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x0000041C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000CB, 0x00000420) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000424) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000BE, 0x00000428) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000042C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000A, 0x00000430) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000434) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000438) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x0000043C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000023, 0x00000440) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000444) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000448) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000044C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x00000450) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00000454) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F00, 0x00000458) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000045C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x00000460) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00000464) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000A8, 0x00000468) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000046C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000007D, 0x00000470) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000474) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000478) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000047C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000480) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000484) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000488) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000048C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F80E, 0x00000490) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000494) 
hwWrite(CH, DATA, ADDR) = (0, 0x960E0000, 0x00000498) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000000, 0x0000049C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x000004A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000000, 0x000004A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x980E0000, 0x000004A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000004AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000004B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000004B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x40030001, 0x000004B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000000, 0x000004BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000004C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000004C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x000004C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000004CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F00, 0x000004D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x000004D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x000004D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000004DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000004E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x23000000, 0x000004E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000014, 0x000004E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x2D000000, 0x000004EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010010, 0x000004F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x2D000000, 0x000004F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010000, 0x000004F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x2B000000, 0x000004FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000011, 0x00000500) 
hwWrite(CH, DATA, ADDR) = (0, 0x23000000, 0x00000504) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F0F, 0x00000508) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000050C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F00, 0x00000510) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00000514) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000012, 0x00000518) 
hwWrite(CH, DATA, ADDR) = (0, 0x24000000, 0x0000051C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F0F, 0x00000520) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00000524) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000528) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000052C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000530) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000534) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000538) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000053C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008700, 0x00000540) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000544) 
hwWrite(CH, DATA, ADDR) = (0, 0x80000000, 0x00000548) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x0000054C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000550) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000554) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000558) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000055C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008700, 0x00000560) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000564) 
hwWrite(CH, DATA, ADDR) = (0, 0x00846001, 0x00000568) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000056C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00110001, 0x00000570) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00000574) 
hwWrite(CH, DATA, ADDR) = (0, 0x00A46001, 0x00000578) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000057C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00110001, 0x00000580) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00000584) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000588) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x0000058C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000590) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000594) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008700, 0x00000598) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000059C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003D02, 0x000005A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000005A4) 
hwWrite(CH, DATA, ADDR) = (0, 0xB9020000, 0x000005A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000005AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00846001, 0x000005B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000005B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00110001, 0x000005B8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000005BC) 
hwWrite(CH, DATA, ADDR) = (0, 0xBC020001, 0x000005C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000005C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000005C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000005CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00A46001, 0x000005D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000005D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00110001, 0x000005D8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000005DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000005E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000005E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000005E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x000005EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x000005F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000005F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010071, 0x000005F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x000005FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0B020071, 0x00000600) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000604) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E030071, 0x00000608) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000060C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E200071, 0x00000610) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000614) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E280071, 0x00000618) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000061C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000C0071, 0x00000620) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000624) 
hwWrite(CH, DATA, ADDR) = (0, 0x000E0071, 0x00000628) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000062C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00170071, 0x00000630) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000634) 
hwWrite(CH, DATA, ADDR) = (0, 0x000B0071, 0x00000638) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000063C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00160071, 0x00000640) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000644) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000648) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000064C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000650) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000654) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000F0F, 0x00000658) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x0000065C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D00, 0x00000660) 
hwWrite(CH, DATA, ADDR) = (0, 0x1B000000, 0x00000664) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004801, 0x00000668) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000066C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00000670) 
hwWrite(CH, DATA, ADDR) = (0, 0x12000000, 0x00000674) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000D, 0x00000678) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x0000067C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x00000680) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000684) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F80E, 0x00000688) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000068C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000030D, 0x00000690) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000694) 
hwWrite(CH, DATA, ADDR) = (0, 0xD60E0000, 0x00000698) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000000, 0x0000069C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000054, 0x000006A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000000, 0x000006A4) 
hwWrite(CH, DATA, ADDR) = (0, 0xD80E0000, 0x000006A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000000, 0x000006AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000006B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000006B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x400D0054, 0x000006B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000000, 0x000006BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000006C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000006C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x480D0071, 0x000006C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x000006CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000054, 0x000006D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000006D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000006D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000006DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000006E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x000006E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000F0F, 0x000006E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x000006EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D00, 0x000006F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x1B000000, 0x000006F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C801, 0x000006F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000006FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00000700) 
hwWrite(CH, DATA, ADDR) = (0, 0x12000000, 0x00000704) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000D, 0x00000708) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x0000070C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x00000710) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000714) 
hwWrite(CH, DATA, ADDR) = (0, 0xC80D0071, 0x00000718) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000071C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000054, 0x00000720) 
hwWrite(CH, DATA, ADDR) = (0, 0x41000000, 0x00000724) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000728) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000072C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000730) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000734) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x00000738) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000073C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000200, 0x00000740) 
hwWrite(CH, DATA, ADDR) = (0, 0x1B000000, 0x00000744) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008001, 0x00000748) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000074C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00000750) 
hwWrite(CH, DATA, ADDR) = (0, 0x12000000, 0x00000754) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000002, 0x00000758) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x0000075C) 
hwWrite(CH, DATA, ADDR) = (0, 0x9B020041, 0x00000760) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000764) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000768) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000076C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0000, 0x00000770) 
hwWrite(CH, DATA, ADDR) = (0, 0x62000000, 0x00000774) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000010, 0x00000778) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x0000077C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00080000, 0x00000780) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x00000784) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA004FFF, 0x00000788) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000078C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000C, 0x00000790) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00000794) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA104FFC, 0x00000798) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000079C) 
hwWrite(CH, DATA, ADDR) = (0, 0x19030520, 0x000007A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x80000000, 0x000007A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x02000000, 0x000007A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x81000000, 0x000007AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x081C1B01, 0x000007B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x82000000, 0x000007B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x01010101, 0x000007B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x83000000, 0x000007BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x000007C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x84000000, 0x000007C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004A14, 0x000007C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000007CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004913, 0x000007D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000007D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004818, 0x000007D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000007DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004B19, 0x000007E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000007E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004C1A, 0x000007E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000007EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004D1B, 0x000007F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000007F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004E1C, 0x000007F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000007FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004F20, 0x00000800) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000804) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA004FFD, 0x00000808) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000080C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F83, 0x00000810) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00000814) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000039, 0x00000818) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x0000081C) 
hwWrite(CH, DATA, ADDR) = (0, 0x50008A83, 0x00000820) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00000824) 
hwWrite(CH, DATA, ADDR) = (0, 0x50008A82, 0x00000828) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x0000082C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0040FFFF, 0x00000830) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000834) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00000838) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000083C) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A004521, 0x00000840) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000844) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A004522, 0x00000848) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000084C) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A304520, 0x00000850) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000854) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A004521, 0x00000858) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000085C) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A004520, 0x00000860) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000864) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000868) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x0000086C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000103, 0x00000870) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x00000874) 
hwWrite(CH, DATA, ADDR) = (0, 0x08030002, 0x00000878) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000001, 0x0000087C) 
hwWrite(CH, DATA, ADDR) = (0, 0x58004520, 0x00000880) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000884) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000C, 0x00000888) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x0000088C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000035E, 0x00000890) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000894) 
hwWrite(CH, DATA, ADDR) = (0, 0x58004521, 0x00000898) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000089C) 
hwWrite(CH, DATA, ADDR) = (0, 0x58204520, 0x000008A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000008A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x58004521, 0x000008A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000008AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x000008B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000008B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000200, 0x000008B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x1B000000, 0x000008BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00007F01, 0x000008C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000008C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x000008C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x000008CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000002, 0x000008D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x000008D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x1B020071, 0x000008D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x000008DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0071, 0x000008E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x61000000, 0x000008E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000008E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000008EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000008F0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x000008F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000039, 0x000008F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x000008FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000900) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00000904) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FFFF, 0x00000908) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x0000090C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000910) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000914) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00000918) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x0000091C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00000920) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00000924) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00000928) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000092C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0000, 0x00000930) 
hwWrite(CH, DATA, ADDR) = (0, 0x62000000, 0x00000934) 
hwWrite(CH, DATA, ADDR) = (0, 0x400D0071, 0x00000938) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000093C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008700, 0x00000940) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000944) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000C, 0x00000948) 
hwWrite(CH, DATA, ADDR) = (0, 0x1A000000, 0x0000094C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008704, 0x00000950) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000954) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x00000958) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000095C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000C0071, 0x00000960) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000964) 
hwWrite(CH, DATA, ADDR) = (0, 0x00080072, 0x00000968) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x0000096C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000970) 
hwWrite(CH, DATA, ADDR) = (0, 0x60000000, 0x00000974) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010000, 0x00000978) 
hwWrite(CH, DATA, ADDR) = (0, 0x60000000, 0x0000097C) 
hwWrite(CH, DATA, ADDR) = (0, 0x3FC00000, 0x00000980) 
hwWrite(CH, DATA, ADDR) = (0, 0x63000000, 0x00000984) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010000, 0x00000988) 
hwWrite(CH, DATA, ADDR) = (0, 0x63000000, 0x0000098C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003D00, 0x00000990) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000994) 
hwWrite(CH, DATA, ADDR) = (0, 0x36000000, 0x00000998) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000001, 0x0000099C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000009A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x63000000, 0x000009A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x3FC10000, 0x000009A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x63000000, 0x000009AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000009B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000009B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x000009B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000009BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x410D0072, 0x000009C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x000009C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x000009C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000009CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000087, 0x000009D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x000009D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000B2, 0x000009D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000009DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000E00, 0x000009E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000009E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000087, 0x000009E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x000009EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000A7, 0x000009F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x000009F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000487, 0x000009F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x000009FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000A00) 
hwWrite(CH, DATA, ADDR) = (0, 0x23000000, 0x00000A04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000A08) 
hwWrite(CH, DATA, ADDR) = (0, 0x23000000, 0x00000A0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000024, 0x00000A10) 
hwWrite(CH, DATA, ADDR) = (0, 0x41000000, 0x00000A14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000023, 0x00000A18) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000A1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01060409, 0x00000A20) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00000A24) 
hwWrite(CH, DATA, ADDR) = (0, 0x09000000, 0x00000A28) 
hwWrite(CH, DATA, ADDR) = (0, 0x60000000, 0x00000A2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003D00, 0x00000A30) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000A34) 
hwWrite(CH, DATA, ADDR) = (0, 0x49000000, 0x00000A38) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000001, 0x00000A3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x09010000, 0x00000A40) 
hwWrite(CH, DATA, ADDR) = (0, 0x60000000, 0x00000A44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000A48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000A4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00080072, 0x00000A50) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x00000A54) 
hwWrite(CH, DATA, ADDR) = (0, 0x000A0000, 0x00000A58) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x00000A5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00080031, 0x00000A60) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x00000A64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00000A68) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000A6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000A70) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000A74) 
hwWrite(CH, DATA, ADDR) = (0, 0x0F030520, 0x00000A78) 
hwWrite(CH, DATA, ADDR) = (0, 0x80000000, 0x00000A7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x02000000, 0x00000A80) 
hwWrite(CH, DATA, ADDR) = (0, 0x81000000, 0x00000A84) 
hwWrite(CH, DATA, ADDR) = (0, 0x061A1901, 0x00000A88) 
hwWrite(CH, DATA, ADDR) = (0, 0x82000000, 0x00000A8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01010101, 0x00000A90) 
hwWrite(CH, DATA, ADDR) = (0, 0x83000000, 0x00000A94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003714, 0x00000A98) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000A9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003613, 0x00000AA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000AA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003518, 0x00000AA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000AAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003819, 0x00000AB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000AB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000391A, 0x00000AB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000ABC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003A1B, 0x00000AC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000AC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003B1C, 0x00000AC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000ACC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003C20, 0x00000AD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000AD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000480, 0x00000AD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x88000000, 0x00000ADC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000011, 0x00000AE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x89000000, 0x00000AE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00000AE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000AEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x5E004523, 0x00000AF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000AF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x03001F00, 0x00000AF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8B000000, 0x00000AFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00000B00) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00000B04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00000B08) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00000B0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C004523, 0x00000B10) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000B14) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C104520, 0x00000B18) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000B1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C004521, 0x00000B20) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000B24) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C004520, 0x00000B28) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000B2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003080, 0x00000B30) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00000B34) 
hwWrite(CH, DATA, ADDR) = (0, 0x30000282, 0x00000B38) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00000B3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000B40) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x00000B44) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000010C, 0x00000B48) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00000B4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008801, 0x00000B50) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000B54) 
hwWrite(CH, DATA, ADDR) = (0, 0x6D010001, 0x00000B58) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000001, 0x00000B5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000035E, 0x00000B60) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000B64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00000B68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000B6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001F00, 0x00000B70) 
hwWrite(CH, DATA, ADDR) = (0, 0x8B000000, 0x00000B74) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C004521, 0x00000B78) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000B7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C204520, 0x00000B80) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000B84) 
hwWrite(CH, DATA, ADDR) = (0, 0x58004521, 0x00000B88) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000B8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00000B90) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00000B94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00000B98) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000B9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F80E, 0x00000BA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000BA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000030D, 0x00000BA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000BAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x790E0000, 0x00000BB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000001, 0x00000BB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000054, 0x00000BB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000000, 0x00000BBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x7B0E0000, 0x00000BC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000001, 0x00000BC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000BC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000BCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x400D0054, 0x00000BD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000000, 0x00000BD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000BD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000BDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000BE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x23000000, 0x00000BE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000BE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000BEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000087, 0x00000BF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000BF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F00, 0x00000BF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000BFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000087, 0x00000C00) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000C04) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000A7, 0x00000C08) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000C0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000002D, 0x00000C10) 
hwWrite(CH, DATA, ADDR) = (0, 0x23000000, 0x00000C14) 
hwWrite(CH, DATA, ADDR) = (0, 0x400D0072, 0x00000C18) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000C1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0000, 0x00000C20) 
hwWrite(CH, DATA, ADDR) = (0, 0x61000000, 0x00000C24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000C28) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000C2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000087, 0x00000C30) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000C34) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000B2, 0x00000C38) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000C3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000C40) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000C44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000C48) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00000C4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000400, 0x00000C50) 
hwWrite(CH, DATA, ADDR) = (0, 0x88000000, 0x00000C54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000487, 0x00000C58) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000C5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000C60) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000C64) 
hwWrite(CH, DATA, ADDR) = (0, 0x0402FFFF, 0x00000C68) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000C6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0002FFFF, 0x00000C70) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000C74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003D00, 0x00000C78) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000C7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x92000000, 0x00000C80) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000001, 0x00000C84) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FFFF, 0x00000C88) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000C8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000C90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000C94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000C98) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000C9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000087, 0x00000CA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000CA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000101, 0x00000CA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000CAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000188, 0x00000CB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000CB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000123, 0x00000CB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000CBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x20000001, 0x00000CC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00000CC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000500, 0x00000CC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x00000CCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x9400000F, 0x00000CD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000001, 0x00000CD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003F02, 0x00000CD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000CDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000103, 0x00000CE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000CE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000908, 0x00000CE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00000CEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000903, 0x00000CF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000CF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x002A0400, 0x00000CF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000CFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030000, 0x00000D00) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00000D04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000D08) 
hwWrite(CH, DATA, ADDR) = (0, 0xFB000000, 0x00000D0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D87, 0x00000D10) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000D14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000D18) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000D1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000088, 0x00000D20) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000D24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00000D28) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00000D2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000123, 0x00000D30) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000D34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000D38) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000D3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0400FFFF, 0x00000D40) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000D44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000D48) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000D4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000087, 0x00000D50) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000D54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000101, 0x00000D58) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000D5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000188, 0x00000D60) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000D64) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000025F, 0x00000D68) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000D6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000500, 0x00000D70) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x00000D74) 
hwWrite(CH, DATA, ADDR) = (0, 0xAA00000F, 0x00000D78) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000001, 0x00000D7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000010, 0x00000D80) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00000D84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00000D88) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00000D8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000208, 0x00000D90) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00000D94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000D98) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00000D9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000DA0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00000DA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00000DA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00000DAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000DB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000DB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000088, 0x00000DB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000DBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000025F, 0x00000DC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000DC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000DC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000DCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0400FFFF, 0x00000DD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000DD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000DD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000DDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000087, 0x00000DE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000DE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000101, 0x00000DE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000DEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000188, 0x00000DF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000DF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000002AF, 0x00000DF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000DFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000500, 0x00000E00) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x00000E04) 
hwWrite(CH, DATA, ADDR) = (0, 0xBC00000F, 0x00000E08) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000001, 0x00000E0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FF02, 0x00000E10) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000E14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000303, 0x00000E18) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000E1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000808, 0x00000E20) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00000E24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000903, 0x00000E28) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000E2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x002A0400, 0x00000E30) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000E34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030000, 0x00000E38) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00000E3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000E40) 
hwWrite(CH, DATA, ADDR) = (0, 0xFB000000, 0x00000E44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D87, 0x00000E48) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000E4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000E50) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000E54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000088, 0x00000E58) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00000E5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00000E60) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00000E64) 
hwWrite(CH, DATA, ADDR) = (0, 0x000002AF, 0x00000E68) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00000E6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000E70) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00000E74) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000A, 0x00000E78) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x00000E7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00000E80) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000E84) 
hwWrite(CH, DATA, ADDR) = (0, 0xCA0D0080, 0x00000E88) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00000E8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000E90) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00000E94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000040, 0x00000E98) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00000E9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000EA0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00000EA4) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA004FFF, 0x00000EA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000EAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000080, 0x00000EB0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00000EB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00800003, 0x00000EB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000EBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00000EC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00000EC4) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA104FFC, 0x00000EC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000ECC) 
hwWrite(CH, DATA, ADDR) = (0, 0x03030E20, 0x00000ED0) 
hwWrite(CH, DATA, ADDR) = (0, 0x80000000, 0x00000ED4) 
hwWrite(CH, DATA, ADDR) = (0, 0x03000000, 0x00000ED8) 
hwWrite(CH, DATA, ADDR) = (0, 0x81000000, 0x00000EDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E0D0201, 0x00000EE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x82000000, 0x00000EE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0F070605, 0x00000EE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x83000000, 0x00000EEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000040, 0x00000EF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x84000000, 0x00000EF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000B414, 0x00000EF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000EFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000B313, 0x00000F00) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F04) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000B218, 0x00000F08) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000B512, 0x00000F10) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F14) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000B619, 0x00000F18) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000B71A, 0x00000F20) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F24) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000B81B, 0x00000F28) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000B91C, 0x00000F30) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F34) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000BA1D, 0x00000F38) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000BB1E, 0x00000F40) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F44) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000BC1F, 0x00000F48) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000BD20, 0x00000F50) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F54) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000BE21, 0x00000F58) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000BF22, 0x00000F60) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F64) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A004525, 0x00000F68) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000F6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A004524, 0x00000F70) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00000F74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x00000F78) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000F7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00002FFF, 0x00000F80) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00000F84) 
hwWrite(CH, DATA, ADDR) = (0, 0x01001291, 0x00000F88) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00000F8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01001290, 0x00000F90) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00000F94) 
hwWrite(CH, DATA, ADDR) = (0, 0x0300FFFF, 0x00000F98) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000F9C) 
hwWrite(CH, DATA, ADDR) = (0, 0xF90F0002, 0x00000FA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000001, 0x00000FA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00002FFF, 0x00000FA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00000FAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x01001291, 0x00000FB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00000FB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x01001290, 0x00000FB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00000FBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0200FFFF, 0x00000FC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00000FC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000FC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000FCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00000FD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x90000000, 0x00000FD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x00000FD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00000FDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x009F0198, 0x00000FE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000000, 0x00000FE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120320, 0x00000FE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x00000FEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x010F0002, 0x00000FF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x00000FF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0998, 0x00000FF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000012, 0x00000FFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000320, 0x00001000) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x00001004) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001008) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000100C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001010) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x00001014) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00001018) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x0000101C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000C, 0x00001020) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001024) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000035E, 0x00001028) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000102C) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8004FFD, 0x00001030) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00001034) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8204FFC, 0x00001038) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000103C) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8004FFD, 0x00001040) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00001044) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000020, 0x00001048) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x0000104C) 
hwWrite(CH, DATA, ADDR) = (0, 0x06030701, 0x00001050) 
hwWrite(CH, DATA, ADDR) = (0, 0x80000000, 0x00001054) 
hwWrite(CH, DATA, ADDR) = (0, 0x02000000, 0x00001058) 
hwWrite(CH, DATA, ADDR) = (0, 0x81000000, 0x0000105C) 
hwWrite(CH, DATA, ADDR) = (0, 0x07211101, 0x00001060) 
hwWrite(CH, DATA, ADDR) = (0, 0x82000000, 0x00001064) 
hwWrite(CH, DATA, ADDR) = (0, 0x23070605, 0x00001068) 
hwWrite(CH, DATA, ADDR) = (0, 0x83000000, 0x0000106C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000030, 0x00001070) 
hwWrite(CH, DATA, ADDR) = (0, 0x84000000, 0x00001074) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C214, 0x00001078) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000107C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C113, 0x00001080) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001084) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C018, 0x00001088) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000108C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C312, 0x00001090) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001094) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C419, 0x00001098) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000109C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C51A, 0x000010A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C61B, 0x000010A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C71C, 0x000010B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C81D, 0x000010B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000C91E, 0x000010C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000CA1F, 0x000010C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000CB20, 0x000010D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000CC21, 0x000010D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000CD22, 0x000010E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x000010E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000010EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x009F0180, 0x000010F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000000, 0x000010F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120320, 0x000010F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x000010FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x230F0002, 0x00001100) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x00001104) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0980, 0x00001108) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000012, 0x0000110C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000320, 0x00001110) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x00001114) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001118) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000111C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001120) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001124) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00001128) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x0000112C) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA408FFF, 0x00001130) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00001134) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x00001138) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000113C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0010347C, 0x00001140) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00001144) 
hwWrite(CH, DATA, ADDR) = (0, 0x81C07291, 0x00001148) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x0000114C) 
hwWrite(CH, DATA, ADDR) = (0, 0x81C07290, 0x00001150) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00001154) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F80E, 0x00001158) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000115C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0300FFFF, 0x00001160) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00001164) 
hwWrite(CH, DATA, ADDR) = (0, 0x330F0002, 0x00001168) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x0000116C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000347C, 0x00001170) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00001174) 
hwWrite(CH, DATA, ADDR) = (0, 0x81407291, 0x00001178) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x0000117C) 
hwWrite(CH, DATA, ADDR) = (0, 0x81407290, 0x00001180) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00001184) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F80E, 0x00001188) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000118C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0200FFFF, 0x00001190) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00001194) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001198) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000119C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000180, 0x000011A0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x000011A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00800003, 0x000011A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000011AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x000011B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000011B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0055000E, 0x000011B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000011BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00847401, 0x000011C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000011C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0E01, 0x000011C8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000011CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00A47401, 0x000011D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000011D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0E01, 0x000011D8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000011DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x000011E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000011E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x3F0F0002, 0x000011E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x000011EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x470F0004, 0x000011F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x000011F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000011F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000011FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00001200) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001204) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001208) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x0000120C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000105, 0x00001210) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x00001214) 
hwWrite(CH, DATA, ADDR) = (0, 0x00800003, 0x00001218) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000121C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00001220) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001224) 
hwWrite(CH, DATA, ADDR) = (0, 0x4105000F, 0x00001228) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000002, 0x0000122C) 
hwWrite(CH, DATA, ADDR) = (0, 0x4E0F0002, 0x00001230) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x00001234) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001238) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000123C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00001240) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001244) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001248) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x0000124C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000105, 0x00001250) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x00001254) 
hwWrite(CH, DATA, ADDR) = (0, 0x00800003, 0x00001258) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000125C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00001260) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001264) 
hwWrite(CH, DATA, ADDR) = (0, 0x4905000F, 0x00001268) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000002, 0x0000126C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001270) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001274) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8408FFF, 0x00001278) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000127C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00001280) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001284) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001288) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000128C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00001290) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001294) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000035E, 0x00001298) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000129C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00800003, 0x000012A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000012A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x000012A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000012AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000012B0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x000012B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x000012B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000012BC) 
hwWrite(CH, DATA, ADDR) = (0, 0xC80D0080, 0x000012C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x000012C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000012C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x000012CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000A, 0x000012D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x000012D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x000012D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x000012DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000012E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000000, 0x000012E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FFFF, 0x000012E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x000012EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000012F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x000012F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008700, 0x000012F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000012FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008704, 0x00001300) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001304) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001308) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x0000130C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00001310) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00001314) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00001318) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000131C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0071, 0x00001320) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00001324) 
hwWrite(CH, DATA, ADDR) = (0, 0x00140071, 0x00001328) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000132C) 
hwWrite(CH, DATA, ADDR) = (0, 0x5A200071, 0x00001330) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00001334) 
hwWrite(CH, DATA, ADDR) = (0, 0x3C280072, 0x00001338) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000133C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001340) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001344) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA004FFF, 0x00001348) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000134C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000010, 0x00001350) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001354) 
hwWrite(CH, DATA, ADDR) = (0, 0x00800003, 0x00001358) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000135C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00001360) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001364) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8104FFC, 0x00001368) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000136C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01030E20, 0x00001370) 
hwWrite(CH, DATA, ADDR) = (0, 0x80000000, 0x00001374) 
hwWrite(CH, DATA, ADDR) = (0, 0x03000000, 0x00001378) 
hwWrite(CH, DATA, ADDR) = (0, 0x81000000, 0x0000137C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000C1101, 0x00001380) 
hwWrite(CH, DATA, ADDR) = (0, 0x82000000, 0x00001384) 
hwWrite(CH, DATA, ADDR) = (0, 0x1E07060B, 0x00001388) 
hwWrite(CH, DATA, ADDR) = (0, 0x83000000, 0x0000138C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000040, 0x00001390) 
hwWrite(CH, DATA, ADDR) = (0, 0x84000000, 0x00001394) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D014, 0x00001398) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000139C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000CF13, 0x000013A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000CE18, 0x000013A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D112, 0x000013B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D219, 0x000013B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D31A, 0x000013C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D41B, 0x000013C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D51C, 0x000013D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D61D, 0x000013D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D71E, 0x000013E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D81F, 0x000013E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000D920, 0x000013F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000DA21, 0x000013F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000013FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000DB22, 0x00001400) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001404) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001408) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x0000140C) 
hwWrite(CH, DATA, ADDR) = (0, 0x001B001B, 0x00001410) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00001414) 
hwWrite(CH, DATA, ADDR) = (0, 0x001C001C, 0x00001418) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x0000141C) 
hwWrite(CH, DATA, ADDR) = (0, 0x001D001D, 0x00001420) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00001424) 
hwWrite(CH, DATA, ADDR) = (0, 0x00200020, 0x00001428) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x0000142C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x00001430) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001434) 
hwWrite(CH, DATA, ADDR) = (0, 0x009F0180, 0x00001438) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000000, 0x0000143C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120320, 0x00001440) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x00001444) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C0F0002, 0x00001448) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x0000144C) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0980, 0x00001450) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000012, 0x00001454) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000320, 0x00001458) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x0000145C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001460) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001464) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008801, 0x00001468) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000146C) 
hwWrite(CH, DATA, ADDR) = (0, 0x91010000, 0x00001470) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x00001474) 
hwWrite(CH, DATA, ADDR) = (0, 0x5400462D, 0x00001478) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000147C) 
hwWrite(CH, DATA, ADDR) = (0, 0x92010001, 0x00001480) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x00001484) 
hwWrite(CH, DATA, ADDR) = (0, 0x5000462D, 0x00001488) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000148C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00001490) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001494) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x00001498) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000149C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0010347C, 0x000014A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x000014A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x81C01311, 0x000014A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x000014AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x81C01310, 0x000014B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x000014B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0900FFFF, 0x000014B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x000014BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x9D0F0002, 0x000014C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x000014C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000347C, 0x000014C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x000014CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x81401311, 0x000014D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x000014D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x81401310, 0x000014D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x000014DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0800FFFF, 0x000014E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x000014E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000014E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000014EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000014F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x000014F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x81C01310, 0x000014F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x000014FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00001500) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001504) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001508) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000150C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000C, 0x00001510) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001514) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008801, 0x00001518) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000151C) 
hwWrite(CH, DATA, ADDR) = (0, 0xA6010001, 0x00001520) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x00001524) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000035E, 0x00001528) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000152C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00001530) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001534) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8004FFD, 0x00001538) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000153C) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8204FFC, 0x00001540) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00001544) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8004FFD, 0x00001548) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000154C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0100FFFF, 0x00001550) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00001554) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001558) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x0000155C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001560) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00001564) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00001568) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x0000156C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001570) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001574) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008700, 0x00001578) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000157C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008704, 0x00001580) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001584) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000B, 0x00001588) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000158C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000E0083, 0x00001590) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00001594) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00001598) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x0000159C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0007000A, 0x000015A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x000015A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001000, 0x000015A8) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x000015AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000015B0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x000015B4) 
hwWrite(CH, DATA, ADDR) = (0, 0xFC004FFF, 0x000015B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000015BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000020, 0x000015C0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x000015C4) 
hwWrite(CH, DATA, ADDR) = (0, 0xFC104FFC, 0x000015C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000015CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000015D0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x000015D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001000, 0x000015D8) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x000015DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x01035820, 0x000015E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x80000000, 0x000015E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x03000000, 0x000015E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x81000000, 0x000015EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x30094001, 0x000015F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x82000000, 0x000015F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0B070605, 0x000015F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x83000000, 0x000015FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000440, 0x00001600) 
hwWrite(CH, DATA, ADDR) = (0, 0x84000000, 0x00001604) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000EC14, 0x00001608) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000160C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000EB13, 0x00001610) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001614) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000EA18, 0x00001618) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000161C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000ED12, 0x00001620) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001624) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000EE19, 0x00001628) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000162C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000EF1A, 0x00001630) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001634) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F01B, 0x00001638) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000163C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F11C, 0x00001640) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001644) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F21D, 0x00001648) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000164C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F31E, 0x00001650) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001654) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F41F, 0x00001658) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000165C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F520, 0x00001660) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001664) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F621, 0x00001668) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000166C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000F722, 0x00001670) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001674) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00001678) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x0000167C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001680) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x00001684) 
hwWrite(CH, DATA, ADDR) = (0, 0x00002020, 0x00001688) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x0000168C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x00001690) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001694) 
hwWrite(CH, DATA, ADDR) = (0, 0x009F0180, 0x00001698) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000000, 0x0000169C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120720, 0x000016A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x000016A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x009F0183, 0x000016A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x90000000, 0x000016AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120120, 0x000016B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x91000000, 0x000016B4) 
hwWrite(CH, DATA, ADDR) = (0, 0xDC0F0002, 0x000016B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x000016BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0980, 0x000016C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000012, 0x000016C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000720, 0x000016C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x000016CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0983, 0x000016D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x90000012, 0x000016D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000120, 0x000016D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x91000000, 0x000016DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000016E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000016E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C0047A9, 0x000016E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000016EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x5C0047A8, 0x000016F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000016F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x000016F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000016FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0010040B, 0x00001700) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00001704) 
hwWrite(CH, DATA, ADDR) = (0, 0x00100408, 0x00001708) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x0000170C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01C013D1, 0x00001710) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00001714) 
hwWrite(CH, DATA, ADDR) = (0, 0x01C013D0, 0x00001718) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x0000171C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0100FFFF, 0x00001720) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00001724) 
hwWrite(CH, DATA, ADDR) = (0, 0xEB0F0002, 0x00001728) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x0000172C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000040B, 0x00001730) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00001734) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000408, 0x00001738) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x0000173C) 
hwWrite(CH, DATA, ADDR) = (0, 0x014013D1, 0x00001740) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00001744) 
hwWrite(CH, DATA, ADDR) = (0, 0x014013D0, 0x00001748) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x0000174C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FFFF, 0x00001750) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00001754) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001758) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000175C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000020, 0x00001760) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001764) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001768) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x0000176C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000029, 0x00001770) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001774) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001778) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000177C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000002C, 0x00001780) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001784) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008801, 0x00001788) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000178C) 
hwWrite(CH, DATA, ADDR) = (0, 0xF4010001, 0x00001790) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000002, 0x00001794) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000035E, 0x00001798) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x0000179C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x000017A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000017A4) 
hwWrite(CH, DATA, ADDR) = (0, 0xFC004FFD, 0x000017A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000017AC) 
hwWrite(CH, DATA, ADDR) = (0, 0xFC204FFC, 0x000017B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000017B4) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8004FFD, 0x000017B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000017BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0008FFFF, 0x000017C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x000017C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000017C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x000017CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000101, 0x000017D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000017D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010000, 0x000017D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x000017DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000018, 0x000017E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x000017E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x000017E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x000017EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000201, 0x000017F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000017F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010000, 0x000017F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x000017FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000019, 0x00001800) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00001804) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001808) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x0000180C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000009, 0x00001810) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001814) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000FFFF, 0x00001818) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x0000181C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000608, 0x00001820) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x00001824) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000709, 0x00001828) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x0000182C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000816, 0x00001830) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00001834) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000917, 0x00001838) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x0000183C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001840) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x00001844) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00001848) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x0000184C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00001850) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x00001854) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000006, 0x00001858) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x0000185C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001860) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001864) 
hwWrite(CH, DATA, ADDR) = (0, 0x0007000A, 0x00001868) 
hwWrite(CH, DATA, ADDR) = (0, 0x2F000000, 0x0000186C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001870) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001874) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000800, 0x00001878) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x0000187C) 
hwWrite(CH, DATA, ADDR) = (0, 0x03080800, 0x00001880) 
hwWrite(CH, DATA, ADDR) = (0, 0xD0000000, 0x00001884) 
hwWrite(CH, DATA, ADDR) = (0, 0x07200120, 0x00001888) 
hwWrite(CH, DATA, ADDR) = (0, 0xD1000000, 0x0000188C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C050500, 0x00001890) 
hwWrite(CH, DATA, ADDR) = (0, 0xD0000000, 0x00001894) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA004FFF, 0x00001898) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x0000189C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000020, 0x000018A0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x000018A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00800003, 0x000018A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000018AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x000018B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000018B4) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA104FFC, 0x000018B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000018BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000800, 0x000018C0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x000018C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x03030701, 0x000018C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x80000000, 0x000018CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x02000000, 0x000018D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x81000000, 0x000018D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x38094801, 0x000018D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x82000000, 0x000018DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x60070605, 0x000018E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x83000000, 0x000018E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000440, 0x000018E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x84000000, 0x000018EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000DE14, 0x000018F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000018F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000DD13, 0x000018F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000018FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000DC18, 0x00001900) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001904) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000DF12, 0x00001908) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000190C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E019, 0x00001910) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001914) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E11A, 0x00001918) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000191C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E21B, 0x00001920) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001924) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E31C, 0x00001928) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000192C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E41D, 0x00001930) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001934) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E51E, 0x00001938) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000193C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E61F, 0x00001940) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001944) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E720, 0x00001948) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000194C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E821, 0x00001950) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001954) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000E922, 0x00001958) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000195C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001960) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x00001964) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x00001968) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000196C) 
hwWrite(CH, DATA, ADDR) = (0, 0x009F0180, 0x00001970) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000000, 0x00001974) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120720, 0x00001978) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x0000197C) 
hwWrite(CH, DATA, ADDR) = (0, 0x009F0183, 0x00001980) 
hwWrite(CH, DATA, ADDR) = (0, 0x90000000, 0x00001984) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120120, 0x00001988) 
hwWrite(CH, DATA, ADDR) = (0, 0x91000000, 0x0000198C) 
hwWrite(CH, DATA, ADDR) = (0, 0x370F0002, 0x00001990) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x00001994) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0980, 0x00001998) 
hwWrite(CH, DATA, ADDR) = (0, 0x86000012, 0x0000199C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000720, 0x000019A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x87000000, 0x000019A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0983, 0x000019A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x90000012, 0x000019AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000120, 0x000019B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x91000000, 0x000019B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000019B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000019BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000019C0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x000019C4) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA408FFF, 0x000019C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x000019CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x000019D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x000019D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00103408, 0x000019D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x000019DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x01C073D1, 0x000019E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x000019E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x01C073D0, 0x000019E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x000019EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0100FEFF, 0x000019F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x000019F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x440F0002, 0x000019F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x000019FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00003408, 0x00001A00) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000000, 0x00001A04) 
hwWrite(CH, DATA, ADDR) = (0, 0x014073D1, 0x00001A08) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00001A0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x014073D0, 0x00001A10) 
hwWrite(CH, DATA, ADDR) = (0, 0x8D000000, 0x00001A14) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000EFFF, 0x00001A18) 
hwWrite(CH, DATA, ADDR) = (0, 0x8E000000, 0x00001A1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001A20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001A24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000220, 0x00001A28) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001A2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001B0F, 0x00001A30) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001A34) 
hwWrite(CH, DATA, ADDR) = (0, 0x490F0002, 0x00001A38) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x00001A3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x4F0F0004, 0x00001A40) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x00001A44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001A48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001A4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00001A50) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001A54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001A58) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x00001A5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000105, 0x00001A60) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x00001A64) 
hwWrite(CH, DATA, ADDR) = (0, 0x4B050007, 0x00001A68) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000003, 0x00001A6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x540F0002, 0x00001A70) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x00001A74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001A78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001A7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000005, 0x00001A80) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001A84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001A88) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000000, 0x00001A8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000105, 0x00001A90) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A000000, 0x00001A94) 
hwWrite(CH, DATA, ADDR) = (0, 0x51050007, 0x00001A98) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000003, 0x00001A9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001AA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001AA4) 
hwWrite(CH, DATA, ADDR) = (0, 0xF8408FFF, 0x00001AA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x8A000000, 0x00001AAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00001AB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001AB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001AB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001ABC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000004, 0x00001AC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001AC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000035E, 0x00001AC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001ACC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001AD0) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001AD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001AD8) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00001ADC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00001AE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x00001AE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001AE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001AEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001AF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001AF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000040E, 0x00001AF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x19000000, 0x00001AFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x630E0000, 0x00001B00) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x00001B04) 
hwWrite(CH, DATA, ADDR) = (0, 0x7400000E, 0x00001B08) 
hwWrite(CH, DATA, ADDR) = (0, 0x02000000, 0x00001B0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B10) 
hwWrite(CH, DATA, ADDR) = (0, 0x03000000, 0x00001B14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B20) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001B24) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000F01, 0x00001B28) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00001B2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00001B30) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001B34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000090, 0x00001B38) 
hwWrite(CH, DATA, ADDR) = (0, 0x23000000, 0x00001B3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x180000A0, 0x00001B40) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001B44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B48) 
hwWrite(CH, DATA, ADDR) = (0, 0x24000000, 0x00001B4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B50) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001B54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B58) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001B5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000F01, 0x00001B60) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00001B64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000003, 0x00001B68) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001B6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x140000A1, 0x00001B70) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001B74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B80) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001B84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B88) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001B8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00261000, 0x00001B90) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001B94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001B98) 
hwWrite(CH, DATA, ADDR) = (0, 0xFB000000, 0x00001B9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00038001, 0x00001BA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001BA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000D0101, 0x00001BA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x00001BAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00070100, 0x00001BB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00001BB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x85000005, 0x00001BB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x00001BBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x7B000004, 0x00001BC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x00001BC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x8B000004, 0x00001BC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000003, 0x00001BCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x8C000005, 0x00001BD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000003, 0x00001BD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001BD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001BDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x00001BE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001BE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F0F, 0x00001BE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00001BEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000091, 0x00001BF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001BF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x200F0000, 0x00001BF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001BFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000CB, 0x00001C00) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001C04) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000BE, 0x00001C08) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001C0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000DD, 0x00001C10) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001C14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000365, 0x00001C18) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001C1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x90000004, 0x00001C20) 
hwWrite(CH, DATA, ADDR) = (0, 0x06000003, 0x00001C24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000023, 0x00001C28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C30) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001C34) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x00001C38) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00001C3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F00, 0x00001C40) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001C44) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x00001C48) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00001C4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000A8, 0x00001C50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C64) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000CB, 0x00001C68) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001C6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000BE, 0x00001C70) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001C74) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000DD, 0x00001C78) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001C7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001C88) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001C8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00002900, 0x00001C90) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001C94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00849001, 0x00001C98) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001C9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00110001, 0x00001CA0) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001CA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00A49001, 0x00001CA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001CAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00110001, 0x00001CB0) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001CB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x000000FF, 0x00001CB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001CBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000202, 0x00001CC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001CC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00FFFF03, 0x00001CC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001CCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00FFFF04, 0x00001CD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001CD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00849001, 0x00001CD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001CDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00001CE0) 
hwWrite(CH, DATA, ADDR) = (0, 0xFB000000, 0x00001CE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00020D04, 0x00001CE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x00001CEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030403, 0x00001CF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x00001CF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00A49001, 0x00001CF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001CFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00001D00) 
hwWrite(CH, DATA, ADDR) = (0, 0xFB000000, 0x00001D04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00020D04, 0x00001D08) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x00001D0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00030403, 0x00001D10) 
hwWrite(CH, DATA, ADDR) = (0, 0x11000000, 0x00001D14) 
hwWrite(CH, DATA, ADDR) = (0, 0x97030002, 0x00001D18) 
hwWrite(CH, DATA, ADDR) = (0, 0x07000003, 0x00001D1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001D20) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001D24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001D28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001D2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001D30) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001D34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00400003, 0x00001D38) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001D3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000040, 0x00001D40) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00001D44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000080, 0x00001D48) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001D4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00C00003, 0x00001D50) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001D54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00400003, 0x00001D58) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001D5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001D60) 
hwWrite(CH, DATA, ADDR) = (0, 0xA1000000, 0x00001D64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001D68) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001D6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001D70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001D74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000392, 0x00001D78) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001D7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000001, 0x00001D80) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00001D84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00001D88) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001D8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000083, 0x00001D90) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001D94) 
hwWrite(CH, DATA, ADDR) = (0, 0x40170072, 0x00001D98) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00001D9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000072, 0x00001DA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001DA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x200B0056, 0x00001DA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001DAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E120000, 0x00001DB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001DB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120000, 0x00001DB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x22000000, 0x00001DBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F0D, 0x00001DC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0D000000, 0x00001DC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E130000, 0x00001DC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001DCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120000, 0x00001DD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x22000000, 0x00001DD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x01080F0E, 0x00001DD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00001DDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000D0E0D, 0x00001DE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00001DE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001DE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001DEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000086A0, 0x00001DF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001DF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000083, 0x00001DF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001DFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x40170072, 0x00001E00) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00001E04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000072, 0x00001E08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001E0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x200B0056, 0x00001E10) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001E14) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E120000, 0x00001E18) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001E1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120000, 0x00001E20) 
hwWrite(CH, DATA, ADDR) = (0, 0x22000000, 0x00001E24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F0C, 0x00001E28) 
hwWrite(CH, DATA, ADDR) = (0, 0x0D000000, 0x00001E2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E130000, 0x00001E30) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001E34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120000, 0x00001E38) 
hwWrite(CH, DATA, ADDR) = (0, 0x22000000, 0x00001E3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01080F0E, 0x00001E40) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00001E44) 
hwWrite(CH, DATA, ADDR) = (0, 0x000C0E0C, 0x00001E48) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00001E4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001E50) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001E54) 
hwWrite(CH, DATA, ADDR) = (0, 0x000D0C0C, 0x00001E58) 
hwWrite(CH, DATA, ADDR) = (0, 0x0F000000, 0x00001E5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01010C0C, 0x00001E60) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00001E64) 
hwWrite(CH, DATA, ADDR) = (0, 0x008E6C01, 0x00001E68) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001E6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0C01, 0x00001E70) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001E74) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0C01, 0x00001E78) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001E7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00AE6C01, 0x00001E80) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001E84) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0C01, 0x00001E88) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001E8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0C01, 0x00001E90) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001E94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00004000, 0x00001E98) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00001E9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00001EA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001EA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283401, 0x00001EA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001EAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0001, 0x00001EB0) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001EB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010100, 0x00001EB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001EBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283401, 0x00001EC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001EC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0001, 0x00001EC8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001ECC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000A, 0x00001ED0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001ED4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00001ED8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001EDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283401, 0x00001EE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001EE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0001, 0x00001EE8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001EEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001EF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001EF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283401, 0x00001EF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00001EFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0001, 0x00001F00) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00001F04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00001F08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001F0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001F10) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00001F14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001F18) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001F1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001F20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001F24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000392, 0x00001F28) 
hwWrite(CH, DATA, ADDR) = (0, 0x05000000, 0x00001F2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000001, 0x00001F30) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00001F34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00001F38) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001F3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000008B, 0x00001F40) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001F44) 
hwWrite(CH, DATA, ADDR) = (0, 0x40170072, 0x00001F48) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x00001F4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000072, 0x00001F50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001F54) 
hwWrite(CH, DATA, ADDR) = (0, 0x200B0056, 0x00001F58) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001F5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E120000, 0x00001F60) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001F64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120000, 0x00001F68) 
hwWrite(CH, DATA, ADDR) = (0, 0x22000000, 0x00001F6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F0D, 0x00001F70) 
hwWrite(CH, DATA, ADDR) = (0, 0x0D000000, 0x00001F74) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E130000, 0x00001F78) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001F7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120000, 0x00001F80) 
hwWrite(CH, DATA, ADDR) = (0, 0x22000000, 0x00001F84) 
hwWrite(CH, DATA, ADDR) = (0, 0x01080F0E, 0x00001F88) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00001F8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000D0E0D, 0x00001F90) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00001F94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001F98) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001F9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D95, 0x00001FA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00001FA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000D96, 0x00001FA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00001FAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001FB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x00001FB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001FB8) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00001FBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000064, 0x00001FC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00001FC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x40000001, 0x00001FC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x2A000000, 0x00001FCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x00001FD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001FD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000950D, 0x00001FD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001FDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000960D, 0x00001FE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00001FE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000083, 0x00001FE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00001FEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E120000, 0x00001FF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x00001FF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120000, 0x00001FF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x22000000, 0x00001FFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000F0C, 0x00002000) 
hwWrite(CH, DATA, ADDR) = (0, 0x0D000000, 0x00002004) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E130000, 0x00002008) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x0000200C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00120000, 0x00002010) 
hwWrite(CH, DATA, ADDR) = (0, 0x22000000, 0x00002014) 
hwWrite(CH, DATA, ADDR) = (0, 0x40170072, 0x00002018) 
hwWrite(CH, DATA, ADDR) = (0, 0x21000000, 0x0000201C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000072, 0x00002020) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002024) 
hwWrite(CH, DATA, ADDR) = (0, 0x200B0000, 0x00002028) 
hwWrite(CH, DATA, ADDR) = (0, 0x29000000, 0x0000202C) 
hwWrite(CH, DATA, ADDR) = (0, 0x01080F0E, 0x00002030) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00002034) 
hwWrite(CH, DATA, ADDR) = (0, 0x000C0E0C, 0x00002038) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x0000203C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000C95, 0x00002040) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x00002044) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000C96, 0x00002048) 
hwWrite(CH, DATA, ADDR) = (0, 0x18000000, 0x0000204C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002050) 
hwWrite(CH, DATA, ADDR) = (0, 0x42000000, 0x00002054) 
hwWrite(CH, DATA, ADDR) = (0, 0x000D0C0C, 0x00002058) 
hwWrite(CH, DATA, ADDR) = (0, 0x0F000000, 0x0000205C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000900, 0x00002060) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00002064) 
hwWrite(CH, DATA, ADDR) = (0, 0x008E6C01, 0x00002068) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000206C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00002070) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00002074) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0C01, 0x00002078) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x0000207C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0C01, 0x00002080) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00002084) 
hwWrite(CH, DATA, ADDR) = (0, 0x00AE6C01, 0x00002088) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000208C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00002090) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x00002094) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0C01, 0x00002098) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x0000209C) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0C01, 0x000020A0) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000020A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000020A8) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x000020AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x000020B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000020B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283401, 0x000020B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000020BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0001, 0x000020C0) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000020C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010100, 0x000020C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000020CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283401, 0x000020D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000020D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0001, 0x000020D8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000020DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000A, 0x000020E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000020E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000100, 0x000020E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000020EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283401, 0x000020F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000020F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0001, 0x000020F8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000020FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002100) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00002104) 
hwWrite(CH, DATA, ADDR) = (0, 0x00283401, 0x00002108) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000210C) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0001, 0x00002110) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00002114) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00002118) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000211C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002120) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00002124) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002128) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x0000212C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002130) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00002134) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000900, 0x00002138) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000213C) 
hwWrite(CH, DATA, ADDR) = (0, 0x008E7401, 0x00002140) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00002144) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00002148) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x0000214C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x00002150) 
hwWrite(CH, DATA, ADDR) = (0, 0xFB000000, 0x00002154) 
hwWrite(CH, DATA, ADDR) = (0, 0x00005703, 0x00002158) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x0000215C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000204, 0x00002160) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00002164) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040304, 0x00002168) 
hwWrite(CH, DATA, ADDR) = (0, 0x1C000000, 0x0000216C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040003, 0x00002170) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00002174) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040003, 0x00002178) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000217C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040304, 0x00002180) 
hwWrite(CH, DATA, ADDR) = (0, 0x1C000000, 0x00002184) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001005, 0x00002188) 
hwWrite(CH, DATA, ADDR) = (0, 0x0D000000, 0x0000218C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x00002190) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00002194) 
hwWrite(CH, DATA, ADDR) = (0, 0x400E0407, 0x00002198) 
hwWrite(CH, DATA, ADDR) = (0, 0x1D000000, 0x0000219C) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000E, 0x000021A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000021A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x400D0408, 0x000021A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x1D000000, 0x000021AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010707, 0x000021B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x000021B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010808, 0x000021B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x000021BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x0008070C, 0x000021C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0F000000, 0x000021C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x008E6C01, 0x000021C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000021CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x000021D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x000021D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0C01, 0x000021D8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000021DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0C01, 0x000021E0) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x000021E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00AE7401, 0x000021E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x000021EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x000021F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x000021F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x000021F8) 
hwWrite(CH, DATA, ADDR) = (0, 0xFB000000, 0x000021FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00005703, 0x00002200) 
hwWrite(CH, DATA, ADDR) = (0, 0x10000000, 0x00002204) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000204, 0x00002208) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000220C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040304, 0x00002210) 
hwWrite(CH, DATA, ADDR) = (0, 0x1C000000, 0x00002214) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040003, 0x00002218) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000221C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040003, 0x00002220) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00002224) 
hwWrite(CH, DATA, ADDR) = (0, 0x00040304, 0x00002228) 
hwWrite(CH, DATA, ADDR) = (0, 0x1C000000, 0x0000222C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00001005, 0x00002230) 
hwWrite(CH, DATA, ADDR) = (0, 0x0D000000, 0x00002234) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000F, 0x00002238) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000223C) 
hwWrite(CH, DATA, ADDR) = (0, 0x400E0407, 0x00002240) 
hwWrite(CH, DATA, ADDR) = (0, 0x1D000000, 0x00002244) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000000E, 0x00002248) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x0000224C) 
hwWrite(CH, DATA, ADDR) = (0, 0x400D0408, 0x00002250) 
hwWrite(CH, DATA, ADDR) = (0, 0x1D000000, 0x00002254) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010707, 0x00002258) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x0000225C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010808, 0x00002260) 
hwWrite(CH, DATA, ADDR) = (0, 0x15000000, 0x00002264) 
hwWrite(CH, DATA, ADDR) = (0, 0x0008070C, 0x00002268) 
hwWrite(CH, DATA, ADDR) = (0, 0x0F000000, 0x0000226C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00AE6C01, 0x00002270) 
hwWrite(CH, DATA, ADDR) = (0, 0x0C000000, 0x00002274) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00002278) 
hwWrite(CH, DATA, ADDR) = (0, 0x0E000000, 0x0000227C) 
hwWrite(CH, DATA, ADDR) = (0, 0x001F0C01, 0x00002280) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x00002284) 
hwWrite(CH, DATA, ADDR) = (0, 0x000F0C01, 0x00002288) 
hwWrite(CH, DATA, ADDR) = (0, 0xFA000000, 0x0000228C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002290) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x00002294) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000401, 0x00002298) 
hwWrite(CH, DATA, ADDR) = (0, 0x8F000000, 0x0000229C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000001, 0x000022A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022A8) 
hwWrite(CH, DATA, ADDR) = (0, 0xA0000000, 0x000022AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x04000000, 0x000022B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000022FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002300) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002304) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002308) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000230C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002310) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002314) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002318) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000231C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002320) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002324) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002328) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000232C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002330) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002334) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002338) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000233C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002340) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002344) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002348) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000234C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002350) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002354) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002358) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000235C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002360) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002364) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002368) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000236C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002370) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002374) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002378) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000237C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002380) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002384) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002388) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000238C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002390) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002394) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002398) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000239C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000023FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002400) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002404) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002408) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000240C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002410) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002414) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002418) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000241C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002420) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002424) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002428) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000242C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002430) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002434) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002438) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000243C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002440) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002444) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002448) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000244C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002450) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002454) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002458) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000245C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002460) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002464) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002468) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000246C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002470) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002474) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002478) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000247C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002480) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002484) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002488) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000248C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002490) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002494) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002498) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000249C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000024FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002500) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002504) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002508) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000250C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002510) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002514) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002518) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000251C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002520) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002524) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002528) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000252C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002530) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002534) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002538) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000253C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002540) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002544) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002548) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000254C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002550) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002554) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002558) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000255C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002560) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002564) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002568) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000256C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002570) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002574) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002578) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000257C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002580) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002584) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002588) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000258C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002590) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002594) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002598) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000259C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000025FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002600) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002604) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002608) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000260C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002610) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002614) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002618) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000261C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002620) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002624) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002628) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000262C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002630) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002634) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002638) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000263C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002640) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002644) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002648) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000264C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002650) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002654) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002658) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000265C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002660) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002664) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002668) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000266C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002670) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002674) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002678) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000267C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002680) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002684) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002688) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000268C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002690) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002694) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002698) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000269C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000026FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002700) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002704) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002708) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000270C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002710) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002714) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002718) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000271C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002720) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002724) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002728) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000272C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002730) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002734) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002738) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000273C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002740) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002744) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002748) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000274C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002750) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002754) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002758) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000275C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002760) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002764) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002768) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000276C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002770) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002774) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002778) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000277C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002780) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002784) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002788) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000278C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002790) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002794) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002798) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000279C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000027FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002800) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002804) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002808) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000280C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002810) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002814) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002818) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000281C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002820) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002824) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002828) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000282C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002830) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002834) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002838) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000283C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002840) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002844) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002848) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000284C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002850) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002854) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002858) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000285C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002860) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002864) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002868) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000286C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002870) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002874) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002878) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000287C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002880) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002884) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002888) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000288C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002890) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002894) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002898) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000289C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000028FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002900) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002904) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002908) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000290C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002910) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002914) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002918) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000291C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002920) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002924) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002928) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000292C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002930) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002934) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002938) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000293C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002940) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002944) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002948) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000294C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002950) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002954) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002958) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000295C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002960) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002964) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002968) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000296C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002970) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002974) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002978) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000297C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002980) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002984) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002988) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000298C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002990) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002994) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002998) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000299C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000029FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002A9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002ABC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002ACC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002ADC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002AFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002B9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002BFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002C9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002CFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002D9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002DFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002E9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002ECC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002ED0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002ED4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002ED8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002EFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002F9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00002FFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003000) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003004) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003008) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000300C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003010) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003014) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003018) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000301C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003020) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003024) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003028) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000302C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003030) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003034) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003038) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000303C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003040) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003044) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003048) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000304C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003050) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003054) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003058) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000305C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003060) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003064) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003068) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000306C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003070) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003074) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003078) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000307C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003080) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003084) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003088) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000308C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003090) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003094) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003098) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000309C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000030FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003100) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003104) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003108) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000310C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003110) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003114) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003118) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000311C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003120) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003124) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003128) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000312C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003130) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003134) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003138) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000313C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003140) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003144) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003148) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000314C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003150) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003154) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003158) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000315C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003160) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003164) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003168) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000316C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003170) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003174) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003178) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000317C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003180) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003184) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003188) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000318C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003190) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003194) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003198) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000319C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000031FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003200) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003204) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003208) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000320C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003210) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003214) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003218) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000321C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003220) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003224) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003228) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000322C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003230) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003234) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003238) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000323C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003240) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003244) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003248) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000324C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003250) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003254) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003258) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000325C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003260) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003264) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003268) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000326C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003270) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003274) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003278) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000327C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003280) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003284) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003288) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000328C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003290) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003294) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003298) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000329C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000032FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003300) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003304) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003308) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000330C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003310) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003314) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003318) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000331C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003320) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003324) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003328) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000332C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003330) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003334) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003338) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000333C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003340) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003344) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003348) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000334C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003350) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003354) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003358) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000335C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003360) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003364) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003368) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000336C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003370) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003374) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003378) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000337C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003380) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003384) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003388) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000338C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003390) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003394) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003398) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000339C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000033FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003400) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003404) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003408) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000340C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003410) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003414) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003418) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000341C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003420) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003424) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003428) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000342C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003430) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003434) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003438) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000343C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003440) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003444) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003448) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000344C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003450) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003454) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003458) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000345C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003460) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003464) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003468) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000346C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003470) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003474) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003478) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000347C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003480) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003484) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003488) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000348C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003490) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003494) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003498) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000349C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000034FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003500) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003504) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003508) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000350C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003510) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003514) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003518) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000351C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003520) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003524) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003528) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000352C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003530) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003534) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003538) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000353C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003540) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003544) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003548) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000354C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003550) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003554) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003558) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000355C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003560) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003564) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003568) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000356C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003570) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003574) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003578) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000357C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003580) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003584) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003588) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000358C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003590) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003594) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003598) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000359C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000035FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003600) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003604) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003608) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000360C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003610) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003614) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003618) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000361C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003620) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003624) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003628) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000362C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003630) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003634) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003638) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000363C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003640) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003644) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003648) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000364C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003650) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003654) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003658) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000365C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003660) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003664) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003668) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000366C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003670) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003674) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003678) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000367C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003680) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003684) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003688) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000368C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003690) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003694) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003698) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000369C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000036FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003700) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003704) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003708) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000370C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003710) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003714) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003718) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000371C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003720) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003724) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003728) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000372C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003730) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003734) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003738) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000373C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003740) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003744) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003748) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000374C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003750) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003754) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003758) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000375C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003760) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003764) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003768) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000376C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003770) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003774) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003778) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000377C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003780) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003784) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003788) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000378C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003790) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003794) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003798) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000379C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000037FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003800) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003804) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003808) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000380C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003810) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003814) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003818) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000381C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003820) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003824) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003828) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000382C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003830) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003834) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003838) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000383C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003840) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003844) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003848) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000384C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003850) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003854) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003858) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000385C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003860) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003864) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003868) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000386C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003870) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003874) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003878) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000387C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003880) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003884) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003888) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000388C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003890) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003894) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003898) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000389C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000038FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003900) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003904) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003908) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000390C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003910) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003914) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003918) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000391C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003920) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003924) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003928) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000392C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003930) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003934) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003938) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000393C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003940) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003944) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003948) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000394C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003950) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003954) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003958) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000395C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003960) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003964) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003968) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000396C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003970) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003974) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003978) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000397C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003980) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003984) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003988) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000398C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003990) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003994) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003998) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000399C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039A0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039A4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039A8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039AC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039B4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039B8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039BC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039C0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039C4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039C8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039CC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039D0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039D4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039D8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039DC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039E4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039E8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039EC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039F0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039F4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039F8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000039FC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003A9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003ABC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003ACC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003ADC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003AFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003B9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003BFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003C9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003CFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003D9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003DFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003E9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003ECC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003ED0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003ED4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003ED8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003EFC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F00) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F04) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F08) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F0C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F10) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F14) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F18) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F1C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F20) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F24) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F28) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F2C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F30) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F34) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F38) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F3C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F40) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F44) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F48) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F4C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F50) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F54) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F58) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F5C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F60) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F64) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F68) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F6C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F70) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F74) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F78) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F7C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F80) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F84) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F88) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F8C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F90) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F94) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F98) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003F9C) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FA0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FA4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FA8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FAC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FB0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FB4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FB8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FBC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FC0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FC4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FC8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FCC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FD0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FD4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FD8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FDC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FE0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FE4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FE8) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FEC) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FF0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FF4) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x00003FF8) 
hwWrite(CH, DATA, ADDR) = (0, 0x03000000, 0x00003FFC) 
// -------------------------------------- FW Code Labels LPDDR4  -------------------------------------- // 
hwWrite(CH, DATA, ADDR) = (0, 0x006A0067, 0x0000A020) 
hwWrite(CH, DATA, ADDR) = (0, 0x00880067, 0x0000A030) 
hwWrite(CH, DATA, ADDR) = (0, 0x00670067, 0x0000A040) 
hwWrite(CH, DATA, ADDR) = (0, 0x0000007D, 0x0000A050) 
hwWrite(CH, DATA, ADDR) = (0, 0x04260039, 0x0000A060) 
hwWrite(CH, DATA, ADDR) = (0, 0x00410372, 0x0000A0B0) 
hwWrite(CH, DATA, ADDR) = (0, 0x00670067, 0x0000A1D0) 
// ==================================================================================================== // 
// ==========================================  Retrain Mode  ========================================== // 
// ==================================================================================================== // 
// +++++++++++++++++++++++++++++++++++++++ Retrain HW mode ON   +++++++++++++++++++++++++++++++++++++++ // 
hwWrite(CH, DATA, ADDR) = (0, 0x00000128, 0x0000A0E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x040C0C28, 0x00021240) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00021250) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A0A0101, 0x00021310) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008001, 0x00021340) 
hwWrite(CH, DATA, ADDR) = (0, 0x040C0C28, 0x00029240) 
hwWrite(CH, DATA, ADDR) = (0, 0x00010001, 0x00029250) 
hwWrite(CH, DATA, ADDR) = (0, 0x0A0A0101, 0x00029310) 
hwWrite(CH, DATA, ADDR) = (0, 0x00008001, 0x00029340) 
// ==================================================================================================== // 
// ==================================  Setting Rank Update Timings   ================================== // 
// ==================================================================================================== // 
hwWrite(CH, DATA, ADDR) = (0, 0x008C4088, 0x000091B0) 
// ==================================================================================================== // 
// ========================================  ReadGate Scheme   ======================================== // 
// ==================================================================================================== // 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x0000A194) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000211E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x02240522, 0x00021360) 
hwWrite(CH, DATA, ADDR) = (0, 0x00000000, 0x000291E0) 
hwWrite(CH, DATA, ADDR) = (0, 0x02240522, 0x00029360) 
// ==================================================================================================== // 
// ===================================== INFO: Internal CSR Data  ===================================== // 
// ==================================================================================================== // 
// ++++++++++++++++++++++++++++++++++++++++  Data Bank LPDDR4  ++++++++++++++++++++++++++++++++++++++++ // 
Parameter                                 ch0_fsp0  ch0_fsp1
dfiperiod                                     1876      1250
ckperiod                                       469       312
dfi2ckratio                                      0         2
latencyMode                                      1         1
EffectiveRL                                     40        22
EffectiveWL                                     18        10
BL_n                                             8         8
EffectiveBL                                      4         4
TrainedRLOffset                                  0         0
TrainedWLOffset                                  0         0
BL_n_min                                         4         4
BL_n_max                                         4         4
FSP_phy                                          0         0
RankNum                                          4         4
tINIT1                                   200000000 200000000
tINIT2                                       10000     10000
tINIT3                                  20000000002000000000
tINIT4                                           5         5
tINIT5                                     2000000   2000000
tZQLAT                                       30000     30000
tZQCAL                                     1000000   1000000
tDRAMOSC                                      2048      2048
tDRAMOSC_abs                                 40000     40000
tWLMRD                                          40        40
tDQSL                                            0         0
tWLO                                         20000     20000
lp4wdqs_Enable1_RunLength                       21        21
lp4wdqs_Enable1_Select                          10        10
lp4wdqs_Toggle1_RunLength                        2         2
lp4wdqs_Toggle1_Select                          19        11
lp4wdqs_Enable2_EnDel                           24        24
lp4wdqs_Enable2_Sel                              0         0
lp4wdqs_Toggle2_Osel                            13         5
lp4wdqs_Toggle2_Sel                              2         2
tCKELCK                                       5000      5000
tDQSCKE                                      10000     10000
tCKEHDQS                                     10000     10000
tCKCKEH                                       1750      1750
tCAENT                                      250000    250000
tCKPRECS                                      7500      7500
tCKPSTCS                                      7500      7500
tADR                                         20000     20000
tCACD                                        20000     20000
tMRZ                                          1500      1500
tXCBT                                       250000    250000
tDStrain                                      2000      2000
tDHtrain                                      2000      2000
tVREFCA_LONG                                250000    250000
tVREFCA_SHORT                                80000     80000
tCKFSPE                                       7500      7500
tCKFSPX                                       7500      7500
tFC_Short                                   200000    200000
tFC_Middle                                  200000    200000
tFC_Long                                    250000    250000
tWCKENL_WR                                       4         4
tWCKENL_RD                                       7         7
tWCKENL_FS                                       2         2
tWCKPRE_Static                                   4         4
tWCKPRE_Toggle_WR                                2         2
tWCKPRE_Toggle_RD                                7         7
tWCKPRE_Toggle_FS                                3         3
tWCKPST                                          2         2
tWCKPST_Reminder                                 5         5
tWCKPST_RU                                       1         1
tWCK_DRV_RL                                     22        22
tWCK_DRV_WL                                     10        10
tWDQS_on                                         8         8
tWDQS_off                                       36        36
tWCKENL_FS_ACTIVE_OFFSET                         2         2
tDQS_off                                         0         0
tVREF_long                                  300000    300000
tMRR                                             8         8
tMRW                                         10000     10000
tMRD                                         14000     14000
tMOD                                         14000     14000
tRTRRD                                          20        20
tWRWTR                                          20        20
tRTW                                            20        20
tWTR                                         10000     10000
tRFCAB                                      380000    380000
tREFI                                      3904000   3904000
tRPAB                                        21000     21000
tSR                                          15000     15000
tXSR                                          7500      7500
tXP                                           7500      7500
tRCD                                         18000     18000
tSDO                                         20000     20000
RFF_CNT                                          0         0
WFF_CNT                                          0         0
RL_RLOff                                         0         0
WL_WLOff                                         0         0
CS_SAMPLE_PATTERN                             1028      1028
CS_UI                                            0         0
CBT_ZEROINDEX                                    2         2
IncrTrainIndex                                   0         0
OscRuntime                                    2048      2048
psm_sram_latency                                 2         2
psm_sram_ptr_sep                                 7         7
CBT_byte0_index                                  0         0
LowSpeedSetupTime                                7         7
TxPIDly                                          0         0
TxUIDly                                          2         2
RxPIDly                                          0         0
RxUIDly                                          2         2
WLDly                                            0         0
RLDly                                            0         0
VrefDly                                          0         0
CsRlOffset                                       1         1
CsRlOffsetSign                                   1         1
CsWlOffset                                       1         1
CsWlOffsetSign                                   1         1
DqsUIUpdPulseEn                                  0         0
csr_CATR                                         0         0
csr_SCLS                                         0         0
csr_SEMode                                       0         0
csr_RZQI                                         0         0
csr_RFMSupport                                   0         0
csr_LatencyMode                                  0         0
csr_RefreshMode                                  0         0
csr_RPST                                         1         1
csr_nWR                                          7         0
csr_RDPRE                                        1         1
csr_WRPRE                                        1         1
csr_BL                                           0         0
csr_WRLev                                        0         0
csr_WLS                                          0         0
csr_WL                                           7         3
csr_RL                                           7         3
csr_DbiWr                                        0         0
csr_DbiRd                                        0         0
csr_PDDS                                         6         6
csr_PPRP                                         0         0
csr_WRPST                                        0         0
csr_PUCAL                                        1         1
csr_TUF                                          0         0
csr_ThermalOffs                                  0         0
csr_PPRE                                         0         0
csr_SRAbort                                      0         0
csr_RefreshRate                                  3         3
csr_ManufrID                                     0         0
csr_RevID1                                       0         0
csr_RevID2                                       0         0
csr_IOWidth                                      0         0
csr_Density                                      0         0
csr_Type                                         0         0
csr_VenSpecTstReg                                0         0
csr_ZQReset                                      0         0
csr_CAODT                                        0         0
csr_DQODT                                        0         0
csr_CBTMode                                      0         0
csr_VRCA                                         1         1
csr_VREFCA                                      13        13
csr_FSPOP                                        0         0
csr_FSPWR                                        1         1
csr_DMD                                          0         0
csr_RRO                                          0         0
csr_VRCG                                         0         0
csr_VRO                                          0         0
csr_RPT                                          0         0
csr_CBT                                          0         0
csr_VRDQ                                         1         1
csr_VREFDQ                                      13        13
csr_LowByteInvertDqCalibration                  85        85
csr_PASRBankMask                                 0         0
csr_PASRSegMask                                  0         0
csr_DQSOscillatorCountLSB                        0         0
csr_DQSOscillatorCountMSB                        0         0
csr_UpperByteInvertDqCalibration                85        85
csr_ODTDx82Ch                                    0         0
csr_ODTDCA                                       0         0
csr_ODTECS                                       0         0
csr_ODTECK                                       0         0
csr_SOCODT                                       0         0
csr_DQSIntervalTimerRunTime                      0         0
csr_RAAMMT                                       0         0
csr_RAAIMT                                       1         1
csr_RFM                                          0         0
csr_PPRResource                                  0         0
csr_SCL                                          0         0
csr_rsvd_testing30                               0         0
csr_ByteModeVrefSel                              0         0
csr_DQCalibrationPatternA                       90        90
csr_RAADEC                                       0         0
csr_rsvd_testing39                               0         0
csr_DQCalibrationPatternB                       60        60
DLL_SamplingDelay                               15        15
DLL_OverSampleRate                              15        15
DLL_CodeChangeDelay                             15        15
DLL_EnablePeriodicCal                          350         0
DLL_Period                                 1193046   1193046
DLL_EnableUpdateLimit                            1         1
DLL_UpdateLimit                                  4         4
DLL_CommandWait                                  3         3
DLL_DcdlStart                                    0         0
DLL_DcdlStep                                     8         8
ImpCal_Disable                                   0         0
ImpCal_EnablePeriodic                            1         1
ImpCal_Period                                 5000      5000
ImpCal_LpddrMode                                 2         2
SAR_LogicStrobeLen                               2         2
SAR_LogicSamples                                 0         0
PLL_DisableHwCal                                 0         0
CA_ptrgenfine_left                               3         3
CA_ptrgenfine_right                              3         3
CA_clk_div                                       0         0
DQ_ptrgenfine_left                               2         2
DQ_ptrgenfine_right                              2         2
DQ_clken_left                                    1         1
DQ_clken_right                                   1         1
CA_clken_left                                    0         0
CA_clken_right                                   1         1
PLL_left_sync_clken_sel                          1         1
PLL_right_sync_clken_sel                         0         0
CBT_CommandWait                                 20        20
CBT_SampleDelay                                 20        20
CBT_SequencerMode                                2         2
CBT_OverSampleRate                               3         3
WCKT_CommandWait                                20        20
WCKT_SampleDelay                                20        20
WCKT_SequencerMode                               2         2
WCKT_OverSampleRate                              3         3
tRTW_train                                      40        40
tWTR_train                                      40        40
tMaxWait_train                                  10        10
tUpdateHold                                      4         4
LowFreqBin                                       0         0
BumpReMapCA_0                                    0         0
BumpReMapCA_1                                    1         1
BumpReMapCA_2                                    2         2
BumpReMapCA_3                                    3         3
BumpReMapCA_4                                    4         4
BumpReMapCA_5                                    5         5
BumpReMapCS_0                                    6         6
BumpReMapCK                                      0         0
BumpReMapDBYTE_0                                 0         0
BumpReMapDQ0_0                                   0         0
BumpReMapDQ0_1                                   1         1
BumpReMapDQ0_2                                   2         2
BumpReMapDQ0_3                                   3         3
BumpReMapDQ0_4                                   4         4
BumpReMapDQ0_5                                   5         5
BumpReMapDQ0_6                                   6         6
BumpReMapDQ0_7                                   7         7
BumpReMapDMI_0                                   8         8
BumpReMapDQS_0                                   0         0
BumpReMapDBYTE_1                                 1         1
BumpReMapDQ1_0                                   0         0
BumpReMapDQ1_1                                   1         1
BumpReMapDQ1_2                                   2         2
BumpReMapDQ1_3                                   3         3
BumpReMapDQ1_4                                   4         4
BumpReMapDQ1_5                                   5         5
BumpReMapDQ1_6                                   6         6
BumpReMapDQ1_7                                   7         7
BumpReMapDMI_1                                   8         8
BumpReMapDQS_1                                   0         0
PLL_NumCalClkCycles                             16        16
PLL_prediv                                       5         5
PLL_fbdiv                                        6         6
PLL_postdiv                                      1         1
PLL_caldiv                                       5         5
PLL_TargetMinCnt                               256       256
PllWait_Timer                                  533       800
Retrain_Timer                              2132196   3200000
// ++++++++++++++++++++++++++++++++++++++++  CSR Bank LPDDR4   ++++++++++++++++++++++++++++++++++++++++ // 
Parameter                                 ch0_fsp0  ch0_fsp1
dfi2ckratio                                      4         4
latencyMode                                      1         1
gpp0                                             0         0
gpp1                                             0         0
gpp2                                             0         0
gpp3                                             0         0
psm_sram_latency                                 2         2
psm_sram_ptr_sep                                 7         7
CBT_byte0_index                                  0         0
CA_ptrgenfine_left                               5         5
CA_ptrgenfine_right                              5         5
DQ_ptrgenfine_left                               4         4
DQ_ptrgenfine_right                              4         4
CA_clk_div                                       0         0
DQ_clken_left                                    1         1
DQ_clken_right                                   1         1
CA_clken_left                                    0         0
CA_clken_right                                   1         1
PLL_left_sync_clken_sel                          1         1
PLL_right_sync_clken_sel                         0         0
EffectiveRL                                     40        22
EffectiveWL                                     18        10
BL_n                                             8         8
EffectiveBL                                      4         4
TrainedRLOffset                                  0         0
TrainedWLOffset                                  0         0
BL_n_min                                         4         4
BL_n_max                                         4         4
FSP_phy                                          0         1
RankNum                                          4         4
tINIT1                                         427       640
tINIT3                                         427       640
tINIT5                                          28        40
tINIT2                                          24        32
tINIT4                                           5         5
tZQLAT                                          64        96
tZQCAL                                        2133      3200
tCKELCK                                         11        16
tDQSCKE                                         22        32
tCKEHDQS                                        22        32
tCKCKEH                                          4         6
tCAENT                                         534       800
tCKPRECS                                        18        26
tCKPSTCS                                        16        24
tADR                                         20000     20000
tCACD                                           43        64
tMRZ                                             4         5
tXCBT                                           34        50
tDStrain                                         5         7
tDHtrain                                         5         7
tVREFCA_LONG                                   533       800
tVREFCA_SHORT                                  170       256
tCKFSPE                                         16        24
tCKFSPX                                         16        24
tFC_Short                                      427       640
tFC_Middle                                     427       640
tFC_Long                                       534       800
tWLMRD                                          40        40
tDQSL                                            1         1
tWLO                                            42        64
tVREF_long                                     640       960
tDRAMOSC                                      2134      2176
tWDQS_on                                         8         8
tWDQS_off                                       36        36
tWCKENL_FS                                      10        10
tWCKENL_FS_ACTIVE_OFFSET                         4         4
tWCKPRE_Static                                   9         1
tWCKPRE_Toggle_FS                                2         2
tWCKPST_Reminder                                 0         0
tDQS_off                                        10        18
lp4wdqs_Enable1_RunLength                       21        21
lp4wdqs_Enable1_Select                          10        10
lp4wdqs_Toggle1_RunLength                        2         2
lp4wdqs_Toggle1_Select                          19        11
lp4wdqs_Enable2_EnDel                           24        24
lp4wdqs_Enable2_Sel                              0         0
lp4wdqs_Toggle2_Osel                            13         5
lp4wdqs_Toggle2_Sel                              2         2
tWCKENL_WR                                       4         4
tWCKENL_RD                                       7         7
tWCKPRE_Toggle_WR                                2         2
tWCKPRE_Toggle_RD                                7         7
tWCKPST                                          2         2
tWCKPST_RU                                       1         1
tWCK_DRV_WL                                     18        10
tWCK_DRV_RL                                     40        22
tMRR                                             8         8
tMRD                                            30        45
tMRW                                            22        32
tMOD                                            30        45
tRTRRD                                          20        20
tWRWTR                                          20        20
tRTW                                            20        20
tWTR                                            22        32
tRFCAB                                         811      1216
tREFI                                         8323     12491
tRPAB                                           45        68
tSR                                             32        48
tXSR                                           827      1240
tXP                                             16        24
tRCD                                            39        58
tSDO                                            43        64
RFF_CNT                                          0         0
WFF_CNT                                          0         0
RL_RLOff                                         0         0
WL_WLOff                                         0         0
CS_SAMPLE_PATTERN                             1028      1028
CBT_ZEROINDEX                                    2         2
CS_UI                                            0         0
IncrTrainIndex                                   0         0
OscRuntime                                       0         0
csr_CATR                                         0         0
csr_SCLS                                         0         0
csr_SEMode                                       0         0
csr_RZQI                                         0         0
csr_RFMSupport                                   0         0
csr_LatencyMode                                  0         0
csr_RefreshMode                                  0         0
csr_RPST                                         1         1
csr_nWR                                          7         0
csr_RDPRE                                        1         1
csr_WRPRE                                        1         1
csr_BL                                           0         0
csr_WRLev                                        0         0
csr_WLS                                          0         0
csr_WL                                           7         3
csr_RL                                           7         3
csr_DbiWr                                        0         0
csr_DbiRd                                        0         0
csr_PDDS                                         6         6
csr_PPRP                                         0         0
csr_WRPST                                        0         0
csr_PUCAL                                        1         1
csr_TUF                                          0         0
csr_ThermalOffs                                  0         0
csr_PPRE                                         0         0
csr_SRAbort                                      0         0
csr_RefreshRate                                  3         3
csr_ManufrID                                     0         0
csr_RevID1                                       0         0
csr_RevID2                                       0         0
csr_IOWidth                                      0         0
csr_Density                                      0         0
csr_Type                                         0         0
csr_VenSpecTstReg                                0         0
csr_ZQReset                                      0         0
csr_CAODT                                        0         0
csr_DQODT                                        0         0
csr_CBTMode                                      0         0
csr_VRCA                                         1         1
csr_VREFCA                                      13        13
csr_FSPOP                                        0         0
csr_FSPWR                                        1         1
csr_DMD                                          0         0
csr_RRO                                          0         0
csr_VRCG                                         0         0
csr_VRO                                          0         0
csr_RPT                                          0         0
csr_CBT                                          0         0
csr_VRDQ                                         1         1
csr_VREFDQ                                      13        13
csr_LowByteInvertDqCalibration                  85        85
csr_PASRBankMask                                 0         0
csr_PASRSegMask                                  0         0
csr_DQSOscillatorCountLSB                        0         0
csr_DQSOscillatorCountMSB                        0         0
csr_UpperByteInvertDqCalibration                85        85
csr_ODTDx82Ch                                    0         0
csr_ODTDCA                                       0         0
csr_ODTECS                                       0         0
csr_ODTECK                                       0         0
csr_SOCODT                                       0         0
csr_DQSIntervalTimerRunTime                      0         0
csr_RAAMMT                                       0         0
csr_RAAIMT                                       1         1
csr_RFM                                          0         0
csr_PPRResource                                  0         0
csr_SCL                                          0         0
csr_rsvd_testing30                               0         0
csr_ByteModeVrefSel                              0         0
csr_DQCalibrationPatternA                       90        90
csr_RAADEC                                       0         0
csr_rsvd_testing39                               0         0
csr_DQCalibrationPatternB                       60        60
TxPIDly                                          0         0
TxUIDly                                          2         2
RxPIDly                                          0         0
RxUIDly                                          2         2
WLDly                                            0         0
RLDly                                            0         0
VrefDly                                          0         0
CsRlOffset                                       1         1
CsRlOffsetSign                                   1         1
CsWlOffset                                       1         1
CsWlOffsetSign                                   1         1
DqsUIUpdPulseEn                                  0         0
TrainError                                       0         0
DftDone                                          0         0
LowFreqBin                                       0         0
LowSpeedSetupTime                                7         7
BumpReMapCA_0                                    0         0
BumpReMapCA_1                                    1         1
BumpReMapCA_2                                    2         2
BumpReMapCA_3                                    3         3
BumpReMapCA_4                                    4         4
BumpReMapCA_5                                    5         5
BumpReMapCS_0                                    6         6
BumpReMapCK                                      0         0
BumpReMapDBYTE_0                                 0         0
BumpReMapDQ0_0                                   0         0
BumpReMapDQ0_1                                   1         1
BumpReMapDQ0_2                                   2         2
BumpReMapDQ0_3                                   3         3
BumpReMapDQ0_4                                   4         4
BumpReMapDQ0_5                                   5         5
BumpReMapDQ0_6                                   6         6
BumpReMapDQ0_7                                   7         7
BumpReMapDMI_0                                   8         8
BumpReMapDQS_0                                   0         0
BumpReMapDBYTE_1                                 1         1
BumpReMapDQ1_0                                   0         0
BumpReMapDQ1_1                                   1         1
BumpReMapDQ1_2                                   2         2
BumpReMapDQ1_3                                   3         3
BumpReMapDQ1_4                                   4         4
BumpReMapDQ1_5                                   5         5
BumpReMapDQ1_6                                   6         6
BumpReMapDQ1_7                                   7         7
BumpReMapDMI_1                                   8         8
BumpReMapDQS_1                                   0         0
DLL_SamplingDelay                               15        15
DLL_OverSampleRate                              15        15
DLL_CodeChangeDelay                             15        15
DLL_EnablePeriodicCal                            0         0
DLL_Period                                   10000     10000
DLL_EnableUpdateLimit                            0         0
DLL_UpdateLimit                                  4         4
DLL_CommandWait                                  3         3
DLL_DcdlStart                                    0         0
DLL_DcdlStep                                     8         8
DisableHwCal                                     0         0
ImpCal_Disable                                   0         0
ImpCal_EnablePeriodic                            1         1
ImpCal_Period                                   26        40
ImpCal_LpddrMode                                 2         2
SAR_LogicStrobeLen                               2         2
SAR_LogicSamples                                 0         0
CBT_CommandWait                                 15        22
CBT_SampleDelay                                 23        29
CBT_SequencerMode                                2         2
CBT_OverSampleRate                               3         3
CBT_d0                                           1         1
CBT_d1                                          23        29
CBT_d2                                          24        30
CBT_d3                                           8        12
CBT_d7                                          24        30
WCKT_CommandWait                                16        23
WCKT_SampleDelay                                21        27
WCKT_SequencerMode                               2         2
WCKT_OverSampleRate                              3         3
WCKT_d0                                          1         1
WCKT_d1                                         21        27
WCKT_d2                                         22        28
WCKT_d3                                         10        12
WCKT_d7                                         22        28
tRTW_train                                      20        20
tWTR_train                                      20        20
tMaxWait_train                                  10        10
tUpdateHold                                      4         4
RGT_SequencerMode                                3         3
RGT_OverSampleRate                               3         3
RGT_CommandWait                                  1         1
RGT_Spacer                                      19        19
RGT_d0                                           6         6
RGT_d1                                          33        33
RGT_d2                                          48        48
RGT_d3                                          49        49
RGT_d4                                           1         1
RGT_d5                                           1         1
RGT_d6                                           1         1
RGT_d7                                          50        50
RGT_w0                                          32        32
RGT_w1                                          32        32
RGF_SequencerMode                                2         2
RGF_OverSampleRate                               3         3
RGF_CommandWait                                 11        11
RGF_Spacer                                       0         0
RGF_d0                                           1         1
RGF_d1                                          11         7
RGF_d2                                          33        29
RGF_d3                                           1         1
RGF_d4                                           1         1
RGF_d5                                           1         1
RGF_d6                                           1         1
RGF_d7                                          34        30
RGF_w0                                          32        32
RGF_w1                                          32        32
RET_SequencerMode                                3         3
RET_OverSampleRate                               3         3
RET_CommandWait                                  1         1
RET_Spacer                                      40        36
RET_d0                                           1         1
RET_d1                                          11         7
RET_d2                                          27        23
RET_d3                                          11         7
RET_d4                                          26        22
RET_d5                                           1         1
RET_d6                                           1         1
RET_d7                                          28        24
RET_w0                                          32        32
RET_w1                                          32        32
WFT_SequencerMode                                2         2
WFT_OverSampleRate                               4         4
WFT_CommandWait                                 11        11
WFT_Spacer                                       0         0
WFT_d0                                           1         1
WFT_d1                                          90        86
WFT_d2                                           6         4
WFT_d3                                          80        80
WFT_d4                                           1         1
WFT_d5                                           1         1
WFT_d6                                           1         1
WFT_d7                                         107       104
WFT_w0                                         544       544
WFT_w1                                         544       544
WET_SequencerMode                                3         3
WET_OverSampleRate                               4         4
WET_CommandWait                                  3         3
WET_Spacer                                      60        60
WET_d0                                           1         1
WET_d1                                          50        46
WET_d2                                           6         4
WET_d3                                          40        40
WET_d4                                           2         2
WET_d5                                          41        41
WET_d6                                           1         1
WET_d7                                          65        61
WET_w0                                         544       544
WET_w1                                         544       544
CSRInit Finished
CSRAddr Struct Validation...
Pmem Dbg 8188 - 8188 
Common Dbg 32768 - 32768 
Common Dbg 32784 - 32784 
Common Dbg 32800 - 32800 
Common Dbg 32816 - 32816 
Dbyte Dbg 135744 - 135744 
Dbyte Dbg 168512 - 168512 
Dbyte Dbg 135904 - 135904 
Dbyte Dbg 168672 - 168672 
CSRAddr Struct Validation SUCCESS...
Defaults Dbg uDUT_DEFAULT.tss_lp5_csr_DbyteBlock[1].s.DqsLaneRanked[3].s.RxVrefSelection_hip[1].dw --> 0X1000000 
Defaults Dbg uDUT_DEFAULT.tss_lp5_csr_CaBlock.s.CkLane[0].s.Impedance_hip[1].bf.PullUp_coarse --> 0X6 
Defaults Dbg uDUT_DEFAULT.tss_lp5_csr_CommonBlock.s.Training.s.SweepConfiguration.dw --> 0X2003 
Defaults Dbg uDUT_DEFAULT.tss_lp5_csr_CommonBlock.s.PhyState.s.Retrain[1].dw --> 0X100000 
